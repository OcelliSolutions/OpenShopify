openapi: 3.0.1
info:
  title: Shipping & Fulfillment
  description: Shipping & Fulfillment
  version: '2022-10'
servers:
  - url: 'https://{store_name}.myshopify.com/admin/api/{api_version}'
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
      api_version:
        default: '2022-10'
        description: The api version.
  - url: 'https://{store_name}.myshopify.com/admin'
    description: Some endpoints do not use the standard routing. This is an alternate.
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
paths:
  /assigned_fulfillment_orders.json:
    get:
      tags:
        - AssignedFulfillmentOrder
      summary: Retrieves a list of fulfillment orders on a shop for a specific app
      operationId: ListFulfillmentOrdersOnShopForSpecificApp
      parameters:
        - name: assignment_status
          in: query
          description: 'The assigment status of the fulfillment orders that should be returned:'
          schema:
            $ref: '#/components/schemas/FulfillmentAssignmentStatus'
        - name: location_ids
          in: query
          description: The IDs of the assigned locations of the fulfillment orders that should be returned.
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignedFulfillmentOrderList'
  '/fulfillment_orders/{fulfillment_order_id}/cancellation_request.json':
    post:
      tags:
        - CancellationRequest
      summary: Sends a cancellation request
      description: Sends a cancellation request to the fulfillment service of a fulfillment order.
      operationId: SendCancellationRequest
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCancellationRequestRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendCancellationRequestRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderWithOriginItem'
  '/fulfillment_orders/{fulfillment_order_id}/cancellation_request/accept.json':
    post:
      tags:
        - CancellationRequest
      summary: Accepts a cancellation request
      description: Accepts a cancellation request sent to a fulfillment service for a fulfillment order.
      operationId: AcceptCancellationRequest
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptCancellationRequestRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AcceptCancellationRequestRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderWithOriginItem'
  '/fulfillment_orders/{fulfillment_order_id}/cancellation_request/reject.json':
    post:
      tags:
        - CancellationRequest
      summary: Rejects a cancellation request
      description: Rejects a cancellation request sent to a fulfillment service for a fulfillment order.
      operationId: RejectCancellationRequest
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectCancellationRequestRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RejectCancellationRequestRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderWithOriginItem'
  /carrier_services.json:
    post:
      tags:
        - CarrierService
      summary: Create a new CarrierService
      operationId: CreateCarrierService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCarrierServiceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCarrierServiceRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierServiceItem'
    get:
      tags:
        - CarrierService
      summary: Receive a list of all CarrierServices
      operationId: ListCarrierServices
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierServiceList'
  '/carrier_services/{carrier_service_id}.json':
    put:
      tags:
        - CarrierService
      summary: Modify an existing CarrierService
      description: Updates a carrier service. Only the app that creates a carrier service can update it.
      operationId: UpdateCarrierService
      parameters:
        - name: carrier_service_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCarrierServiceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCarrierServiceRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierServiceItem'
    get:
      tags:
        - CarrierService
      summary: Receive a single CarrierService
      operationId: GetCarrierService
      parameters:
        - name: carrier_service_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierServiceItem'
    delete:
      tags:
        - CarrierService
      summary: Remove an existing CarrierService
      operationId: DeleteCarrierService
      parameters:
        - name: carrier_service_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  '/orders/{order_id}/fulfillments.json':
    get:
      tags:
        - Fulfillment
      summary: Retrieves fulfillments associated with an order
      description: 'Retrieves fulfillments associated with an order. **Note:** As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the `page` parameter will return an error. To learn more, see [*Make paginated requests to the REST Admin API*](/api/usage/pagination-rest).'
      operationId: GetFulfillmentsAssociatedWithOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: created_at_max
          in: query
          description: 'Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          description: 'Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
        - name: fields
          in: query
          description: A comma-separated list of fields to include in the response.
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the amount of results.
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          description: A unique ID used to access a certain page of results.
          schema:
            type: string
        - name: since_id
          in: query
          description: Restrict results to after the specified ID.
          schema:
            type: integer
            format: int64
        - name: updated_at_max
          in: query
          description: 'Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          description: 'Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentList'
  '/fulfillment_orders/{fulfillment_order_id}/fulfillments.json':
    get:
      tags:
        - Fulfillment
      summary: Retrieves fulfillments associated with a fulfillment order
      operationId: GetFulfillmentsAssociatedWithFulfillmentOrder
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentList'
  '/orders/{order_id}/fulfillments/count.json':
    get:
      tags:
        - Fulfillment
      summary: Retrieves a count of fulfillments associated with a specific order
      operationId: CountFulfillmentsAssociatedWithSpecificOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: created_at_max
          in: query
          description: 'Count fulfillments created before date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          description: 'Count fulfillments created after date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
        - name: updated_at_max
          in: query
          description: 'Count fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          description: 'Count fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/orders/{order_id}/fulfillments/{fulfillment_id}.json':
    get:
      tags:
        - Fulfillment
      summary: Receive a single Fulfillment
      description: Retrieve a specific fulfillment
      operationId: GetFulfillment
      parameters:
        - name: fulfillment_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          description: Comma-separated list of fields to include in the response.
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentItem'
  /fulfillments.json:
    post:
      tags:
        - Fulfillment
      summary: Creates a fulfillment for one or many fulfillment orders
      description: Creates a fulfillment for one or many fulfillment orders. The fulfillment orders are associated with the same order and are assigned to the same location.
      operationId: CreateFulfillmentForOneOrManyFulfillmentOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFulfillmentForOneOrManyFulfillmentOrdersRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateFulfillmentForOneOrManyFulfillmentOrdersRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentItem'
  '/fulfillments/{fulfillment_id}/update_tracking.json':
    post:
      tags:
        - Fulfillment
      operationId: UpdateTrackingInformationForFulfillment
      parameters:
        - name: fulfillment_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackingInformationForFulfillmentRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTrackingInformationForFulfillmentRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentItem'
  '/fulfillments/{fulfillment_id}/cancel.json':
    post:
      tags:
        - Fulfillment
      summary: Cancels a fulfillment
      operationId: CancelFulfillment
      parameters:
        - name: fulfillment_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentItem'
  '/orders/{order_id}/fulfillments/{fulfillment_id}/events.json':
    get:
      tags:
        - FulfillmentEvent
      summary: Retrieves a list of fulfillment events for a specific fulfillment
      operationId: ListFulfillmentEventsForSpecificFulfillment
      parameters:
        - name: fulfillment_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentEventList'
    post:
      tags:
        - FulfillmentEvent
      summary: Creates a fulfillment event
      operationId: CreateFulfillmentEvent
      parameters:
        - name: fulfillment_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFulfillmentEventRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateFulfillmentEventRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentEventItem'
  '/orders/{order_id}/fulfillments/{fulfillment_id}/events/{event_id}.json':
    get:
      tags:
        - FulfillmentEvent
      summary: Retrieves a specific fulfillment event
      operationId: GetFulfillmentEvent
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fulfillment_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentEventItem'
    delete:
      tags:
        - FulfillmentEvent
      summary: Deletes a fulfillment event
      operationId: DeleteFulfillmentEvent
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fulfillment_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  '/orders/{order_id}/fulfillment_orders.json':
    get:
      tags:
        - FulfillmentOrder
      summary: Retrieves a list of fulfillment orders for a specific order
      operationId: ListFulfillmentOrdersForSpecificOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderList'
  '/fulfillment_orders/{fulfillment_order_id}.json':
    get:
      tags:
        - FulfillmentOrder
      summary: Retrieves a specific fulfillment order
      operationId: GetFulfillmentOrder
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderItem'
  '/fulfillment_orders/{fulfillment_order_id}/cancel.json':
    post:
      tags:
        - FulfillmentOrder
      summary: Cancel a fulfillment order
      description: Marks a fulfillment order as cancelled.
      operationId: CancelFulfillmentOrder
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderItem'
  '/fulfillment_orders/{fulfillment_order_id}/close.json':
    post:
      tags:
        - FulfillmentOrder
      summary: Marks a fulfillment order as incomplete
      description: 'Marks an in progress fulfillment order as incomplete, indicating the fulfillment service is unable to ship any remaining items and intends to close the fulfillment order.'
      operationId: MarkFulfillmentOrderAsIncomplete
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkFulfillmentOrderAsIncompleteRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MarkFulfillmentOrderAsIncompleteRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderItem'
  '/fulfillment_orders/{fulfillment_order_id}/move.json':
    post:
      tags:
        - FulfillmentOrder
      summary: Moves a fulfillment order to a new location
      description: "Moves a fulfillment order from one location to another location.Moving a fulfillment order will fail in the following events:\r\n\r\n*   The fulfillment order is closed. \r\n*   The new location doesn't have the necessary inventory available. \r\n*   The API client doesn't have the correct permissions."
      operationId: MoveFulfillmentOrderToNewLocation
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFulfillmentOrderToNewLocationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MoveFulfillmentOrderToNewLocationRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderItem'
  '/fulfillment_orders/{fulfillment_order_id}/open.json':
    post:
      tags:
        - FulfillmentOrder
      summary: Marks the fulfillment order as open
      description: Marks a scheduled fulfillment order as ready for fulfillment. This endpoint allows merchants to work on a scheduled fulfillment order before its expected `fulfill_at` datetime.
      operationId: MarkFulfillmentOrderAsOpen
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderItem'
  '/fulfillment_orders/{fulfillment_order_id}/reschedule.json':
    post:
      tags:
        - FulfillmentOrder
      summary: Reschedules the fulfill_at time of a scheduled fulfillment order
      description: Updates the `fulfill_at` time of a scheduled fulfillment order. This endpoint is used to manage the time a scheduled fulfillment order will be marked as ready for fulfillment.
      operationId: RescheduleFulfillAtTimeOfScheduledFulfillmentOrder
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleFulfillAtTimeOfScheduledFulfillmentOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RescheduleFulfillAtTimeOfScheduledFulfillmentOrderRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderItem'
  '/fulfillment_orders/{fulfillment_order_id}/hold.json':
    post:
      tags:
        - FulfillmentOrder
      summary: Applies a fulfillment hold on an open fulfillment order
      description: Halts all fulfillment work on a fulfillment order with status `OPEN` and changes the status of the fulfillment order to `ON_HOLD`.
      operationId: ApplyFulfillmentHoldOnOpenFulfillmentOrder
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyFulfillmentHoldOnOpenFulfillmentOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplyFulfillmentHoldOnOpenFulfillmentOrderRequest'
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderItem'
  /fulfillment_orders/set_fulfillment_orders_deadline.json:
    post:
      tags:
        - FulfillmentOrder
      summary: Sets deadline for fulfillment orders
      description: Sets the latest date and time by which the fulfillment orders need to be fulfilled.
      operationId: SetDeadlineForFulfillmentOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDeadlineForFulfillmentOrdersRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetDeadlineForFulfillmentOrdersRequest'
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  '/fulfillment_orders/{fulfillment_order_id}/release_hold.json':
    post:
      tags:
        - FulfillmentOrder
      summary: Releases the fulfillment hold on a fulfillment order
      description: Release the fulfillment hold on a fulfillment order and changes the status of the fulfillment order to `OPEN` or `SCHEDULED`
      operationId: ReleaseFulfillmentHoldOnFulfillmentOrder
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentOrderItem'
  '/fulfillment_orders/{fulfillment_order_id}/fulfillment_request.json':
    post:
      tags:
        - FulfillmentRequest
      summary: Sends a fulfillment request
      description: Sends a fulfillment request to the fulfillment service of a fulfillment order.
      operationId: SendFulfillmentRequest
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendFulfillmentRequestRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendFulfillmentRequestRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendFulfillmentRequestItem'
  '/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/accept.json':
    post:
      tags:
        - FulfillmentRequest
      summary: Accepts a fulfillment request
      description: Accepts a fulfillment request sent to a fulfillment service for a fulfillment order.
      operationId: AcceptFulfillmentRequest
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptFulfillmentRequestRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AcceptFulfillmentRequestRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptFulfillmentRequestItem'
  '/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/reject.json':
    post:
      tags:
        - FulfillmentRequest
      summary: Rejects a fulfillment request
      description: Rejects a fulfillment request sent to a fulfillment service for a fulfillment order.
      operationId: RejectFulfillmentRequest
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectFulfillmentRequestRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RejectFulfillmentRequestRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectFulfillmentRequestItem'
  /fulfillment_services.json:
    get:
      tags:
        - FulfillmentService
      summary: Receive a list of all FulfillmentServices
      operationId: ListFulfillmentServices
      parameters:
        - name: scope
          in: query
          description: Specify which fulfillment services to retrieve.
          schema:
            $ref: '#/components/schemas/FulfillmentServiceScope'
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentServiceList'
    post:
      tags:
        - FulfillmentService
      summary: Create a new FulfillmentService
      operationId: CreateFulfillmentService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFulfillmentServiceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateFulfillmentServiceRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentServiceItem'
  '/fulfillment_services/{fulfillment_service_id}.json':
    get:
      tags:
        - FulfillmentService
      summary: Receive a single FulfillmentService
      operationId: GetFulfillmentService
      parameters:
        - name: fulfillment_service_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentServiceItem'
    put:
      tags:
        - FulfillmentService
      summary: Modify an existing FulfillmentService
      operationId: UpdateFulfillmentService
      parameters:
        - name: fulfillment_service_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFulfillmentServiceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFulfillmentServiceRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentServiceItem'
    delete:
      tags:
        - FulfillmentService
      summary: Remove an existing FulfillmentService
      operationId: DeleteFulfillmentService
      parameters:
        - name: fulfillment_service_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  '/fulfillment_orders/{fulfillment_order_id}/locations_for_move.json':
    get:
      tags:
        - LocationsForMove
      summary: Retrieves a list of locations that a fulfillment order can potentially move to.
      description: Retrieves a list of locations that a fulfillment order can potentially move to. The resulting list is sorted alphabetically in ascending order by location name.
      operationId: ListLocationsThatFulfillmentOrderCanPotentiallyMoveTo
      parameters:
        - name: fulfillment_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsForMoveList'
components:
  schemas:
    AcceptCancellationRequestRequest:
      type: object
      properties:
        cancellation_request:
          $ref: '#/components/schemas/MessageDetail'
      additionalProperties: false
    AcceptFulfillmentRequestItem:
      type: object
      properties:
        fulfillment_order:
          $ref: '#/components/schemas/FulfillmentOrderWithOrigin'
      additionalProperties: false
    AcceptFulfillmentRequestRequest:
      required:
        - fulfillment_request
      type: object
      properties:
        fulfillment_request:
          $ref: '#/components/schemas/MessageDetail'
      additionalProperties: false
    Address:
      required:
        - id
      type: object
      properties:
        address1:
          type: string
          description: The customer's mailing address
          nullable: true
        address2:
          type: string
          description: An additional field for the customer's mailing address.
          nullable: true
        city:
          type: string
          description: 'The customer''s city, town, or village.'
          nullable: true
        country:
          type: string
          description: The customer's country.
          nullable: true
        country_code:
          type: string
          description: The two-letter country code corresponding to the customer's country.
          nullable: true
        country_name:
          type: string
          description: The customer’s normalized country name.
          nullable: true
        company:
          type: string
          description: The customer’s company.
          nullable: true
        customer_id:
          type: integer
          description: The unique identifier for the customer.
          format: int64
          nullable: true
        first_name:
          type: string
          description: The customer’s first name.
          nullable: true
        last_name:
          type: string
          description: The customer’s last name.
          nullable: true
        name:
          type: string
          description: The customer’s first and last names.
          nullable: true
        phone:
          type: string
          description: The customer’s phone number at this address.
          nullable: true
        province:
          type: string
          description: 'The customer’s region name. Typically a province, a state, or a prefecture.'
          nullable: true
        province_code:
          type: string
          description: The two-letter code for the customer’s region.
          nullable: true
        zip:
          type: string
          description: 'The customer’s postal code, also known as zip, postcode, Eircode, etc.'
          nullable: true
        default:
          type: boolean
          description: Indicates whether this address is the default address.
          nullable: true
        latitude:
          type: number
          format: decimal
          nullable: true
        longitude:
          type: number
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
      additionalProperties: { }
    ApplyFulfillmentHoldOnOpenFulfillmentOrderRequest:
      required:
        - fulfillment_hold
      type: object
      properties:
        fulfillment_hold:
          $ref: '#/components/schemas/FulfillmentHoldRequestDetail'
      additionalProperties: false
    AssignedFulfillmentOrderList:
      required:
        - fulfillment_orders
      type: object
      properties:
        fulfillment_orders:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOrder'
      additionalProperties: { }
    AssignedLocation:
      type: object
      properties:
        address1:
          type: string
          description: The street address of the assigned location.
          nullable: true
        address2:
          type: string
          description: An optional additional field for the street address of the assigned location.
          nullable: true
        city:
          type: string
          description: The city of the assigned location.
          nullable: true
        country_code:
          type: string
          description: The two-letter code for the country of the assigned location.
          nullable: true
        location_id:
          type: integer
          description: The ID of the assigned location.
          format: int64
          nullable: true
        name:
          type: string
          description: The name of the assigned location.
          nullable: true
        phone:
          type: string
          description: The phone number of the assigned location.
          nullable: true
        province:
          type: string
          description: The province of the assigned location.
          nullable: true
        zip:
          type: string
          description: The ZIP code of the assigned location.
          nullable: true
      additionalProperties: { }
    CancelFulfillmentOrderRequest:
      type: object
      additionalProperties: false
    CancelFulfillmentRequest:
      type: object
      additionalProperties: false
    CarrierService:
      required:
        - id
      type: object
      properties:
        active:
          type: boolean
          description: Whether this carrier service is active.
          nullable: true
        callback_url:
          type: string
          description: The URL endpoint that Shopify needs to retrieve shipping rates. This must be a public URL.
          nullable: true
        carrier_service_type:
          type: string
          description: Distinguishes between API or legacy carrier services.
          nullable: true
        name:
          type: string
          description: The name of the shipping service as seen by merchants and their customers.
          nullable: true
        service_discovery:
          type: boolean
          description: Whether merchants are able to send dummy data to your service through the Shopify admin to see shipping rate examples.
          nullable: true
        admin_graphql_api_id:
          type: string
          nullable: true
        format:
          $ref: '#/components/schemas/CarrierServiceFormat'
        id:
          type: integer
          format: int64
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    CarrierServiceFormat:
      enum:
        - json
        - xml
      type: string
      additionalProperties: { }
    CarrierServiceItem:
      required:
        - carrier_service
      type: object
      properties:
        carrier_service:
          $ref: '#/components/schemas/CarrierService'
      additionalProperties: { }
    CarrierServiceList:
      required:
        - carrier_services
      type: object
      properties:
        carrier_services:
          type: array
          items:
            $ref: '#/components/schemas/CarrierService'
      additionalProperties: { }
    CountItem:
      type: object
      properties:
        count:
          type: integer
          format: int32
      additionalProperties: { }
    CreateCarrierService:
      type: object
      properties:
        active:
          type: boolean
          description: Whether this carrier service is active.
          nullable: true
        callback_url:
          type: string
          description: The URL endpoint that Shopify needs to retrieve shipping rates. This must be a public URL.
          nullable: true
        carrier_service_type:
          type: string
          description: Distinguishes between API or legacy carrier services.
          nullable: true
        name:
          type: string
          description: The name of the shipping service as seen by merchants and their customers.
          nullable: true
        service_discovery:
          type: boolean
          description: Whether merchants are able to send dummy data to your service through the Shopify admin to see shipping rate examples.
          nullable: true
        admin_graphql_api_id:
          type: string
          description: The GraphQL GID for this carrier service.
          nullable: true
        format:
          $ref: '#/components/schemas/CarrierServiceFormat'
      additionalProperties: false
    CreateCarrierServiceRequest:
      required:
        - carrier_service
      type: object
      properties:
        carrier_service:
          $ref: '#/components/schemas/CreateCarrierService'
      additionalProperties: false
    CreateFulfillmentEvent:
      type: object
      properties:
        address1:
          type: string
          description: The street address where the fulfillment event occurred.
          nullable: true
        city:
          type: string
          description: The city where the fulfillment event occurred.
          nullable: true
        country:
          type: string
          description: The country where the fulfillment event occurred.
          nullable: true
        estimated_delivery_at:
          type: string
          description: 'The estimated delivery date based on the fulfillment''s tracking number, as long as it''s provided by one of the following carriers: USPS, FedEx, UPS, or Canada Post (Canada only). Value is `null` if no tracking number is available or if the tracking number is from an unsupported carrier. This property is available only when [carrier calculated rates](https://help.shopify.com/manual/shipping/rates-and-methods/custom-calculated-rates) are in use.'''
          format: date-time
          nullable: true
        fulfillment_id:
          type: integer
          description: An ID for the fulfillment that's associated with the fulfillment event.
          format: int64
          nullable: true
        happened_at:
          type: string
          description: 'The date and time ([ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format) when the fulfillment event occurred.'
          format: date-time
          nullable: true
        latitude:
          type: number
          description: A geographic coordinate specifying the latitude of the fulfillment event.
          format: decimal
          nullable: true
        longitude:
          type: number
          description: A geographic coordinate specifying the longitude of the fulfillment event.
          format: decimal
          nullable: true
        message:
          type: string
          description: An arbitrary message describing the status. Can be provided by a shipping carrier.
          nullable: true
        order_id:
          type: integer
          description: The ID of the order that's associated with the fulfillment event.
          format: int64
          nullable: true
        province:
          type: string
          description: The province where the fulfillment event occurred.
          nullable: true
        shop_id:
          type: integer
          description: An ID for the shop that's associated with the fulfillment event.
          format: int64
          nullable: true
        status:
          $ref: '#/components/schemas/FulfillmentEventStatus'
        zip:
          type: string
          description: The zip code of the location where the fulfillment event occurred.
          nullable: true
      additionalProperties: false
    CreateFulfillmentEventRequest:
      required:
        - event
      type: object
      properties:
        event:
          $ref: '#/components/schemas/CreateFulfillmentEvent'
      additionalProperties: false
    CreateFulfillmentForOneOrManyFulfillmentOrders:
      type: object
      properties:
        message:
          type: string
          nullable: true
        line_items_by_fulfillment_order:
          type: array
          items:
            $ref: '#/components/schemas/LineItemsByFulfillmentOrder'
        notify_customer:
          type: boolean
          description: 'Whether the customer should be notified. If set to `true`, then an email will be sent when the fulfillment is created or updated. For orders that were initially created using the API, the default value is `false`. For all other orders, the default value is `true`.'
          nullable: true
        tracking_info:
          $ref: '#/components/schemas/TrackingInfo'
      additionalProperties: false
    CreateFulfillmentForOneOrManyFulfillmentOrdersRequest:
      required:
        - fulfillment
      type: object
      properties:
        fulfillment:
          $ref: '#/components/schemas/CreateFulfillmentForOneOrManyFulfillmentOrders'
      additionalProperties: false
    CreateFulfillmentService:
      type: object
      properties:
        admin_graphql_api_id:
          type: string
          description: The GraphQL GID for this fulfillment service.
          nullable: true
        callback_url:
          type: string
          description: "The callback URL that the fulfillment service has registered for requests. The following considerations apply: \r\n\r\n*   Shopify queries the `callback_url/fetch_tracking_numbers` endpoint to retrieve tracking numbers for orders, if `tracking_support` is set to `true`. \r\n*   Shopify queries the `callback_url/fetch_stock` endpoint to retrieve inventory levels, if `inventory_management` is set to `true`. \r\n*   Shopify uses the `callback_url/fulfillment_order_notification` endpoint to send [ fulfillment and cancellation requests](/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations) if the fulfillment service has opted in to the fulfillment order based workflow for managing fulfillments (`fulfillment_orders_opt_in` is set to `true`). \r\n\r\n The `callback_url` field is required if `inventory_management`, `tracking_support`, or `fulfillment_orders_opt_in` is set to `true`."
          nullable: true
        fulfillment_orders_opt_in:
          type: boolean
          description: 'Whether the fulfillment service uses the [fulfillment order based workflow](/apps/fulfillment/fulfillment-service-apps/manage-fulfillments) for managing fulfillments.'
          nullable: true
        permits_sku_sharing:
          type: boolean
          description: Whether the fulfillment service can stock inventory alongside other locations.
          nullable: true
        handle:
          type: string
          description: Human-readable unique identifier for this fulfillment service.
          nullable: true
        inventory_management:
          type: boolean
          description: 'Whether the fulfillment service tracks product inventory and provides updates to Shopify. Valid values: `true` and `false`.'
          nullable: true
        location_id:
          type: integer
          description: The unique identifier of the location associated with the fulfillment service
          format: int64
          nullable: true
        name:
          type: string
          description: The name of the fulfillment service as seen by merchants.
          nullable: true
        provider_id:
          type: integer
          description: A unique identifier for the fulfillment service provider.
          format: int64
          nullable: true
        requires_shipping_method:
          type: boolean
          description: 'Whether the fulfillment service requires products to be physically shipped. Valid values: `true` and `false`.'
          nullable: true
        tracking_support:
          type: boolean
          description: 'Whether the fulfillment service provides tracking numbers for packages. Valid values: `true` and `false`.'
          nullable: true
        format:
          $ref: '#/components/schemas/FulfillmentServiceFormat'
        include_pending_stock:
          type: boolean
          description: This property is undocumented by Shopify.
          nullable: true
        service_name:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        email:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
      additionalProperties: false
    CreateFulfillmentServiceRequest:
      required:
        - fulfillment_service
      type: object
      properties:
        fulfillment_service:
          $ref: '#/components/schemas/CreateFulfillmentService'
      additionalProperties: false
    DeliveryMethod:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the delivery method.
          format: int64
          nullable: true
        method_type:
          $ref: '#/components/schemas/DeliveryMethodType'
        min_delivery_date_time:
          type: string
          description: The minimum date and time by which the delivery is expected to be completed.
          format: date-time
          nullable: true
        max_delivery_date_time:
          type: string
          description: The maximum date and time by which the delivery is expected to be completed.
          format: date-time
          nullable: true
      additionalProperties: { }
    DeliveryMethodType:
      enum:
        - local
        - none
        - pick_up
        - retail
        - shipping
      type: string
      additionalProperties: { }
    DiscountAllocation:
      type: object
      properties:
        amount:
          type: string
          description: The discount amount allocated to the line (not sure why it is a string)
          nullable: true
        discount_application_index:
          type: integer
          description: The index of the associated discount application in the order's discount_applications list.
          format: int64
        amount_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    Fulfillment:
      required:
        - id
      type: object
      properties:
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          description: "A list of the fulfillment's line items, which includes:\r\n\r\n*   **id**: The ID of the line item within the fulfillment. \r\n*   **variant_id**: The ID of the product variant being fulfilled. \r\n*   **title**: The title of the product. \r\n*   **quantity**: The number of items in the fulfillment. \r\n*   **price**: The price of the item. \r\n*   **grams**: The weight of the item in grams. \r\n*   **sku**: The unique identifier of the item in the fulfillment. \r\n*   **variant_title**: The title of the product variant being fulfilled. \r\n*   **vendor**: The name of the supplier of the item. \r\n*   **fulfillment_service**: The service provider who is doing the fulfillment. This field will be deprecated. Use the `assigned_location` property on the `FulfillmentOrder` resource instead. \r\n*   **product_id**: The unique numeric identifier for the product in the fulfillment. \r\n*   **requires_shipping**: Whether a customer needs to provide a shipping address when placing an order for this product variant. \r\n*   **taxable**: Whether the line item is taxable. \r\n*   **gift_card**: Whether the line item is a [gift card](https://help.shopify.com/manual/products/gift-card-products). \r\n*   **name**: The name of the product variant. \r\n*   **variant_inventory_management**: The name of the inventory management system. \r\n*   **properties**: Any additional properties associated with the line item. \r\n*   **product_exists**: Whether the product exists. \r\n*   **fulfillable_quantity**: The amount available to fulfill. This is the quantity - max (refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity. This field will be deprecated. Use the `fulfillable_quantity` property of the `line_item` property on the `FulfillmentOrder` resource instead. \r\n*   **total_discount**: The total of any discounts applied to the line item. \r\n*   **fulfillment_status**: The status of an order in terms of the line items being fulfilled. Valid values: `fulfilled`, `null`, or `partial`. This field will be deprecated. Use the `status` property on the `FulfillmentOrder` resource instead. \r\n*   **fulfillment_line_item_id**: A unique identifier for a quantity of items within a single fulfillment. An order can have multiple fulfillment line items. \r\n*   **tax_lines**: The `title`, `price`, and `rate` of any taxes applied to the line item. \r\n*   **duties**: A list of duty objects, each containing information about a duty on the line item."
          nullable: true
        location_id:
          type: integer
          description: 'The unique identifier of the location that the fulfillment was processed at. To find the ID of the location, use the [Location resource](/docs/admin-api/rest/reference/inventory/location).'
          format: int64
          nullable: true
        name:
          type: string
          description: 'The uniquely identifying fulfillment name, consisting of two parts separated by a `.`. The first part represents the order name and the second part represents the fulfillment number. The fulfillment number automatically increments depending on how many fulfillments are in an order (e.g. `#1001.1`, `#1001.2`).'
          nullable: true
        notify_customer:
          type: boolean
          description: 'Whether the customer should be notified. If set to `true`, then an email will be sent when the fulfillment is created or updated. For orders that were initially created using the API, the default value is `false`. For all other orders, the default value is `true`.'
          nullable: true
        order_id:
          type: integer
          description: The unique numeric identifier for the order.
          format: int64
          nullable: true
        origin_address:
          $ref: '#/components/schemas/Address'
        receipt:
          $ref: '#/components/schemas/Receipt'
        service:
          type: string
          description: The fulfillment service associated with the fulfillment.
          nullable: true
        shipment_status:
          $ref: '#/components/schemas/FulfillmentShipmentStatus'
        status:
          $ref: '#/components/schemas/FulfillmentStatus'
        tracking_company:
          type: string
          description: "The name of the tracking company. The following tracking companies display for shops located in any country: \r\n\r\n*   **4PX** \r\n*   **AGS** \r\n*   **Amazon Logistics UK** \r\n*   **Amazon Logistics US** \r\n*   **An Post** \r\n*   **Anjun Logistics** \r\n*   **APC** \r\n*   **Asendia USA** \r\n*   **Australia Post** \r\n*   **Bonshaw** \r\n*   **BPost** \r\n*   **BPost International** \r\n*   **Canada Post** \r\n*   **Canpar** \r\n*   **CDL Last Mile** \r\n*   **China Post** \r\n*   **Chronopost** \r\n*   **Chukou1** \r\n*   **Colissimo** \r\n*   **Comingle** \r\n*   **Coordinadora** \r\n*   **Correios** \r\n*   **Correos** \r\n*   **CTT** \r\n*   **CTT Express** \r\n*   **Cyprus Post** \r\n*   **Delnext** \r\n*   **Deutsche Post** \r\n*   **DHL eCommerce** \r\n*   **DHL eCommerce Asia** \r\n*   **DHL Express** \r\n*   **DoorDash** \r\n*   **DPD** \r\n*   **DPD Local** \r\n*   **DPD UK** \r\n*   **DTD Express** \r\n*   **DX** \r\n*   **Eagle** \r\n*   **Estes** \r\n*   **Evri** \r\n*   **FedEx** \r\n*   **First Global Logistics** \r\n*   **First Line** \r\n*   **FSC** \r\n*   **Fulfilla** \r\n*   **GLS** \r\n*   **Guangdong Weisuyi Information Technology (WSE)** \r\n*   **Heppner Internationale Spedition GmbH & Co.** \r\n*   **Iceland Post** \r\n*   **IDEX** \r\n*   **Israel Post** \r\n*   **Japan Post (EN)** \r\n*   **Japan Post (JA)** \r\n*   **La Poste** \r\n*   **Lasership** \r\n*   **Latvia Post** \r\n*   **Lietuvos Paštas** \r\n*   **Logisters** \r\n*   **Lone Star Overnight** \r\n*   **M3 Logistics** \r\n*   **Meteor Space** \r\n*   **Mondial Relay** \r\n*   **New Zealand Post** \r\n*   **NinjaVan** \r\n*   **North Russia Supply Chain (Shenzhen) Co.** \r\n*   **OnTrac** \r\n*   **Packeta** \r\n*   **Pago Logistics** \r\n*   **Ping An Da Tengfei Express** \r\n*   **Pitney Bowes** \r\n*   **Portal PostNord** \r\n*   **Poste Italiane** \r\n*   **PostNL** \r\n*   **PostNord DK** \r\n*   **PostNord NO** \r\n*   **PostNord SE** \r\n*   **Purolator** \r\n*   **Qxpress** \r\n*   **Qyun Express** \r\n*   **Royal Mail** \r\n*   **Royal Shipments** \r\n*   **Sagawa (EN)** \r\n*   **Sagawa (JA)** \r\n*   **Sendle** \r\n*   **SF Express** \r\n*   **SFC Fulfillment** \r\n*   **SHREE NANDAN COURIER** \r\n*   **Singapore Post** \r\n*   **Southwest Air Cargo** \r\n*   **StarTrack** \r\n*   **Step Forward Freight** \r\n*   **Swiss Post** \r\n*   **TForce Final Mile** \r\n*   **Tinghao** \r\n*   **TNT** \r\n*   **Toll IPEC** \r\n*   **United Delivery Service** \r\n*   **UPS** \r\n*   **USPS** \r\n*   **Venipak** \r\n*   **We Post** \r\n*   **Whistl** \r\n*   **Wizmo** \r\n*   **WMYC** \r\n*   **Xpedigo** \r\n*   **XPO Logistics** \r\n*   **Yamato (EN)** \r\n*   **Yamato (JA)** \r\n*   **YiFan Express** \r\n*   **YunExpress** \r\n\r\nThe following tracking companies are displayed for shops located in specific countries:\r\n\r\n*   **Australia**: Australia Post, Sendle, Aramex Australia, TNT Australia, Hunter Express, Couriers Please, Bonds, Allied Express, Direct Couriers, Northline, GO Logistics \r\n*   **Austria**: Österreichische Post \r\n*   **Bulgaria**: Speedy \r\n*   **Canada**: Intelcom, BoxKnight, Loomis, GLS \r\n*   **China**: China Post, DHL eCommerce Asia, WanbExpress, YunExpress, Anjun Logistics, SFC Fulfillment, FSC \r\n*   **Czechia**: Zásilkovna \r\n*   **Germany**: Deutsche Post (DE), Deutsche Post (EN), DHL, DHL Express, Swiship, Hermes, GLS \r\n*   **Spain**: SEUR \r\n*   **France**: Colissimo, Mondial Relay, Colis Privé, GLS \r\n*   **United Kingdom**: Evri, DPD UK, Parcelforce, Yodel, DHL Parcel, Tuffnells \r\n*   **Greece**: ACS Courier \r\n*   **Hong Kong SAR**: SF Express \r\n*   **Ireland**: Fastway, DPD Ireland \r\n*   **India**: DTDC, India Post, Delhivery, Gati KWE, Professional Couriers, XpressBees, Ecom Express, Ekart, Shadowfax, Bluedart \r\n*   **Italy**: BRT, GLS Italy \r\n*   **Japan**: エコ配, 西濃運輸, 西濃スーパーエキスプレス, 福山通運, 日本通運, 名鉄運輸, 第一貨物 \r\n*   **Netherlands**: DHL Parcel, DPD \r\n*   **Norway**: Bring \r\n*   **Poland**: Inpost \r\n*   **Turkey**: PTT, Yurtiçi Kargo, Aras Kargo, Sürat Kargo \r\n*   **United States**: GLS, Alliance Air Freight, Pilot Freight, LSO, Old Dominion, R+L Carriers, Southwest Air Cargo \r\n*   **South Africa**: Fastway, Skynet \r\n\r\n <div class=\"note\"> \r\n\r\n#### Important\r\n\r\nWhen creating a fulfillment for a supported carrier, send the `tracking_company` exactly as written in the list above. If the tracking company doesn't match one of the supported entries, then the shipping status might not be updated properly during the fulfillment process.\r\n </div>"
          nullable: true
        tracking_numbers:
          type: array
          items:
            type: string
          description: "A list of tracking numbers, provided by the shipping company. <div class=\"note\"> \r\n\r\n#### Important\r\n\r\nIt is highly recommended that you send the tracking company and the tracking URL as well. If neither one of these is sent, then the tracking company will be determined automatically. This can result in an invalid tracking URL.\r\n\r\nThe tracking URL is displayed in the shipping confirmation email, which can optionally be sent to the customer. When accounts are enabled, it is also displayed in the customer's order history.\r\n </div>"
          nullable: true
        tracking_urls:
          type: array
          items:
            type: string
          description: The URLs of tracking pages for the fulfillment.
          nullable: true
        variant_inventory_management:
          type: string
          description: The name of the inventory management service.
          nullable: true
        tracking_number:
          type: string
          nullable: true
        tracking_url:
          type: string
          description: The URLs of tracking pages for the fulfillment.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    FulfillmentAssignmentStatus:
      enum:
        - cancellation_requested
        - fulfillment_requested
        - fulfillment_accepted
      type: string
      additionalProperties: { }
    FulfillmentEvent:
      required:
        - id
      type: object
      properties:
        address1:
          type: string
          description: The street address where the fulfillment event occurred.
          nullable: true
        city:
          type: string
          description: The city where the fulfillment event occurred.
          nullable: true
        country:
          type: string
          description: The country where the fulfillment event occurred.
          nullable: true
        estimated_delivery_at:
          type: string
          description: 'The estimated delivery date based on the fulfillment''s tracking number, as long as it''s provided by one of the following carriers: USPS, FedEx, UPS, or Canada Post (Canada only). Value is `null` if no tracking number is available or if the tracking number is from an unsupported carrier. This property is available only when [carrier calculated rates](https://help.shopify.com/manual/shipping/rates-and-methods/custom-calculated-rates) are in use.'''
          format: date-time
          nullable: true
        fulfillment_id:
          type: integer
          description: An ID for the fulfillment that's associated with the fulfillment event.
          format: int64
          nullable: true
        happened_at:
          type: string
          description: 'The date and time ([ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format) when the fulfillment event occurred.'
          format: date-time
          nullable: true
        latitude:
          type: number
          description: A geographic coordinate specifying the latitude of the fulfillment event.
          format: decimal
          nullable: true
        longitude:
          type: number
          description: A geographic coordinate specifying the longitude of the fulfillment event.
          format: decimal
          nullable: true
        message:
          type: string
          description: An arbitrary message describing the status. Can be provided by a shipping carrier.
          nullable: true
        order_id:
          type: integer
          description: The ID of the order that's associated with the fulfillment event.
          format: int64
          nullable: true
        province:
          type: string
          description: The province where the fulfillment event occurred.
          nullable: true
        shop_id:
          type: integer
          description: An ID for the shop that's associated with the fulfillment event.
          format: int64
          nullable: true
        status:
          $ref: '#/components/schemas/FulfillmentEventStatus'
        zip:
          type: string
          description: The zip code of the location where the fulfillment event occurred.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    FulfillmentEventItem:
      required:
        - fulfillment_event
      type: object
      properties:
        fulfillment_event:
          $ref: '#/components/schemas/FulfillmentEvent'
      additionalProperties: { }
    FulfillmentEventList:
      required:
        - fulfillment_events
      type: object
      properties:
        fulfillment_events:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentEvent'
      additionalProperties: { }
    FulfillmentEventStatus:
      enum:
        - label_printed
        - label_purchased
        - attempted_delivery
        - ready_for_pickup
        - picked_up
        - confirmed
        - in_transit
        - out_for_delivery
        - delivered
        - failure
      type: string
      additionalProperties: { }
    FulfillmentHold:
      type: object
      properties:
        reason:
          type: string
          description: The reason for the fulfillment hold.
          nullable: true
        reason_notes:
          type: string
          description: Additional information about the fulfillment hold reason.
          nullable: true
      additionalProperties: { }
    FulfillmentHoldReason:
      enum:
        - awaiting_payment
        - high_risk_of_fraud
        - incorrect_address
        - inventory_out_of_stock
        - other
      type: string
      additionalProperties: { }
    FulfillmentHoldRequestDetail:
      type: object
      properties:
        notify_merchant:
          type: boolean
          description: 'Whether the merchant should receive a notification about the fulfillment hold. If set to true, then the merchant will be notified on the Shopify mobile app (if they use it to manage their store). The default value is false'
          nullable: true
        reason:
          $ref: '#/components/schemas/FulfillmentHoldReason'
        reason_notes:
          type: string
          description: Optional additional information about the fulfillment hold reason.
          nullable: true
      additionalProperties: { }
    FulfillmentItem:
      required:
        - fulfillment
      type: object
      properties:
        fulfillment:
          $ref: '#/components/schemas/Fulfillment'
      additionalProperties: { }
    FulfillmentList:
      required:
        - fulfillments
      type: object
      properties:
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
      additionalProperties: { }
    FulfillmentOrder:
      required:
        - id
        - request_status
        - status
        - supported_actions
      type: object
      properties:
        assigned_location_id:
          type: integer
          description: The ID of the location that has been assigned to do the work.
          format: int64
          nullable: true
        destination:
          $ref: '#/components/schemas/FulfillmentOrderDestination'
        delivery_method:
          $ref: '#/components/schemas/DeliveryMethod'
        fulfill_at:
          type: string
          description: 'The date and time at which the fulfillment order will be fulfillable. When this date and time is reached, a `scheduled` fulfillment order is automatically transitioned to `open`. For example, the `fulfill_at` date for a subscription order might be the 1st of each month, a pre-order `fulfill_at` date would be `nil`, and a standard order `fulfill_at` date would be the order creation date. For more information about fulfillment statuses, refer to the **status** property.'
          format: date-time
          nullable: true
        fulfill_by:
          type: string
          description: The latest date and time by which all items in the fulfillment order need to be fulfilled.
          nullable: true
        fulfillment_holds:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentHold'
          description: "Represents the fulfillment holds applied on the fulfillment order.\r\n\r\n*   **reason**: The reason for the fulfillment hold. \r\n*   **reason_notes**: Additional information about the fulfillment hold reason."
          nullable: true
        international_duties:
          $ref: '#/components/schemas/InternationalDuties'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOrderLineItem'
          description: 'Represents line items belonging to a fulfillment order:'
          nullable: true
        order_id:
          type: integer
          description: The ID of the order that's associated with the fulfillment order.
          format: int64
          nullable: true
        request_status:
          $ref: '#/components/schemas/FulfillmentOrderRequestStatus'
        shop_id:
          type: integer
          description: The ID of the shop that's associated with the fulfillment order.
          format: int64
          nullable: true
        status:
          $ref: '#/components/schemas/FulfillmentOrderStatus'
        supported_actions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOrderActions'
          description: The actions that can be performed on this fulfillment order.
        merchant_requests:
          type: array
          items:
            $ref: '#/components/schemas/MerchantRequest'
          description: "A list of requests sent by the merchant to the fulfillment service for this fulfillment order.\r\n\r\n*   **message**: The message returned by the merchant, if any. \r\n*   **request_options**: The request options returned by the merchant, if any. \r\n*   **kind**: The kind of request. Valid values: *fulfillment_request*, *cancellation_request*, or *legacy_fulfill_request*."
          nullable: true
        assigned_location:
          $ref: '#/components/schemas/AssignedLocation'
        outgoing_requests:
          type: array
          items:
            $ref: '#/components/schemas/OutgoingRequest'
          description: Followings actions can be performed on this fulfillment order.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    FulfillmentOrderActions:
      enum:
        - create_fulfillment
        - request_fulfillment
        - cancel_fulfillment_order
        - request_cancellation
        - release_hold
        - mark_as_open
        - hold
        - revert_to_unfulfilled
      type: string
      additionalProperties: { }
    FulfillmentOrderCancellationRequestDetail:
      type: object
      properties:
        message:
          type: string
          description: An optional reason for marking the fulfillment order as incomplete.
          nullable: true
      additionalProperties: { }
    FulfillmentOrderDestination:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the fulfillment order destination.
          format: int64
          nullable: true
        address1:
          type: string
          description: The street address of the assigned location.
          nullable: true
        address2:
          type: string
          description: An optional additional field for the street address of the assigned location.
          nullable: true
        city:
          type: string
          description: The city of the destination.
          nullable: true
        company:
          type: string
          description: The company of the destination.
          nullable: true
        country:
          type: string
          description: The country of the destination.
          nullable: true
        email:
          type: string
          description: The email of the customer at the destination.
          nullable: true
        first_name:
          type: string
          description: The first name of the customer at the destination.
          nullable: true
        last_name:
          type: string
          description: The last name of the customer at the destination.
          nullable: true
        phone:
          type: string
          description: The phone number of the customer at the destination.
          nullable: true
        province:
          type: string
          description: The province of the destination.
          nullable: true
        zip:
          type: string
          description: The ZIP code of the destination.
          nullable: true
      additionalProperties: { }
    FulfillmentOrderItem:
      required:
        - fulfillment_order
        - replacement_fulfillment_order
      type: object
      properties:
        replacement_fulfillment_order:
          $ref: '#/components/schemas/FulfillmentOrder'
        fulfillment_order:
          $ref: '#/components/schemas/FulfillmentOrder'
      additionalProperties: { }
    FulfillmentOrderLineItem:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the fulfillment order line item.
          format: int64
          nullable: true
        shop_id:
          type: integer
          description: The ID of the shop associated with the fulfillment order line item.
          format: int64
          nullable: true
        fulfillment_order_id:
          type: integer
          description: The ID of the fulfillment order associated with this line item.
          format: int64
          nullable: true
        line_item_id:
          type: integer
          description: The ID of the line item associated with this fulfillment order line item.
          format: int64
          nullable: true
        inventory_item_id:
          type: integer
          description: The ID of the inventory item associated with this fulfillment order line item.
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The total number of units to be fulfilled.
          format: int64
          nullable: true
        fulfillable_quantity:
          type: integer
          description: The number of units remaining to be fulfilled.
          format: int64
          nullable: true
        variant_id:
          type: integer
          description: The ID of the variant associated with this fulfillment order line item.
          format: int64
          nullable: true
      additionalProperties: { }
    FulfillmentOrderList:
      required:
        - fulfillment_orders
      type: object
      properties:
        fulfillment_orders:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOrder'
      additionalProperties: { }
    FulfillmentOrderRequestStatus:
      enum:
        - unsubmitted
        - submitted
        - accepted
        - rejected
        - cancellation_requested
        - cancellation_accepted
        - cancellation_rejected
        - closed
      type: string
      additionalProperties: { }
    FulfillmentOrderStatus:
      enum:
        - open
        - in_progress
        - scheduled
        - fulfill_at
        - cancelled
        - on_hold
        - incomplete
        - closed
      type: string
      additionalProperties: { }
    FulfillmentOrderWithOrigin:
      required:
        - id
        - request_status
        - status
        - supported_actions
      type: object
      properties:
        assigned_location_id:
          type: integer
          description: The ID of the location that has been assigned to do the work.
          format: int64
          nullable: true
        destination:
          $ref: '#/components/schemas/FulfillmentOrderDestination'
        delivery_method:
          $ref: '#/components/schemas/DeliveryMethod'
        fulfill_at:
          type: string
          description: 'The date and time at which the fulfillment order will be fulfillable. When this date and time is reached, a `scheduled` fulfillment order is automatically transitioned to `open`. For example, the `fulfill_at` date for a subscription order might be the 1st of each month, a pre-order `fulfill_at` date would be `nil`, and a standard order `fulfill_at` date would be the order creation date. For more information about fulfillment statuses, refer to the **status** property.'
          format: date-time
          nullable: true
        fulfill_by:
          type: string
          description: The latest date and time by which all items in the fulfillment order need to be fulfilled.
          nullable: true
        fulfillment_holds:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentHold'
          description: "Represents the fulfillment holds applied on the fulfillment order.\r\n\r\n*   **reason**: The reason for the fulfillment hold. \r\n*   **reason_notes**: Additional information about the fulfillment hold reason."
          nullable: true
        international_duties:
          $ref: '#/components/schemas/InternationalDuties'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOrderLineItem'
          description: 'Represents line items belonging to a fulfillment order:'
          nullable: true
        order_id:
          type: integer
          description: The ID of the order that's associated with the fulfillment order.
          format: int64
          nullable: true
        request_status:
          $ref: '#/components/schemas/FulfillmentOrderRequestStatus'
        shop_id:
          type: integer
          description: The ID of the shop that's associated with the fulfillment order.
          format: int64
          nullable: true
        status:
          $ref: '#/components/schemas/FulfillmentOrderStatus'
        supported_actions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOrderActions'
          description: The actions that can be performed on this fulfillment order.
        merchant_requests:
          type: array
          items:
            $ref: '#/components/schemas/MerchantRequest'
          description: "A list of requests sent by the merchant to the fulfillment service for this fulfillment order.\r\n\r\n*   **message**: The message returned by the merchant, if any. \r\n*   **request_options**: The request options returned by the merchant, if any. \r\n*   **kind**: The kind of request. Valid values: *fulfillment_request*, *cancellation_request*, or *legacy_fulfill_request*."
          nullable: true
        assigned_location:
          type: string
          description: "The fulfillment order's assigned location. This is the location where the fulfillment is expected to happen.\r\n\r\nThe fulfillment order's assigned location might change in the following cases:\r\n\r\n1.  The fulfillment order has been entirely moved to a new location. For example, the [ fulfillment order move](/api/admin-rest/latest/resources/fulfillmentorder#post-fulfillment-orders-fulfillment-order-id-move) endpoint has been called, and you see the original fulfillment order in the `moved_fulfillment_order` field within the response. \r\n2.  Work on the fulfillment order has not yet begun, which means that the fulfillment order has the `open`, `scheduled`, or `on_hold` status, and the shop's location properties might be undergoing edits (for example, in the Shopify admin). \r\n\r\nIf the [ move](/api/admin-rest/latest/resources/fulfillmentorder#post-fulfillment-orders-fulfillment-order-id-move) operation has moved the fulfillment order's line items to a new location, but hasn't moved the fulfillment order instance itself, then the original fulfillment order's assigned location doesn't change. This happens if the fulfillment order is being split during the move, or if all line items can be moved to an existing fitting fulfillment order at a new location.\r\n\r\nOnce the fulfillment order has been taken into work or canceled, which means that the fulfillment order has the `in_progress`, `closed`, `cancelled`, or `incomplete` status, assigned location acts as a snapshot of the shop's location content. Up-to-date shop's location data may be queried through [ get location](https://shopify.dev/api/admin-rest/latest/resources/location#get-locations-location-id) endpoint with `assigned_location.location_id` supplied.\r\n\r\n*   **address1**: The street address of the assigned location. \r\n*   **address2**: An optional additional field for the street address of the assigned location. \r\n*   **city**: The city of the assigned location. \r\n*   **country_code**: The two-letter code for the country of the assigned location. \r\n*   **location_id**: The ID of the shop's location where the fulfillment is expected to happen. It's content might be different from the `assigned_location` content if the location's attributes were updated after the fulfillment order was taken into work of canceled. \r\n*   **name**: The name of the assigned location. \r\n*   **phone**: The phone number of the assigned location. \r\n*   **province**: The province of the assigned location. \r\n*   **zip**: The ZIP code of the assigned location."
          nullable: true
        outgoing_requests:
          type: array
          items:
            $ref: '#/components/schemas/OutgoingRequest'
          description: Followings actions can be performed on this fulfillment order.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
        origin:
          $ref: '#/components/schemas/AssignedLocation'
      additionalProperties: { }
    FulfillmentOrderWithOriginItem:
      type: object
      properties:
        fulfillment_order:
          $ref: '#/components/schemas/FulfillmentOrderWithOrigin'
      additionalProperties: { }
    FulfillmentRequestOrderLineItem:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the fulfillment order line item.
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The total number of units to be fulfilled.
          format: int64
          nullable: true
      additionalProperties: { }
      description: An object representing a Shopify fulfillment request order line items.
    FulfillmentService:
      required:
        - id
      type: object
      properties:
        admin_graphql_api_id:
          type: string
          nullable: true
        callback_url:
          type: string
          description: "The callback URL that the fulfillment service has registered for requests. The following considerations apply: \r\n\r\n*   Shopify queries the `callback_url/fetch_tracking_numbers` endpoint to retrieve tracking numbers for orders, if `tracking_support` is set to `true`. \r\n*   Shopify queries the `callback_url/fetch_stock` endpoint to retrieve inventory levels, if `inventory_management` is set to `true`. \r\n*   Shopify uses the `callback_url/fulfillment_order_notification` endpoint to send [ fulfillment and cancellation requests](/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations) if the fulfillment service has opted in to the fulfillment order based workflow for managing fulfillments (`fulfillment_orders_opt_in` is set to `true`). \r\n\r\n The `callback_url` field is required if `inventory_management`, `tracking_support`, or `fulfillment_orders_opt_in` is set to `true`."
          nullable: true
        fulfillment_orders_opt_in:
          type: boolean
          description: 'Whether the fulfillment service uses the [fulfillment order based workflow](/apps/fulfillment/fulfillment-service-apps/manage-fulfillments) for managing fulfillments.'
          nullable: true
        permits_sku_sharing:
          type: boolean
          description: Whether the fulfillment service can stock inventory alongside other locations.
          nullable: true
        handle:
          type: string
          description: Human-readable unique identifier for this fulfillment service.
          nullable: true
        inventory_management:
          type: boolean
          description: 'Whether the fulfillment service tracks product inventory and provides updates to Shopify. Valid values: `true` and `false`.'
          nullable: true
        location_id:
          type: integer
          description: The unique identifier of the location associated with the fulfillment service
          format: int64
          nullable: true
        name:
          type: string
          description: The name of the fulfillment service as seen by merchants.
          nullable: true
        provider_id:
          type: integer
          description: A unique identifier for the fulfillment service provider.
          format: int64
          nullable: true
        requires_shipping_method:
          type: boolean
          description: 'Whether the fulfillment service requires products to be physically shipped. Valid values: `true` and `false`.'
          nullable: true
        tracking_support:
          type: boolean
          description: 'Whether the fulfillment service provides tracking numbers for packages. Valid values: `true` and `false`.'
          nullable: true
        format:
          $ref: '#/components/schemas/FulfillmentServiceFormat'
        include_pending_stock:
          type: boolean
          description: This property is undocumented by Shopify.
          nullable: true
        service_name:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        email:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        id:
          type: integer
          format: int64
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    FulfillmentServiceFormat:
      enum:
        - json
        - xml
      type: string
      additionalProperties: { }
    FulfillmentServiceItem:
      required:
        - fulfillment_service
      type: object
      properties:
        fulfillment_service:
          $ref: '#/components/schemas/FulfillmentService'
      additionalProperties: { }
    FulfillmentServiceList:
      required:
        - fulfillment_services
      type: object
      properties:
        fulfillment_services:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentService'
      additionalProperties: { }
    FulfillmentServiceScope:
      enum:
        - all
        - current_client
      type: string
      additionalProperties: { }
    FulfillmentShipmentStatus:
      enum:
        - label_printed
        - label_purchased
        - attempted_delivery
        - ready_for_pickup
        - confirmed
        - in_transit
        - out_for_delivery
        - delivered
        - failure
      type: string
      additionalProperties: { }
    FulfillmentStatus:
      enum:
        - pending
        - open
        - success
        - cancelled
        - error
        - failure
      type: string
      additionalProperties: { }
    IncoTerm:
      enum:
        - DAP
        - DDP
      type: string
      additionalProperties: { }
    InternationalDuties:
      type: object
      properties:
        incoterm:
          $ref: '#/components/schemas/IncoTerm'
      additionalProperties: { }
    LineItem:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        fulfillable_quantity:
          type: integer
          description: 'The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity.'
          format: int32
          nullable: true
        fulfillment_service:
          type: string
          description: 'Service provider who is doing the fulfillment. Valid values are either "manual" or the name of the provider. eg: "amazon", "shipwire", etc.'
          nullable: true
        fulfillment_status:
          type: string
          description: 'The fulfillment status of this line item. Known values are ''fulfilled'', ''null'' and ''partial''.'
          nullable: true
        grams:
          type: integer
          description: The weight of the item in grams.
          format: int64
          nullable: true
        price:
          type: number
          description: The price of the item before discounts have been applied.
          format: decimal
          nullable: true
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The number of products that were purchased.
          format: int32
          nullable: true
        requires_shipping:
          type: boolean
          description: States whether or not the fulfillment requires shipping.
          nullable: true
        sku:
          type: string
          description: A unique identifier of the item in the fulfillment.
          nullable: true
        title:
          type: string
          description: The title of the product.
          nullable: true
        variant_id:
          type: integer
          description: The id of the product variant. Can be null if the product purchased is not a variant.
          format: int64
          nullable: true
        variant_title:
          type: string
          description: The title of the product variant. Can be null if the product purchased is not a variant.
          nullable: true
        name:
          type: string
          description: The name of the product variant.
          nullable: true
        vendor:
          type: string
          description: The name of the supplier of the item.
          nullable: true
        gift_card:
          type: boolean
          description: States whether the order used a gift card.
          nullable: true
        taxable:
          type: boolean
          description: States whether or not the product was taxable.
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'An array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem.'
          nullable: true
        tip_payment_gateway:
          type: string
          description: 'The payment gateway used to tender the tip, such as shopify_payments. Present only on tips.'
          nullable: true
        tip_payment_method:
          type: string
          description: 'The payment method used to tender the tip, such as Visa. Present only on tips.'
          nullable: true
        total_discount:
          type: number
          description: The total discount amount applied to this line item. This value is not subtracted in the line item price.
          format: decimal
          nullable: true
        total_discount_set:
          $ref: '#/components/schemas/PriceSet'
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocation'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemProperty'
          description: "An array of custom information for an item that has been added to the cart.\r\nOften used to provide product customization options.\r\nAn array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem."
          nullable: true
        variant_inventory_management:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        product_exists:
          type: boolean
          description: This property is undocumented by Shopify.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemDuty'
          description: 'A list of duty objects, each containing information about a duty on the line item'
          nullable: true
        origin_location:
          $ref: '#/components/schemas/LineItemOriginLocation'
      additionalProperties: { }
    LineItemDuty:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        harmonized_system_code:
          type: string
          nullable: true
        country_code_of_origin:
          type: string
          nullable: true
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          nullable: true
      additionalProperties: { }
    LineItemOriginLocation:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        country_code:
          type: string
          description: The two-letter code (ISO 3166-1 format) for the country of the item's supplier.
          nullable: true
        province_code:
          type: string
          description: The two-letter abbreviation for the region of the item's supplier.
          nullable: true
        name:
          type: string
          description: The two-letter abbreviation for the region of the item's supplier.
          nullable: true
        address1:
          type: string
          description: The name of the item's supplier.
          nullable: true
        address2:
          type: string
          description: The suite number of the item's supplier.
          nullable: true
        city:
          type: string
          description: The suite number of the item's supplier.
          nullable: true
        zip:
          type: string
          description: The city of the item's supplier.
          nullable: true
      additionalProperties: { }
    LineItemProperty:
      type: object
      properties:
        name:
          type: string
          description: The name of the note attribute.
          nullable: true
        value:
          type: string
          description: The value of the note attribute.
          nullable: true
      additionalProperties: { }
      description: An object representing a properties for OpenShopify.Admin.Builder.Models.LineItem.Properties
    LineItemsByFulfillmentOrder:
      type: object
      properties:
        fulfillment_order_id:
          type: integer
          description: The ID of the fulfillment order associated with this line item.
          format: int64
          nullable: true
        fulfillment_order_line_items:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentRequestOrderLineItem'
          description: 'The fulfillment order line items to be requested for fulfillment. If left blank, all line items of the fulfillment order are requested for fulfillment.'
          nullable: true
      additionalProperties: { }
    LocationsForMove:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/MoveLocation'
        movable:
          type: boolean
          description: Whether the fulfillment order can be moved to the location
        message:
          type: string
          description: 'A human-readable string with the reason why the fulfillment order, or some of its line items, can''t be moved to the location.'
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    LocationsForMoveList:
      required:
        - locations_for_move
      type: object
      properties:
        locations_for_move:
          type: array
          items:
            $ref: '#/components/schemas/LocationsForMove'
      additionalProperties: { }
    MarkFulfillmentOrderAsIncompleteRequest:
      required:
        - fulfillment_order
      type: object
      properties:
        fulfillment_order:
          $ref: '#/components/schemas/FulfillmentOrderCancellationRequestDetail'
      additionalProperties: { }
    MerchantRequest:
      type: object
      properties:
        message:
          type: string
          description: 'The message returned by the merchant, if any.'
          nullable: true
        request_options:
          $ref: '#/components/schemas/MerchantRequestOptions'
        kind:
          type: string
          description: 'The kind of request. Known valid values: "fulfillment_request", "cancellation_request", or "legacy_fulfill_request".'
          nullable: true
      additionalProperties: { }
    MerchantRequestOptions:
      type: object
      properties:
        shipping_method:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
          nullable: true
      additionalProperties: { }
    MessageDetail:
      type: object
      properties:
        message:
          type: string
          description: An optional reason for rejecting the cancellation request.
          nullable: true
      additionalProperties: { }
    MoveFulfillmentOrderToNewLocationRequest:
      required:
        - fulfillment_order
      type: object
      properties:
        fulfillment_order:
          $ref: '#/components/schemas/MoveFulfillmentOrderToNewLocationRequestDetail'
      additionalProperties: false
    MoveFulfillmentOrderToNewLocationRequestDetail:
      type: object
      properties:
        new_location_id:
          type: integer
          format: int64
      additionalProperties: false
    MoveLocation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
      additionalProperties: false
    OutgoingRequest:
      type: object
      properties:
        message:
          type: string
          description: 'The message returned by the merchant, if any.'
          nullable: true
        request_options:
          $ref: '#/components/schemas/OutgoingRequestOptions'
        sent_at:
          type: string
          format: date-time
          nullable: true
        kind:
          type: string
          description: 'The kind of request. Known valid values: "fulfillment_request", "cancellation_request", or "legacy_fulfill_request".'
          nullable: true
      additionalProperties: { }
    OutgoingRequestOptions:
      type: object
      properties:
        notify_customer:
          type: boolean
          nullable: true
      additionalProperties: { }
    Price:
      type: object
      properties:
        currency_code:
          type: string
          description: The three-letter code (ISO 4217 format) for currency.
          nullable: true
        amount:
          type: number
          description: The amount in the currency.
          format: decimal
          nullable: true
      additionalProperties: { }
    PriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      additionalProperties: { }
    Receipt:
      type: object
      properties:
        testcase:
          type: boolean
          nullable: true
        authorization:
          type: string
          nullable: true
      additionalProperties: { }
    RejectCancellationRequestRequest:
      type: object
      properties:
        cancellation_request:
          $ref: '#/components/schemas/MessageDetail'
      additionalProperties: false
    RejectFulfillmentRequestItem:
      type: object
      properties:
        fulfillment_order:
          $ref: '#/components/schemas/FulfillmentOrderWithOrigin'
      additionalProperties: false
    RejectFulfillmentRequestRequest:
      required:
        - fulfillment_request
      type: object
      properties:
        fulfillment_request:
          $ref: '#/components/schemas/MessageDetail'
      additionalProperties: false
    ReleaseFulfillmentHoldOnFulfillmentOrderRequest:
      type: object
      additionalProperties: false
    RescheduleFulfillAtTimeOfScheduledFulfillmentOrderDetailRequest:
      required:
        - new_fulfill_at
      type: object
      properties:
        new_fulfill_at:
          type: string
          format: date-time
      additionalProperties: false
    RescheduleFulfillAtTimeOfScheduledFulfillmentOrderRequest:
      required:
        - fulfillment_order
      type: object
      properties:
        fulfillment_order:
          $ref: '#/components/schemas/RescheduleFulfillAtTimeOfScheduledFulfillmentOrderDetailRequest'
      additionalProperties: false
    SendCancellationRequestRequest:
      type: object
      properties:
        cancellation_request:
          $ref: '#/components/schemas/MessageDetail'
      additionalProperties: false
    SendFulfillmentRequestDetail:
      type: object
      properties:
        message:
          type: string
          nullable: true
        fulfillment_order_line_items:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOrderLineItem'
          nullable: true
      additionalProperties: false
    SendFulfillmentRequestItem:
      type: object
      properties:
        original_fulfillment_order:
          $ref: '#/components/schemas/FulfillmentOrderWithOrigin'
        submitted_fulfillment_order:
          $ref: '#/components/schemas/FulfillmentOrderWithOrigin'
        unsubmitted_fulfillment_order:
          $ref: '#/components/schemas/FulfillmentOrderWithOrigin'
      additionalProperties: false
    SendFulfillmentRequestRequest:
      required:
        - fulfillment_request
      type: object
      properties:
        fulfillment_request:
          $ref: '#/components/schemas/SendFulfillmentRequestDetail'
      additionalProperties: false
    SetDeadlineForFulfillmentOrdersRequest:
      type: object
      properties:
        fulfillment_order_ids:
          type: array
          items:
            type: integer
            format: int64
        fulfillment_deadline:
          type: string
          format: date-time
      additionalProperties: false
    TaxLine:
      type: object
      properties:
        price:
          type: number
          description: The amount of tax to be charged.
          format: decimal
          nullable: true
        rate:
          type: number
          description: The rate of tax to be applied.
          format: decimal
          nullable: true
        title:
          type: string
          description: The name of the tax.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    TrackingInfo:
      type: object
      properties:
        number:
          type: string
          description: The tracking number.
          nullable: true
        url:
          type: string
          description: The public URL to the tracking company.
          nullable: true
        company:
          type: string
          description: The tracking company name.
          nullable: true
      additionalProperties: { }
    UpdateCarrierService:
      required:
        - id
      type: object
      properties:
        active:
          type: boolean
          description: Whether this carrier service is active.
          nullable: true
        callback_url:
          type: string
          description: The URL endpoint that Shopify needs to retrieve shipping rates. This must be a public URL.
          nullable: true
        carrier_service_type:
          type: string
          description: Distinguishes between API or legacy carrier services.
          nullable: true
        name:
          type: string
          description: The name of the shipping service as seen by merchants and their customers.
          nullable: true
        service_discovery:
          type: boolean
          description: Whether merchants are able to send dummy data to your service through the Shopify admin to see shipping rate examples.
          nullable: true
        admin_graphql_api_id:
          type: string
          nullable: true
        format:
          $ref: '#/components/schemas/CarrierServiceFormat'
        id:
          type: integer
          format: int64
      additionalProperties: false
    UpdateCarrierServiceRequest:
      required:
        - carrier_service
      type: object
      properties:
        carrier_service:
          $ref: '#/components/schemas/UpdateCarrierService'
      additionalProperties: false
    UpdateFulfillmentService:
      required:
        - id
      type: object
      properties:
        admin_graphql_api_id:
          type: string
          nullable: true
        callback_url:
          type: string
          description: "The callback URL that the fulfillment service has registered for requests. The following considerations apply: \r\n\r\n*   Shopify queries the `callback_url/fetch_tracking_numbers` endpoint to retrieve tracking numbers for orders, if `tracking_support` is set to `true`. \r\n*   Shopify queries the `callback_url/fetch_stock` endpoint to retrieve inventory levels, if `inventory_management` is set to `true`. \r\n*   Shopify uses the `callback_url/fulfillment_order_notification` endpoint to send [ fulfillment and cancellation requests](/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations) if the fulfillment service has opted in to the fulfillment order based workflow for managing fulfillments (`fulfillment_orders_opt_in` is set to `true`). \r\n\r\n The `callback_url` field is required if `inventory_management`, `tracking_support`, or `fulfillment_orders_opt_in` is set to `true`."
          nullable: true
        fulfillment_orders_opt_in:
          type: boolean
          description: 'Whether the fulfillment service uses the [fulfillment order based workflow](/apps/fulfillment/fulfillment-service-apps/manage-fulfillments) for managing fulfillments.'
          nullable: true
        permits_sku_sharing:
          type: boolean
          description: Whether the fulfillment service can stock inventory alongside other locations.
          nullable: true
        handle:
          type: string
          description: Human-readable unique identifier for this fulfillment service.
          nullable: true
        inventory_management:
          type: boolean
          description: 'Whether the fulfillment service tracks product inventory and provides updates to Shopify. Valid values: `true` and `false`.'
          nullable: true
        location_id:
          type: integer
          description: The unique identifier of the location associated with the fulfillment service
          format: int64
          nullable: true
        name:
          type: string
          description: The name of the fulfillment service as seen by merchants.
          nullable: true
        provider_id:
          type: integer
          description: A unique identifier for the fulfillment service provider.
          format: int64
          nullable: true
        requires_shipping_method:
          type: boolean
          description: 'Whether the fulfillment service requires products to be physically shipped. Valid values: `true` and `false`.'
          nullable: true
        tracking_support:
          type: boolean
          description: 'Whether the fulfillment service provides tracking numbers for packages. Valid values: `true` and `false`.'
          nullable: true
        format:
          $ref: '#/components/schemas/FulfillmentServiceFormat'
        include_pending_stock:
          type: boolean
          description: This property is undocumented by Shopify.
          nullable: true
        service_name:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        email:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        id:
          type: integer
          format: int64
      additionalProperties: false
    UpdateFulfillmentServiceRequest:
      required:
        - fulfillment_service
      type: object
      properties:
        fulfillment_service:
          $ref: '#/components/schemas/UpdateFulfillmentService'
      additionalProperties: false
    UpdateTrackingInformationForFulfillmentRequest:
      type: object
      additionalProperties: false
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
security:
  - ApiKey: [ ]
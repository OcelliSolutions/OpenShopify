openapi: 3.0.1
info:
  title: Orders
  description: Orders
  version: '2022-07'
servers:
  - url: 'https://{store_name}.myshopify.com/admin/api/{api_version}'
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
      api_version:
        default: '2022-07'
        description: The api version.
  - url: 'https://{store_name}.myshopify.com/admin'
    description: Some endpoints do not use the standard routing. This is an alternate.
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
paths:
  /checkouts.json:
    get:
      tags:
        - AbandonedCheckouts
      summary: Retrieves a list of abandoned checkouts
      operationId: ListAbandonedCheckouts
      parameters:
        - name: created_at_max
          in: query
          description: 'Show checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)'
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          description: 'Show checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)'
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: The maximum number of results to show.
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          description: A unique ID used to access a certain page of results.
          schema:
            type: string
        - name: since_id
          in: query
          description: Restrict results to after the specified ID.
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: Show only checkouts with a given status.
          schema:
            $ref: '#/components/schemas/AbandonedCheckoutStatusRequest'
        - name: updated_at_max
          in: query
          description: 'Show checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)'
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          description: 'Show checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonedCheckoutList'
  /draft_orders.json:
    post:
      tags:
        - DraftOrder
      summary: Create a new DraftOrder
      operationId: CreateDraftOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDraftOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateDraftOrderRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftOrderItem'
    get:
      tags:
        - DraftOrder
      summary: Retrieves a list of draft orders
      operationId: ListDraftOrders
      parameters:
        - name: fields
          in: query
          description: A comma-separated list of fields to include in the response
          schema:
            type: string
        - name: ids
          in: query
          description: Filter by list of IDs
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: limit
          in: query
          description: Amount of results
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          description: A unique ID used to access a certain page of results.
          schema:
            type: string
        - name: since_id
          in: query
          description: Restrict results to after the specified ID
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          schema:
            type: string
        - name: updated_at_max
          in: query
          description: 'Show orders last updated before date (format: 2014-04-25T16:15:47-04:00)'
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          description: 'Show orders last updated after date (format: 2014-04-25T16:15:47-04:00)'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftOrderList'
  '/draft_orders/{draft_order_id}.json':
    put:
      tags:
        - DraftOrder
      summary: Modify an existing DraftOrder
      operationId: UpdateDraftOrder
      parameters:
        - name: draft_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDraftOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateDraftOrderRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftOrderItem'
    get:
      tags:
        - DraftOrder
      summary: Receive a single DraftOrder
      operationId: GetDraftOrder
      parameters:
        - name: draft_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          description: A comma-separated list of fields to include in the response
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftOrderItem'
    delete:
      tags:
        - DraftOrder
      summary: Remove an existing DraftOrder
      operationId: DeleteDraftOrder
      parameters:
        - name: draft_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  /draft_orders/count.json:
    get:
      tags:
        - DraftOrder
      summary: Receive a count of all DraftOrders
      operationId: CountDraftOrders
      parameters:
        - name: since_id
          in: query
          description: Count draft orders after the specified ID.
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: Count draft orders that have a given status.
          schema:
            type: string
        - name: updated_at_max
          in: query
          description: 'Count draft orders last updated before the specified date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          description: 'Count draft orders last updated after the specified date (format: 2014-04-25T16:15:47-04:00).'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/draft_orders/{draft_order_id}/send_invoice.json':
    post:
      tags:
        - DraftOrder
      summary: Send an invoice
      operationId: SendInvoice
      parameters:
        - name: draft_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendInvoiceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendInvoiceRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftOrderInvoiceItem'
  '/draft_orders/{draft_order_id}/complete.json':
    put:
      tags:
        - DraftOrder
      summary: Complete a draft order
      operationId: CompleteDraftOrder
      parameters:
        - name: draft_order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteDraftOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CompleteDraftOrderRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftOrderItem'
  /orders.json:
    get:
      tags:
        - Order
      summary: Retrieve a list of orders
      operationId: ListOrders
      parameters:
        - name: attribution_app_id
          in: query
          description: 'Show orders attributed to a certain app, specified by the app ID. Set as `current` to show orders for the app currently consuming the API.'
          schema:
            type: integer
            format: int64
        - name: created_at_max
          in: query
          description: Show orders created at or before date.
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          description: Show orders created at or after date.
          schema:
            type: string
            format: date-time
        - name: fields
          in: query
          description: 'Retrieve only certain fields, specified by a comma-separated list of fields names.'
          schema:
            type: string
        - name: financial_status
          in: query
          description: Filter orders by their financial status.
          schema:
            $ref: '#/components/schemas/FinancialStatusRequest'
        - name: fulfillment_status
          in: query
          description: Filter orders by their fulfillment status.
          schema:
            $ref: '#/components/schemas/FulfillmentStatusRequest'
        - name: ids
          in: query
          description: Retrieve only orders specified by a comma-separated list of order IDs.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: limit
          in: query
          description: The maximum number of results to show on a page.
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          description: A unique ID used to access a certain page of results.
          schema:
            type: string
        - name: processed_at_max
          in: query
          description: Show orders imported at or before date.
          schema:
            type: string
            format: date-time
        - name: processed_at_min
          in: query
          description: Show orders imported at or after date.
          schema:
            type: string
            format: date-time
        - name: since_id
          in: query
          description: Show orders after the specified ID.
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: Filter orders by their status.
          schema:
            $ref: '#/components/schemas/OrderStatusRequest'
        - name: updated_at_max
          in: query
          description: Show orders last updated at or before date.
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          description: Show orders last updated at or after date.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
    post:
      tags:
        - Order
      summary: Create an order
      operationId: CreateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
  '/orders/{order_id}.json':
    get:
      tags:
        - Order
      summary: Retrieve a specific order
      operationId: GetOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          description: 'Retrieve only certain fields, specified by a comma-separated list of fields names.'
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
    put:
      tags:
        - Order
      summary: Retrieve a list of orders
      operationId: UpdateOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
    delete:
      tags:
        - Order
      summary: Delete an order
      operationId: DeleteOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  /orders/count.json:
    get:
      tags:
        - Order
      summary: Retrieve an order count
      operationId: CountOrders
      parameters:
        - name: created_at_max
          in: query
          description: Orders created before date specified.
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          description: Orders created after date specified.
          schema:
            type: string
            format: date-time
        - name: financial_status
          in: query
          description: Orders of a given financial status.
          schema:
            $ref: '#/components/schemas/FinancialStatusRequest'
        - name: fulfillment_status
          in: query
          description: Orders of a given fulfillment status.
          schema:
            $ref: '#/components/schemas/FulfillmentStatusRequest'
        - name: status
          in: query
          description: Orders of a given status.
          schema:
            $ref: '#/components/schemas/OrderStatusRequest'
        - name: updated_at_max
          in: query
          description: Orders last updated before date specified.
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          description: Orders last updated after date specified.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/orders/{order_id}/close.json':
    post:
      tags:
        - Order
      summary: Close an order
      operationId: CloseOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
  '/orders/{order_id}/open.json':
    post:
      tags:
        - Order
      summary: Re-open a closed order
      operationId: ReOpenClosedOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
  '/orders/{order_id}/cancel.json':
    post:
      tags:
        - Order
      summary: Cancel an order
      operationId: CancelOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
  '/orders/{order_id}/risks.json':
    post:
      tags:
        - OrderRisk
      summary: Creates an order risk for an order
      operationId: CreateOrderRisk
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRiskRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrderRiskRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRiskItem'
    get:
      tags:
        - OrderRisk
      summary: Retrieves a list of all order risks for an order
      operationId: ListOrderRisks
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRiskList'
  '/orders/{order_id}/risks/{risk_id}.json':
    get:
      tags:
        - OrderRisk
      summary: Retrieves a single order risk by its ID
      operationId: GetOrderRisk
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: risk_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRiskItem'
    put:
      tags:
        - OrderRisk
      summary: Updates an order risk
      operationId: UpdateOrderRisk
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: risk_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRiskRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRiskRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRiskItem'
    delete:
      tags:
        - OrderRisk
      summary: Deletes an order risk for an order
      operationId: DeleteOrderRisk
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: risk_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRiskItem'
  '/orders/{order_id}/refunds.json':
    get:
      tags:
        - Refund
      summary: Retrieves a list of refunds for an order
      operationId: ListRefunds
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          description: 'Show only certain fields, specified by a comma-separated list of field names.'
          schema:
            type: string
        - name: in_shop_currency
          in: query
          description: Show amounts in the shop currency for the underlying transaction.
          schema:
            type: boolean
        - name: limit
          in: query
          description: The maximum number of results to retrieve.
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          description: A unique ID used to access a certain page of results.
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundList'
    post:
      tags:
        - Refund
      summary: Creates a refund
      operationId: CreateRefund
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateRefundRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundItem'
  '/orders/{order_id}/refunds/{refund_id}.json':
    get:
      tags:
        - Refund
      summary: Retrieves a specific refund
      operationId: GetRefund
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: refund_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          description: 'Show only certain fields, specified by a comma-separated list of field names.'
          schema:
            type: string
        - name: in_shop_currency
          in: query
          description: Show amounts in the shop currency for the underlying transaction.
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundItem'
  '/orders/{order_id}/refunds/calculate.json':
    post:
      tags:
        - Refund
      summary: Calculates a refund
      operationId: CalculateRefund
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateRefundRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CalculateRefundRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundItem'
  '/orders/{order_id}/transactions.json':
    get:
      tags:
        - Transaction
      summary: Retrieves a list of transactions
      operationId: ListTransactions
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          description: 'Show only certain fields, specifed by a comma-separated list of fields names.'
          schema:
            type: string
        - name: in_shop_currency
          in: query
          description: Show amounts in the shop currency.
          schema:
            type: boolean
        - name: since_id
          in: query
          description: Retrieve only transactions after the specified ID.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
    post:
      tags:
        - Transaction
      summary: Creates a transaction for an order
      operationId: CreateTransaction
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionItem'
  '/orders/{order_id}/transactions/count.json':
    get:
      tags:
        - Transaction
      summary: Retrieves a count of an order's transactions
      operationId: CountOrdersTransactions
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/orders/{order_id}/transactions/{transaction_id}.json':
    get:
      tags:
        - Transaction
      summary: Retrieves a specific transaction
      operationId: GetTransaction
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: transaction_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          description: 'Show only certain fields, specified by a comma-separated list of field names.'
          schema:
            type: string
        - name: in_shop_currency
          in: query
          description: Show amounts in the shop currency.
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionItem'
components:
  schemas:
    AbandonedCheckoutList:
      required:
        - checkouts
      type: object
      properties:
        checkouts:
          type: array
          items:
            $ref: '#/components/schemas/Checkout'
      additionalProperties: { }
    AbandonedCheckoutStatusRequest:
      enum:
        - open
        - closed
      type: string
      additionalProperties: { }
    Address:
      required:
        - id
      type: object
      properties:
        address1:
          type: string
          description: The customer's mailing address
          nullable: true
        address2:
          type: string
          description: An additional field for the customer's mailing address.
          nullable: true
        city:
          type: string
          description: 'The customer''s city, town, or village.'
          nullable: true
        country:
          type: string
          description: The customer's country.
          nullable: true
        country_code:
          type: string
          description: The two-letter country code corresponding to the customer's country.
          nullable: true
        country_name:
          type: string
          description: The customer’s normalized country name.
          nullable: true
        company:
          type: string
          description: The customer’s company.
          nullable: true
        customer_id:
          type: integer
          description: The unique identifier for the customer.
          format: int64
          nullable: true
        first_name:
          type: string
          description: The customer’s first name.
          nullable: true
        last_name:
          type: string
          description: The customer’s last name.
          nullable: true
        name:
          type: string
          description: The customer’s first and last names.
          nullable: true
        phone:
          type: string
          description: The customer’s phone number at this address.
          nullable: true
        province:
          type: string
          description: 'The customer’s region name. Typically a province, a state, or a prefecture.'
          nullable: true
        province_code:
          type: string
          description: The two-letter code for the customer’s region.
          nullable: true
        zip:
          type: string
          description: 'The customer’s postal code, also known as zip, postcode, Eircode, etc.'
          nullable: true
        default:
          type: boolean
          description: Indicates whether this address is the default address.
          nullable: true
        latitude:
          type: number
          format: decimal
          nullable: true
        longitude:
          type: number
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
      additionalProperties: { }
    AppliedDiscount:
      type: object
      properties:
        title:
          type: string
          description: Title of the discount.
          nullable: true
        description:
          type: string
          description: Reason for the discount.
          nullable: true
        value:
          type: string
          description: 'he value of the discount. If the type of the discount is fixed_amount, then this is a fixed dollar amount. If the type is percentage, then this is the percentage.'
          nullable: true
        value_type:
          $ref: '#/components/schemas/DiscountValueType'
        amount:
          type: number
          description: "The applied amount of the discount, based on the setting of value_type. \r\nWhen ValueType is set to fixed_amount discount amount = quantity /// value\r\nWhen ValueType is set to percentage discount amount = floor(price /// quantity /// value) / 100"
          format: decimal
          nullable: true
      additionalProperties: { }
    CalculateRefundRequest:
      type: object
      properties:
        refund:
          $ref: '#/components/schemas/CalculateRefundRequestDetail'
      additionalProperties: false
    CalculateRefundRequestDetail:
      type: object
      properties:
        currency:
          type: string
          description: 'The three-letter code (ISO 4217 format) for the currency used for the refund. Note: Required whenever the shipping amount property is provided.'
          nullable: true
        refund_line_items:
          type: array
          items:
            $ref: '#/components/schemas/RefundLineItem'
          description: "A list of refunded line items. Each entry has the following properties: \r\n\r\n*   **id**: The unique identifier of the line item in the refund. \r\n*   **line_item**: A line item being refunded. \r\n*   **line_item_id**: The ID of the related line item in the order. \r\n*   **quantity**: The refunded quantity of the associated line item. \r\n*   **restock_type**: How this refund line item affects inventory levels. Valid values: \r\n\r\n    *   **no_restock**: Refunding these items won't affect inventory. The number of fulfillable units for this line item will remain unchanged. For example, a refund payment can be issued but no items will be refunded or made available for sale again. \r\n    *   **cancel**: The items have not yet been fulfilled. The canceled quantity will be added back to the available count. The number of fulfillable units for this line item will decrease. \r\n    *   **return**: The items were already delivered, and will be returned to the merchant. The refunded quantity will be added back to the available count. The number of fulfillable units for this line item will remain unchanged. \r\n    *   **legacy_restock**: The deprecated `restock` property was used for this refund. These items were made available for sale again. This value is not accepted when creating new refunds.   \r\n*   **location_id**: The unique identifier of the [location](/api/admin-rest/current/resources/location) where the items will be restocked. Required when `restock_type` has the value `return` or `cancel`. \r\n*   **subtotal**: The subtotal of the refund line item. \r\n*   **total_tax**: The total tax on the refund line item. \r\n*   **subtotal_set**: The subtotal of the refund line item in shop and presentment currencies. \r\n*   **total_tax_set**: The total tax of the line item in shop and presentment currencies."
          nullable: true
        shipping:
          $ref: '#/components/schemas/Shipping'
      additionalProperties: false
    CancelOrderRequest:
      type: object
      additionalProperties: false
    CancelReason:
      enum:
        - customer
        - fraud
        - inventory
        - declined
        - other
      type: string
      additionalProperties: false
    Checkout:
      required:
        - id
        - line_items
        - token
      type: object
      properties:
        applied_discount:
          type: string
          description: "A cart-level discount applied to the checkout. Apply a discount by specifying values for `amount`, `title`, `description`, `value`, and `value_type`. \r\n\r\n*   **amount**: The amount that is deducted from `payment_due` in presentment currency. \r\n*   **title**: The title to categorize the applied discount. \r\n*   **description**: The description of the applied discount.  \r\n*   **value**: The value that was used to calculate the final applied discount amount. \r\n*   **value_type**: The type of value that was used to calculate the final applied discount amount. Valid values: `fixed_amount` and `percentage`. \r\n*   **non_applicable_reason**: The reason why the discount is not applicable, if the discount cannot be applied to the checkout. \r\n*   **applicable**: Whether this discount code can be applied to the checkout. \r\n*   **application_type**: Describes how the discount was applied to the checkout. Possible values: \r\n\r\n    *   **automatic**: The discount [was applied automatically](/api/examples/discounts#creating-automatic-discounts). \r\n    *   **discount_code**: The merchant or customer entered a [discount code](/api/examples/discounts#creating-code-discounts). \r\n    *   **manual**: The discount was applied manually by the merchant or an app. \r\n    *   **script**: The discount was applied by a [Shopify Script](https://help.shopify.com/en/manual/checkout-settings/script-editor)."
          nullable: true
        billing_address:
          $ref: '#/components/schemas/Address'
        buyer_accepts_marketing:
          type: boolean
          description: Whether the customer has consented to receive marketing material via email.
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) of the shop''s default currency at the time of checkout. For the currency that the customer used at checkout, see `presentment_currency`.'
          nullable: true
        customer_id:
          type: integer
          description: The ID of the customer associated with this checkout.
          format: int64
          nullable: true
        discount_code:
          type: string
          description: 'The discount code that is applied to the checkout. This populates `applied_discount` with the appropriate metadata for that discount code. To remove a discount code, send an empty string or `null`.'
          nullable: true
        email:
          type: string
          description: The customer's email address. A checkout needs to have a value for `email` or `phone` before it can be completed.
          nullable: true
        gift_cards:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutGiftCard'
          description: "A list of gift card objects, each containing information about a gift card applied to this checkout. Gift cards can be applied to a checkout by passing `{ \"checkout\": { \"gift_cards\": [{ \"code\": \"a gift card code\" }, { \"code\": \"another gift card code\" }] } }`. Each gift card object has the following properties: \r\n\r\n*   **amount_used**: The amount of the gift card used by this checkout in presentment currency. \r\n*   **code**: The gift card code. \r\n*   **balance**: The amount left on the gift card after being applied to this checkout in presentment currency. \r\n*   **id**: The ID for the applied gift card. \r\n*   **last_characters**: The last four characters of the applied gift card for display back to the user.  Updating the gift card list overwrites any previous list already defined in the checkout. To remove a gift card from the list of applied gift cards, re-apply the `gift_cards` array without that gift card."
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutLineItem'
          description: "A list of line item objects, each containing information about an item in the checkout. Each line item object has the following properties: \r\n\r\n*   **applied_discounts**: A list of the discounts applied to the line item. \r\n*   **compare_at_price**: The original selling price of the product, if applicable. \r\n*   **discount_allocations**: A list all discounts on the checkout that target this line item, including both \"across\" and \"each\" applications. A superset of `applied_discounts`. \r\n*   **fulfillment_service**: If the variant is a gift card, allows to override the fulfillment service so the gift card can be activated with a custom code. Valid values: `manual`. \r\n*   **grams**: The weight of the item in grams. \r\n*   **id**: The checkout-specific ID of the line item. \r\n*   **line_price**: The line price of the item, based on `price` multiplied by `quantity`. \r\n*   **price**: The price of the item in presentment currency. \r\n*   **product_id**: The product of the line item. \r\n*   **properties**: The [customization information](/docs/liquid/reference/objects/line_item#line_item-properties) for a line item (optional). \r\n*   **quantity**: The number of products that were purchased. \r\n*   **requires_shipping**: Whether the fulfillment requires shipping. \r\n*   **sku**: The unique identifier of the item in the fulfillment. \r\n*   **taxable**: Whether this product is taxable. \r\n*   **title**: The title of the product. \r\n*   **variant_id**: The variant ID of the line item. \r\n*   **variant_title**: The title of the product variant. \r\n*   **vendor**: The name of the item's supplier."
        order:
          type: string
          description: 'An object containing the ID, name, and status page URL of the associated order when the checkout is complete. Default value: `null`.'
          nullable: true
        payment_due:
          type: string
          description: 'The amount left to be paid in presentment currency. This is equal to the sum of the checkout line prices, taxes, and shipping minus discounts and gift cards.'
          nullable: true
        payment_url:
          type: string
          description: 'The URL that must be used to store credit cards in Shopify''s card vault. These URLs are subject to change, so you should always use the one supplied here. The general pattern for the URLs is `https://elb.deposit.shopifycs.com/sessions`.'
          nullable: true
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications. A checkout needs to have a value for `email` or `phone` before it can be completed.
          nullable: true
        presentment_currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency that the customer used for payment at checkout. For the shop''s default currency, see `currency`.'
          nullable: true
        requires_shipping:
          type: boolean
          description: 'Whether the checkout requires shipping. If `true`, then `shipping_line` must be set before creating a payment.'
          nullable: true
        reservation_time:
          type: string
          description: 'The reservation time in seconds for the line item products. Default value: `null`. This property is not writable.'
          nullable: true
          deprecated: true
        reservation_time_left:
          type: integer
          description: 'The time in seconds that the line item products will be held. Default value: `0`. This property is not writable.'
          format: int64
          nullable: true
          deprecated: true
        shipping_address:
          $ref: '#/components/schemas/Address'
        shipping_line:
          $ref: '#/components/schemas/ShippingLine'
        shipping_rate:
          $ref: '#/components/schemas/ShippingRate'
        source_name:
          type: string
          description: 'The source of the checkout. To use this field for sales attribution, you must register the channels that your app is managing. You can register the channels that your app is managing by completing [this Google Form](https://docs.google.com/forms/d/e/1FAIpQLScmVTZRQNjOJ7RD738mL1lGeFjqKVe_FM2tO9xsm21QEo5Ozg/viewform?usp=sf_link). After you''ve submited your request, you need to wait for your request to be processed by Shopify. You can find a list of your channels in the Partner Dashboard, in your app''s Marketplace extension. You can specify a handle as the `source_name` value in your request.'
          nullable: true
        source_identifier:
          type: string
          description: The ID of the order placed on the originating platform.This value doesn't correspond to the Shopify ID that's generated from a completed draft.
          nullable: true
        source_url:
          type: string
          description: 'A valid URL to the original order on the originating surface.This URL is displayed to merchants on the Order Details page.If the URL is invalid, then it won''t be displayed.'
          nullable: true
        subtotal_price:
          type: number
          description: 'The price of the checkout in presentment currency before shipping, taxes, and tips.'
          format: decimal
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: "An array of `tax_line` objects, each of which represents a tax rate applicable to the checkout. Each tax line object has the following properties: \r\n\r\n*   **price**: The amount of tax to be charged in presentment currency. \r\n*   **rate**: The rate of tax to be applied. \r\n*   **title**: The name of the tax."
          nullable: true
        taxes_included:
          type: boolean
          description: Whether taxes are included in the subtotal price.
          nullable: true
        total_price:
          type: number
          description: 'The sum of the the checkout line prices, taxes, shipping costs, tips, and discounts in presentment currency.'
          format: decimal
          nullable: true
        total_tax:
          type: number
          description: The sum of all the taxes applied to the checkout in presentment currency.
          format: decimal
          nullable: true
        user_id:
          type: integer
          description: 'The ID of the user who created the checkout. This value is passed to the order. Default value: `null`.'
          format: int64
          nullable: true
        web_url:
          type: string
          description: The URL pointing to the checkout accessible from the web.
          nullable: true
        token:
          minLength: 1
          type: string
          description: A unique identifier for a particular checkout.
        abandoned_checkout_url:
          type: string
          description: The full recovery URL to be sent to a customer to recover their abandoned checkout.
          nullable: true
        cart_token:
          type: string
          description: Unique identifier for a particular cart that is attached to a particular order.
          nullable: true
        closed_at:
          type: string
          description: The date and time when the abandoned cart was completed. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        completed_at:
          type: string
          description: The date and time when the abandoned cart was last modified. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        customer:
          $ref: '#/components/schemas/Customer'
        customer_locale:
          type: string
          description: 'The two or three-letter language code, optionally followed by a region modifier. Example values: en, en-CA.'
          nullable: true
        device_id:
          type: integer
          description: The ID of the Shopify POS device that created the checkout.
          format: int64
          nullable: true
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode'
          description: Applicable discount codes that can be applied to the order. If no codes exist the value will default to blank.
          nullable: true
        gateway:
          type: string
          description: The payment gateway used.
          nullable: true
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when entering the shop.
          nullable: true
        location_id:
          type: integer
          description: The ID of the physical location where the checkout was processed.
          format: int64
          nullable: true
        note:
          type: string
          description: The text of an optional note that a shop owner can attach to the order.
          nullable: true
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          description: 'An array of shipping line objects, each of which details the shipping methods used.'
          nullable: true
        total_discounts:
          type: number
          description: The total amount of the discounts to be applied to the price of the order.
          format: decimal
          nullable: true
        total_duties:
          type: number
          description: The total duties of the checkout in presentment currency.
          format: decimal
          nullable: true
        total_line_items_price:
          type: number
          description: The sum of all the prices of all the items in the order.
          format: decimal
          nullable: true
        total_weight:
          type: number
          description: 'The sum of all the weights of the line items in the order, in grams.'
          format: decimal
          nullable: true
        name:
          type: string
          description: Undocumented
          nullable: true
        note_attributes:
          $ref: '#/components/schemas/NoteAttribute'
        payments:
          type: array
          items:
            type: string
          description: Undocumented
          nullable: true
        tax_exempt:
          type: boolean
          description: Undocumented
          nullable: true
        total_tip_received:
          type: number
          description: Undocumented
          format: decimal
          nullable: true
        tax_manipulations:
          type: array
          items:
            type: string
          description: Undocumented
          nullable: true
        shipping_rates:
          type: array
          items:
            $ref: '#/components/schemas/ShippingRate'
          description: Undocumented
          nullable: true
        buyer_accepts_sms_marketing:
          type: boolean
          description: Undocumented
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    CheckoutGiftCard:
      type: object
      properties:
        id:
          type: integer
          description: The ID for the applied gift card
          format: int64
          nullable: true
        amount_used:
          type: number
          description: The amount of the gift card used by this checkout in presentment currency.
          format: decimal
          nullable: true
        code:
          type: string
          description: The gift card code
          nullable: true
        balance:
          type: number
          description: The amount left on the gift card after being applied to this checkout in presentment currency.
          format: decimal
          nullable: true
        last_characters:
          type: string
          description: "The last four characters of the applied gift card for display back to the user.\r\nUpdating the gift card list overwrites any previous list already defined in the checkout.To remove a gift card from the list of applied gift cards, re-apply the `gift_cards` array without that gift card."
          nullable: true
      additionalProperties: { }
    CheckoutLineItem:
      required:
        - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
          description: The checkout-specific ID of the line item.
        admin_graphql_api_id:
          type: string
          nullable: true
        fulfillable_quantity:
          type: integer
          description: 'The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity.'
          format: int32
          nullable: true
        fulfillment_service:
          type: string
          description: 'Service provider who is doing the fulfillment. Valid values are either "manual" or the name of the provider. eg: "amazon", "shipwire", etc.'
          nullable: true
        fulfillment_status:
          type: string
          description: 'The fulfillment status of this line item. Known values are ''fulfilled'', ''null'' and ''partial''.'
          nullable: true
        grams:
          type: integer
          description: The weight of the item in grams.
          format: int64
          nullable: true
        price:
          type: number
          description: The price of the item before discounts have been applied.
          format: decimal
          nullable: true
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The number of products that were purchased.
          format: int32
          nullable: true
        requires_shipping:
          type: boolean
          description: States whether or not the fulfillment requires shipping.
          nullable: true
        sku:
          type: string
          description: A unique identifier of the item in the fulfillment.
          nullable: true
        title:
          type: string
          description: The title of the product.
          nullable: true
        variant_id:
          type: integer
          description: The id of the product variant. Can be null if the product purchased is not a variant.
          format: int64
          nullable: true
        variant_title:
          type: string
          description: The title of the product variant. Can be null if the product purchased is not a variant.
          nullable: true
        name:
          type: string
          description: The name of the product variant.
          nullable: true
        vendor:
          type: string
          description: The name of the supplier of the item.
          nullable: true
        gift_card:
          type: boolean
          description: States whether the order used a gift card.
          nullable: true
        taxable:
          type: boolean
          description: States whether or not the product was taxable.
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'An array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem.'
          nullable: true
        tip_payment_gateway:
          type: string
          description: 'The payment gateway used to tender the tip, such as shopify_payments. Present only on tips.'
          nullable: true
        tip_payment_method:
          type: string
          description: 'The payment method used to tender the tip, such as Visa. Present only on tips.'
          nullable: true
        total_discount:
          type: number
          description: The total discount amount applied to this line item. This value is not subtracted in the line item price.
          format: decimal
          nullable: true
        total_discount_set:
          $ref: '#/components/schemas/PriceSet'
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocation'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
          nullable: true
        properties:
          $ref: '#/components/schemas/LineItemProperty'
        variant_inventory_management:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        product_exists:
          type: boolean
          description: This property is undocumented by Shopify.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemDuty'
          description: 'A list of duty objects, each containing information about a duty on the line item'
          nullable: true
        origin_location:
          $ref: '#/components/schemas/LineItemOriginLocation'
        key:
          type: string
          description: The key for the line item.
          nullable: true
        origin_location_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
          format: int64
          nullable: true
      additionalProperties: { }
    ClientDetails:
      type: object
      properties:
        accept_language:
          type: string
          description: Shopify does not offer documentation for this field.
          nullable: true
        browser_height:
          type: string
          description: 'The browser screen height in pixels, if available.'
          nullable: true
        browser_ip:
          type: string
          description: The browser IP address.
          nullable: true
        browser_width:
          type: string
          description: 'The browser screen width in pixels, if available.'
          nullable: true
        session_hash:
          type: string
          description: A hash of the session.
          nullable: true
        user_agent:
          type: string
          description: The browser's user agent string.
          nullable: true
      additionalProperties: { }
    CompleteDraftOrderRequest:
      type: object
      additionalProperties: false
    CountItem:
      type: object
      properties:
        count:
          type: integer
          format: int32
      additionalProperties: { }
    CreateDraftOrder:
      type: object
      properties:
        order_id:
          type: integer
          description: The ID of the order that's created and associated with the draft order after the draft order is completed.
          format: int64
          nullable: true
        name:
          type: string
          description: Name of the draft order.
          nullable: true
        customer:
          $ref: '#/components/schemas/Customer'
        shipping_address:
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'
        note:
          type: string
          description: The text of an optional note that a merchant can attach to the draft order.
          nullable: true
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          description: The extra information that's added to the order. The information appears in the**Additional details** section of an order details page. Each array entry must contain a hash with `name` and `value` keys.
          nullable: true
        email:
          type: string
          description: The customer's email address.
          nullable: true
        currency:
          type: string
          description: 'The three letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency used for the payment.'
          nullable: true
        invoice_sent_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the invoice was emailed to the customer.'
          format: date-time
          nullable: true
        invoice_url:
          type: string
          description: The URL for the invoice.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/DraftLineItem'
          description: "The product variant line item or custom line item associated to the draft order. Each draft order must include at least one `line_item`. Each `line_item` resource has the following properties: \r\n\r\n*   **custom**: *Read only field* Whether this is a custom line item or a product variant line item. If set to `true` indicates a custom line item. If set to `false` indicates a product variant line item. \r\n*   **id**: The ID of the line item. \r\n*   **variant_id**: The ID of the product variant corresponding to the line item. Required for a product variant line item. Set to `null` for a custom line item. \r\n*   **product_id**: The ID of the product corresponding to the line item’s product variant. \r\n*   **name**: The name of the product. \r\n*   **variant_title**: The title of the product variant. Defaults to `Custom` for custom line items created via the API. \r\n*   **vendor**: The vendor. \r\n*   **quantity**: The number of products that were purchased. \r\n*   **gift_card**: Indicates if the product is a gift card. Valid values: `true` or `false`. \r\n*   **fulfillment_service**: The service provider responsible for fulfillment. Valid values are either `manual` or the name of the provider, for example amazon, shipwire. Defaults to `manual` for custom line items. \r\n*   **properties**: An array of custom information for an item that has been added to the draft order, often used to provide [product customization options](/api/liquid/objects/line_item#line_item-properties). Copied to created order when draft order is completed. \r\n*   **applied_discount**: The discount applied to the line item. For more information, see the `applied_discount` property. \r\n*   **tax_lines**: *Read only field* The calculated rate and amount of taxes for the line item. \r\n\r\n    *   **price**: The amount of tax to be charged. \r\n    *   **rate**: The rate of tax to be applied. \r\n    *   **title**: The name of the tax.  \r\n*   **title**: The title of the product or variant. Applicable only to custom line items. *Required field*. \r\n*   **price**: The price of the item before discounts have been applied. Applicable only to custom line items. *Required field*. \r\n*   **grams**: The weight of the item in grams. Applicable only to custom line items. If not specified, defaults to 0. \r\n*   **requires_shipping**: Whether the fulfillment requires shipping. Applicable only to custom line items. Valid values: `true` or `false.` \r\n*   **sku**: A unique identifier for the item in the fulfillment. Applicable only to custom line items. \r\n*   **taxable**: Whether the product is taxable. Applicable only to custom line items."
          nullable: true
        payment_terms:
          type: string
          description: "The terms and conditions under which a payment should be processed.\r\n\r\n*   **amount**: The amount that is owed according to the payment terms. \r\n*   **currency**: The presentment currency for the payment. \r\n*   **payment_terms_name**: The name of the selected payment terms template for the draft order. \r\n*   **payment_terms_type**: The type of selected payment terms template for the draft order. \r\n*   **due_in_days**: The number of days between the invoice date and due date that is defined in the selected payment terms template. \r\n*   **payment_schedules**: An array of schedules associated to the payment terms. \r\n\r\n    *   **amount**: The amount that is owed according to the payment terms. \r\n    *   **currency**: The presentment currency for the payment. \r\n    *   **issued_at**: The date and time when the payment terms were initiated. \r\n    *   **due_at**: The date and time when the payment is due. Calculated based on `issued_at` and `due_in_days` or a customized fixed date if the type is fixed. \r\n    *   **completed_at**: The date and time when the purchase is completed. Returns **null** initially and updates when the payment is captured. \r\n    *   **expected_payment_method**: The name of the payment method gateway."
          nullable: true
        shipping_line:
          $ref: '#/components/schemas/DraftShippingLine'
        source_name:
          type: string
          description: 'The source of the checkout. To use this field for sales attribution, you need to register the channels that your app is managing. You can register the channels that your app is managing by completing the [Order Attribution Access Form](https://docs.google.com/forms/d/e/1FAIpQLScmVTZRQNjOJ7RD738mL1lGeFjqKVe_FM2tO9xsm21QEo5Ozg/viewform?usp=sf_link). After you''ve submited the form, you''ll need to wait for your request to be processed by Shopify. You can find a list of your channels in the Partner Dashboard, in your app''s Marketplace extension. You can specify a handle as the `source_name` value in your request.'
          nullable: true
        tags:
          type: string
          description: 'A comma-seperated list of additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length. For example, `tags: "tag1","tag2","tag3"`.'
          nullable: true
        tax_exempt:
          type: boolean
          description: 'Whether taxes are exempt for the draft order. If set to `false`, then Shopify refers to the `taxable` field for each `line_item`. If a customer is applied to the draft order, then Shopify uses the customer''s `tax_exempt` field instead.'
          nullable: true
        tax_exemptions:
          type: array
          items:
            type: string
          description: 'Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only. Valid values: * **EXEMPT_ALL**: This customer is exempt from all Canadian taxes. * **CA_STATUS_CARD_EXEMPTION**: This customer is exempt from specific taxes for holding a valid STATUS_CARD_EXEMPTION in Canada. * **CA_DIPLOMAT_EXEMPTION**: This customer is exempt from specific taxes for holding a valid DIPLOMAT_EXEMPTION in Canada. * **CA_BC_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in British Columbia. * **CA_MB_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Manitoba. * **CA_SK_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Saskatchewan. * **CA_BC_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in British Columbia. * **CA_MB_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Manitoba. * **CA_NS_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Nova Scotia. * **CA_PE_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Prince Edward Island. * **CA_SK_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Saskatchewan. * **CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in British Columbia. * **CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in Saskatchewan. * **CA_BC_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_BC_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_ON_PURCHASE_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PURCHASE_EXEMPTION in Ontario. * **CA_MB_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Manitoba. * **CA_NS_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Nova Scotia. * **CA_SK_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Saskatchewan.'
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: "An array of tax line resources, each of which details a tax applicable to the order. Each `tax_lines` resource has the following properties: \r\n\r\n*   **price**: The amount of tax to be charged. \r\n*   **rate**: The rate of tax to be applied. \r\n*   **title**: The name of the tax."
          nullable: true
        applied_discount:
          $ref: '#/components/schemas/AppliedDiscount'
        taxes_included:
          type: boolean
          description: 'Whether taxes are included in the order subtotal. Valid values: `true` or `false`.'
          nullable: true
        total_tax:
          type: number
          description: The sum of all the taxes applied to the order.
          format: decimal
          nullable: true
        subtotal_price:
          type: number
          description: The price of the order before shipping and taxes.
          format: decimal
          nullable: true
        total_price:
          type: number
          description: 'The sum of all the prices of all the items in the order, including taxes and discounts.'
          format: decimal
          nullable: true
        completed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the order is created and the draft order is completed.'
          format: date-time
          nullable: true
        status:
          type: string
          description: "The status of a draft order as it transitions into an order. When a draft order is created it is set to `open` status. The invoice can then be sent to the customer, and `status` changes to `invoice_sent`. The draft order can then be paid, set to pending, or paid by credit card. In each case, the draft order is set to `completed` and an order is created.\r\n\r\nAfter a draft order is set to `completed` the only further modifications that can be made are adding tags or metafields.\r\n\r\nValid values: * **open**: Draft order is open. * **invoice_sent**: Invoice has been sent for the draft order. * **completed**: Draft order has been completed and turned into an order."
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.DraftOrder. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.DraftOrder response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.DraftOrder metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        use_customer_default_address:
          type: boolean
          description: An optional boolean that you can send as part of a draft order object to load customer shipping information.
          nullable: true
      additionalProperties: false
    CreateDraftOrderRequest:
      required:
        - draft_order
      type: object
      properties:
        draft_order:
          $ref: '#/components/schemas/CreateDraftOrder'
      additionalProperties: false
    CreateOrder:
      type: object
      properties:
        app_id:
          type: integer
          description: The ID of the app that created the order.
          format: int64
          nullable: true
        billing_address:
          $ref: '#/components/schemas/Address'
        browser_ip:
          type: string
          description: The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported.
          nullable: true
        buyer_accepts_marketing:
          type: boolean
          description: Whether the customer consented to receive email updates from the shop.
          nullable: true
        cancel_reason:
          $ref: '#/components/schemas/CancelReason'
        cancelled_at:
          type: string
          description: The date and time when the order was canceled. Returns `null` if the order isn't canceled.
          format: date-time
          nullable: true
        cart_token:
          type: string
          description: A unique value when referencing the cart that's associated with the order.
          nullable: true
        checkout_token:
          type: string
          description: A unique value when referencing the checkout that's associated with the order.
          nullable: true
        client_details:
          $ref: '#/components/schemas/ClientDetails'
        closed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the order was closed. Returns `null` if the order isn''t closed.'
          format: date-time
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the shop currency.'
          nullable: true
        current_total_discounts:
          type: string
          description: 'The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_total_discounts_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_price:
          type: string
          description: 'The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_total_price_set:
          $ref: '#/components/schemas/PriceSet'
        current_subtotal_price:
          type: string
          description: 'The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_subtotal_price_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_tax:
          type: string
          description: 'The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds.'
          nullable: true
        current_total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        customer:
          $ref: '#/components/schemas/Customer'
        customer_locale:
          type: string
          description: 'The two or three-letter language code, optionally followed by a region modifier.'
          nullable: true
        discount_applications:
          type: array
          items:
            $ref: '#/components/schemas/DiscountApplication'
          description: "An ordered list of stacked discount applications.\r\n\r\nThe `discount_applications` property includes 3 types: `discount_code`, `manual`, and `script`. All 3 types share a common structure and have some type specific attributes.\r\n\r\n*   **allocation_method**: The method by which the discount application value has been allocated to entitled lines. Valid values: \r\n\r\n    *   `across`: The value is spread across all entitled lines. \r\n    *   `each`: The value is applied onto every entitled line. \r\n    *   `one`: The value is applied onto a single line. <div class=\"note-caution note\"> \r\n\r\n#### Caution\r\n\r\nAs of version 2020-07, `across` is returned instead of `one` as the meaning is the same for explicit discounts.\r\n </div>   \r\n*   **code**: The discount code that was used to apply the discount. Available only for discount code applications.  \r\n*   **description**: The description of the discount application, as defined by the merchant or the Shopify Script. Available only for manual and script discount applications.  \r\n*   **target_selection**: The lines on the order, of the type defined by `target_type`, that the discount is allocated over. Valid values: \r\n\r\n    *   `all`: The discount is allocated onto all lines, \r\n    *   `entitled`: The discount is allocated only onto lines it is entitled for. \r\n    *   `explicit`: The discount is allocated onto explicitly selected lines.   \r\n*   **target_type**: The type of line on the order that the discount is applicable on. Valid values: \r\n\r\n    *   `line_item`: The discount applies to line items. \r\n    *   `shipping_line`: The discount applies to shipping lines.   \r\n*   **title**: The title of the discount application, as defined by the merchant. Available only for manual discount applications. \r\n*   **type**: The discount application type. Valid values: \r\n\r\n    *   `automatic`: The discount was applied automatically, such as by a Buy X Get Y automatic discount. \r\n    *   `discount_code`: The discount was applied by a discount code. \r\n    *   `manual`: The discount was manually applied by the merchant (for example, by using an app or creating a draft order). \r\n    *   `script`: The discount was applied by a Shopify Script.   \r\n*   **value**: The value of the discount application as a decimal. This represents the intention of the discount application. For example, if the intent was to apply a 20% discount, then the value will be `20.0`. If the intent was to apply a $15 discount, then the value will be `15.0`.  \r\n*   **value_type**: The type of the value. Valid values: \r\n\r\n    *   `fixed_amount`: A fixed amount discount value in the currency of the order. \r\n    *   `percentage`: A percentage discount value."
          nullable: true
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode'
          description: 'A list of discounts applied to the order. Each discount object includes the following properties: * **amount**: The amount that''s deducted from the order total. When you create an order, this value is the percentage or monetary amount to deduct. After the order is created, this property returns the calculated amount. * **code**: When the associated discount application is of type `code`, this property returns the discount code that was entered at checkout. Otherwise this property returns the title of the discount that was applied. * **type**: The type of discount. Default value: `fixed_amount`. Valid values: * `fixed_amount`: Applies `amount` as a unit of the store''s currency. For example, if `amount` is 30 and the store''s currency is USD, then 30 USD is deducted from the order total when the discount is applied. * `percentage`: Applies a discount of `amount` as a percentage of the order total. * `shipping`: Applies a free shipping discount on orders that have a shipping rate less than or equal to `amount`. For example, if `amount` is 30, then the discount will give the customer free shipping for any shipping rate that is less than or equal to $30.'
          nullable: true
        email:
          type: string
          description: The customer's email address.
          nullable: true
        estimated_taxes:
          type: boolean
          description: 'Whether taxes on the order are estimated. Many factors can change between the time a customer places an order and the time the order is shipped, which could affect the calculation of taxes. This property returns `false` when taxes on the order are finalized and aren''t subject to any changes.'
          nullable: true
        financial_status:
          $ref: '#/components/schemas/FinancialStatus'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
          description: 'An array of fulfillments associated with the order. For more information, see the [Fulfillment API](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment).'
          nullable: true
        fulfillment_status:
          $ref: '#/components/schemas/OrderFulfillmentStatus'
        gateway:
          type: string
          description: The payment gateway used.
          nullable: true
          deprecated: true
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when they entered the shop.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          description: "A list of line item objects, each containing information about an item in the order. Each object has the following properties: \r\n\r\n*   **fulfillable_quantity**: The amount available to fulfill, calculated as follows: \r\n\r\n`*quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity*`\r\n\r\n*   **fulfillment_service**: The service provider that's fulfilling the item. Valid values: `manual`, or the name of the provider, such as `amazon` or `shipwire`. This field is due to be **deprecated**. Consider using [' \"FulfillmentOrder#assigned_location](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) instead. \r\n*   **fulfillment_status**: How far along an order is in terms line items fulfilled. Valid values: `null`, `fulfilled`, `partial`, and `not_eligible`. \r\n*   **grams**: The weight of the item in grams. \r\n*   **id**: The ID of the line item. \r\n*   **price**: The price of the item before discounts have been applied in the shop currency. \r\n*   **price_set**: The price of the line item in shop and presentment currencies. \r\n*   **product_id**: The ID of the product that the line item belongs to. Can be `null` if the original product associated with the order is deleted at a later date. \r\n*   **quantity**: The number of items that were purchased. \r\n*   **requires_shipping**: Whether the item requires shipping. \r\n*   **sku**: The item's SKU (stock keeping unit). \r\n*   **title**: The title of the product. \r\n*   **variant_id**: The ID of the product variant. \r\n*   **variant_title**: The title of the product variant. \r\n*   **vendor**: The name of the item's supplier. \r\n*   **name**: The name of the product variant. \r\n*   **gift_card**: Whether the item is a gift card. If `true`, then the item is not taxed or considered for shipping charges. \r\n*   **properties**: An array of custom information for the item that has been added to the cart. Often used to provide product customization options.  \r\n*   **taxable**: Whether the item was taxable. \r\n*   **tax_lines**: A list of tax line objects, each of which details a tax applied to the item. \r\n\r\n    *   `title`: The name of the tax. \r\n    *   `price`: The amount added to the order for this tax in the shop currency. \r\n    *   `price_set`: The amount added to the order for this tax in shop and presentment currencies. \r\n    *   `rate`: The tax rate applied to the order to calculate the tax price. \r\n    *   `channel_liable`: Whether the channel that submitted the tax line is liable for remitting. A value of `null` indicates unknown liability for the tax line.   \r\n*   **tip_payment_gateway**: The payment gateway used to tender the tip, such as `shopify_payments`. Present only on tips. \r\n*   **tip_payment_method**: The payment method used to tender the tip, such as `Visa`. Present only on tips. \r\n*   **total_discount**: The total amount of the discount allocated to the line item in the shop currency. This field must be explicitly set using draft orders, Shopify scripts, or the API. Instead of using this field, Shopify recommends using `discount_allocations`, which provides the same information. \r\n*   **total_discount_set**: The total amount allocated to the line item in the presentment currency. Instead of using this field, Shopify recommends using `discount_allocations`, which provides the same information. \r\n*   **discount_allocations**: An ordered list of amounts allocated by discount applications. Each discount allocation is associated with a particular discount application. \r\n\r\n    *   `amount`: The discount amount allocated to the line in the shop currency. \r\n    *   `discount_application_index`: The index of the associated discount application in the order's `discount_applications` list. \r\n    *   `amount_set`: The discount amount allocated to the line item in shop and presentment currencies.   \r\n*   **origin_location**: The location of the line item’s fulfillment origin. This field is due to be **deprecated**. Consider using [' \"FulfillmentOrder#assigned_location_id](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) instead. \r\n\r\n    *   `id`: The location ID of the line item’s fulfillment origin. Used by Shopify to calculate applicable taxes. This is not the ID of the location where the order was placed. You can use the [FulfillmentOrder](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) resource to determine the location an item will be sourced from. \r\n    *   `country_code`: The two-letter code ([ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format) for the country of the item's supplier. \r\n    *   `province_code`: The two-letter abbreviation for the region of the item's supplier. \r\n    *   `name`: The name of the item's supplier. \r\n    *   `address1`: The street address of the item's supplier. \r\n    *   `address2`: The suite number of the item's supplier. \r\n    *   `city`: The city of the item's supplier. \r\n    *   `zip`: The zip of the item's supplier.   \r\n*   **duties**: A list of duty objects, each containing information about a duty on the line item."
          nullable: true
        location_id:
          type: integer
          description: 'The ID of the physical location where the order was processed. To determine the locations where the line items are assigned for fulfillment please use the [FulfillmentOrder](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) resource.'
          format: int64
          nullable: true
        name:
          type: string
          description: 'The order name, generated by combining the `order_number` property with the order prefix and suffix that are set in the merchant''s [general settings](//www.shopify.com/admin/settings/general). This is different from the `id` property, which is the ID of the order used by the API. This field can also be set by the API to be any string value.'
          nullable: true
        note:
          type: string
          description: An optional note that a shop owner can attach to the order.
          nullable: true
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          description: Extra information that is added to the order. Appears in the **Additional details** section of an order details page. Each array entry must contain a hash with `name` and `value` keys.
          nullable: true
        number:
          type: integer
          description: The order's position in the shop's count of orders. Numbers are sequential and start at 1.
          format: int32
          nullable: true
        order_number:
          type: integer
          description: The order 's position in the shop's count of orders starting at 1001. Order numbers are sequential and start at 1001.
          format: int32
          nullable: true
        original_total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        payment_details:
          type: string
          description: "An object containing information about the payment. It has the following properties: \r\n\r\n*   **avs_result_code**: The response code from [the address verification system](https://en.wikipedia.org/wiki/Address_Verification_System) (AVS). The code is a single letter. See [ this chart](http://www.emsecommerce.net/avs_cvv2_response_codes.htm) for the codes and their definitions. \r\n*   **credit_card_bin**: The [issuer identification number](https://en.wikipedia.org/wiki/ISO/IEC_7812) (IIN), formerly known as the bank identification number (BIN), of the customer's credit card. This is made up of the first few digits of the credit card number. \r\n*   **credit_card_company**: The name of the company who issued the customer's credit card. \r\n*   **credit_card_number**: The customer's credit card number, with most of the leading digits redacted. \r\n*   **cvv_result_code**: The response code from the credit card company indicating whether the customer entered the [card security code](https://en.wikipedia.org/wiki/Card_Security_Code) (card verification value) correctly. The code is a single letter or empty string. See [ this chart](http://www.emsecommerce.net/avs_cvv2_response_codes.htm) for the codes and their definitions."
          nullable: true
          deprecated: true
        payment_terms:
          type: string
          description: "The terms and conditions under which a payment should be processed.\r\n\r\n*   **amount**: The amount that is owed according to the payment terms. \r\n*   **currency**: The presentment currency for the payment. \r\n*   **payment_terms_name**: The name of the selected payment terms template for the order. \r\n*   **payment_terms_type**: The type of selected payment terms template for the order. \r\n*   **due_in_days**: The number of days between the invoice date and due date that is defined in the selected payment terms template. \r\n*   **payment_schedules**: An array of schedules associated to the payment terms. \r\n\r\n    *   **amount**: The amount that is owed according to the payment terms. \r\n    *   **currency**: The presentment currency for the payment. \r\n    *   **issued_at**: The date and time when the payment terms were initiated. \r\n    *   **due_at**: The date and time when the payment is due. Calculated based on `issued_at` and `due_in_days` or a customized fixed date if the type is fixed. \r\n    *   **completed_at**: The date and time when the purchase is completed. Returns **null** initially and updates when the payment is captured. \r\n    *   **expected_payment_method**: The name of the payment method gateway."
          nullable: true
        payment_gateway_names:
          type: array
          items:
            type: string
          description: The list of payment gateways used for the order.
          nullable: true
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications.
          nullable: true
        presentment_currency:
          type: string
          description: The presentment currency that was used to display prices to the customer.
          nullable: true
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an order was processed. This value is the date that appears on your orders and that''s used in the analytic reports. If you''re importing orders from an app or another platform, then you can set `processed_at` to a date and time in the past to match when the original order was created.'
          format: date-time
          nullable: true
        processing_method:
          $ref: '#/components/schemas/ProcessingMethod'
        referring_site:
          type: string
          description: The website where the customer clicked a link to the shop.
          nullable: true
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/Refund'
          description: 'A list of refunds applied to the order. For more information, see the [Refund API](/docs/admin-api/rest/reference/orders/refund).'
          nullable: true
        shipping_address:
          $ref: '#/components/schemas/Address'
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          description: "An array of objects, each of which details a shipping method used. Each object has the following properties: \r\n\r\n*   **code**: A reference to the shipping method. \r\n*   **discounted_price**: The price of the shipping method after line-level discounts have been applied. Doesn't reflect cart-level or order-level discounts. \r\n*   **discounted_price_set**: The price of the shipping method in both shop and presentment currencies after line-level discounts have been applied. \r\n*   **price**: The price of this shipping method in the shop currency. Can't be negative. \r\n*   **price_set**: The price of the shipping method in shop and presentment currencies. \r\n*   **source**: The source of the shipping method. \r\n*   **title**: The title of the shipping method. \r\n*   **tax_lines**: A list of tax line objects, each of which details a tax applicable to this shipping line. \r\n*   **carrier_identifier**: A reference to the carrier service that provided the rate. Present when the rate was computed by a third-party carrier service. \r\n*   **requested_fulfillment_service_id**: A reference to the fulfillment service that is being requested for the shipping method. Present if the shipping method requires processing by a third party fulfillment service; `null` otherwise."
          nullable: true
        source_name:
          type: string
          description: 'The source of the checkout. To use this field for sales attribution, you must register the channels that your app is managing. You can register the channels that your app is managing by completing [this Google Form](https://docs.google.com/forms/d/e/1FAIpQLScmVTZRQNjOJ7RD738mL1lGeFjqKVe_FM2tO9xsm21QEo5Ozg/viewform?usp=sf_link). After you''ve submited your request, you need to wait for your request to be processed by Shopify. You can find a list of your channels in the Partner Dashboard, in your app''s Marketplace extension. You can specify a handle as the `source_name` value in your request.'
          nullable: true
        source_identifier:
          type: string
          description: The ID of the order placed on the originating platform.This value doesn't correspond to the Shopify ID that's generated from a completed draft.
          nullable: true
        source_url:
          type: string
          description: 'A valid URL to the original order on the originating surface.This URL is displayed to merchants on the Order Details page.If the URL is invalid, then it won''t be displayed.'
          nullable: true
        subtotal_price:
          type: number
          description: 'The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips.'
          format: decimal
          nullable: true
        subtotal_price_set:
          $ref: '#/components/schemas/PriceSet'
        tags:
          type: string
          description: 'Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length.'
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: "An array of tax line objects, each of which details a tax applicable to the order. Each object has the following properties: \r\n\r\n*   **price**: The amount of tax to be charged in the shop currency. \r\n*   **rate**: The rate of tax to be applied. \r\n*   **title**: The name of the tax. \r\n*   **channel_liable**: Whether the channel that submitted the tax line is liable for remitting. A value of `null` indicates unknown liability for the tax line.  When creating an order through the API, tax lines can be specified on the order or the line items but not both. Tax lines specified on the order are split across the *taxable* line items in the created order."
          nullable: true
        taxes_included:
          type: boolean
          description: Whether taxes are included in the order subtotal.
          nullable: true
        test:
          type: boolean
          description: Whether this is a test order.
          nullable: true
        token:
          type: string
          description: A unique value when referencing the order.
          nullable: true
        total_discounts:
          type: number
          description: The total discounts applied to the price of the order in the shop currency.
          format: decimal
          nullable: true
        total_discounts_set:
          $ref: '#/components/schemas/PriceSet'
        total_line_items_price:
          type: number
          description: The sum of all line item prices in the shop currency.
          format: decimal
          nullable: true
        total_line_items_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_outstanding:
          type: string
          description: The total outstanding amount of the order in the shop currency.
          nullable: true
        total_price:
          type: number
          description: 'The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive.'
          format: decimal
          nullable: true
        total_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_shipping_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_tax:
          type: number
          description: The sum of all the taxes applied to the order in the shop currency. Must be positive.
          format: decimal
          nullable: true
        total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        total_tip_received:
          type: number
          description: The sum of all the tips in the order in the shop currency.
          format: decimal
          nullable: true
        total_weight:
          type: number
          description: The sum of all line item weights in grams. The sum is not adjusted as items are removed from the order.
          format: decimal
          nullable: true
        user_id:
          type: integer
          description: 'The ID of the user logged into Shopify POS who processed the order, if applicable.'
          format: int64
          nullable: true
        order_status_url:
          type: string
          description: 'The URL pointing to the [order status web page](https://help.shopify.com/manual/orders/status-tracking), if applicable.'
          nullable: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: "An array of OpenShopify.Admin.Builder.Models.Transaction objects that detail all of the transactions in\r\nthis order."
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.OrderBase. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.OrderBase response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.OrderBase metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        checkout_id:
          type: integer
          format: int64
          nullable: true
        confirmed:
          type: boolean
          nullable: true
        contact_email:
          type: string
          nullable: true
        total_price_usd:
          type: number
          format: decimal
          nullable: true
      additionalProperties: false
    CreateOrderRequest:
      required:
        - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/CreateOrder'
      additionalProperties: false
    CreateOrderRisk:
      type: object
      properties:
        cause_cancel:
          type: boolean
          description: "Whether this order risk is severe enough to force the cancellation of the order. If `true`, then this order risk is included in the **Order canceled** message that's shown on the details page of the canceled order. \r\n\r\n**Note:** Setting this property to `true` does not cancel the order. Use this property only if your app automatically cancels the order using the [Order](/docs/admin-api/rest/reference/orders/order/#cancel-{{ current_version }}) resource. If your app doesn't automatically cancel orders based on order risks, then leave this property set to `false`."
          nullable: true
        checkout_id:
          type: integer
          description: The ID of the checkout that the order risk belongs to.
          format: int64
          nullable: true
        display:
          type: boolean
          description: "Whether the order risk is displayed on the order details page in the Shopify admin. If `false`, then this order risk is ignored when Shopify determines your app's overall risk level for the order.\r\n\r\nIt's not advised to create order risks with a display set to `false`. \r\n<aside class='note'>\r\n\r\nThis property can't be changed after an order risk is created.\r\n</aside><aside class='caution'>This property might be removed in future API versions.</aside>"
          nullable: true
        merchant_message:
          type: string
          description: The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if `display` is set to`true`.
          nullable: true
          deprecated: true
        message:
          type: string
          description: The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if `display` is set to`true`.
          nullable: true
        order_id:
          type: integer
          description: The ID of the order that the order risk belongs to.
          format: int64
          nullable: true
        recommendation:
          $ref: '#/components/schemas/RiskRecommendation'
        score:
          type: number
          description: "**For internal use only**. A number between 0 and 1 that's assigned to the order. The closer the score is to 1, the more likely it is that the order is fraudulent. <aside class=\"note\"> \r\n\r\n#### Note\r\n\r\nThere is no guarantee of stability in risk scores. Scores are not probabilities. The relationship between scores and the probability of fraud can vary over time and between risk providers.\r\n </aside>"
          format: decimal
          nullable: true
        source:
          type: string
          description: The source of the order risk.
          nullable: true
      additionalProperties: false
    CreateOrderRiskRequest:
      required:
        - risk
      type: object
      properties:
        risk:
          $ref: '#/components/schemas/CreateOrderRisk'
      additionalProperties: false
    CreateRefund:
      type: object
      properties:
        duties:
          type: array
          items:
            $ref: '#/components/schemas/RefundDuty'
          description: A list of duties that have been reimbursed as part of the refund.
          nullable: true
        note:
          type: string
          description: An optional note attached to a refund.
          nullable: true
        order_adjustments:
          type: array
          items:
            $ref: '#/components/schemas/RefundOrderAdjustment'
          description: "A list of order adjustments attached to the refund. Order adjustments are generated to account for refunded shipping costs and differences between calculated and actual refund amounts. Each entry has the following properties:\r\n\r\n*   **id**: The unique identifier for the order adjustment. \r\n*   **order_id**: The unique identifier for the order that the order adjustment is associated with. \r\n*   **refund_id**: The unique identifier for the refund that the order adjustment is associated with. \r\n*   **amount**: The value of the discrepancy between the calculated refund and the actual refund. If the `kind` property's value is `shipping_refund`, then `amount` returns the value of shipping charges refunded to the customer. \r\n*   **tax_amount**: The taxes that are added to `amount`, such as applicable shipping taxes added to a shipping refund. \r\n*   **kind**: The order adjustment type. Valid values: `shipping_refund` and `refund_discrepancy`. \r\n*   **reason**: The reason for the order adjustment. To set this value, include `discrepancy_reason` when you create a refund. \r\n*   **amount_set**: The amount of the order adjustment in shop and presentment currencies. \r\n*   **tax_amount_set**: The tax amount of the order adjustment in shop and presentment currencies."
          nullable: true
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the refund was imported. This value can be set to a date in the past when importing from other systems. If no value is provided, then it will be auto-generated as the current time in Shopify. Public apps need to be granted permission by Shopify to import orders with the `processed_at` timestamp set to a value earlier the `created_at` timestamp. Private apps can''t be granted permission by Shopify.'
          format: date-time
          nullable: true
        refund_duties:
          type: array
          items:
            $ref: '#/components/schemas/RefundDutyType'
          description: "A list of refunded duties. Each entry has the following properties:\r\n\r\n*   **duty_id**: The unique identifier of the duty. \r\n*   **refund_type**: Specifies how you want the duty refunded. Valid values: \r\n\r\n    *   `FULL`: Refunds all the duties associated with a duty ID. You do not need to include refund line items if you are using the full refund type. \r\n    *   `PROPORTIONAL`: Refunds duties in proportion to the line item quantity that you want to refund. If you choose the proportional refund type, then you must also pass the refund line items to calculate the portion of duties to refund."
          nullable: true
        refund_line_items:
          type: array
          items:
            $ref: '#/components/schemas/RefundLineItem'
          description: "A list of refunded line items. Each entry has the following properties: \r\n\r\n*   **id**: The unique identifier of the line item in the refund. \r\n*   **line_item**: A line item being refunded. \r\n*   **line_item_id**: The ID of the related line item in the order. \r\n*   **quantity**: The refunded quantity of the associated line item. \r\n*   **restock_type**: How this refund line item affects inventory levels. Valid values: \r\n\r\n    *   **no_restock**: Refunding these items won't affect inventory. The number of fulfillable units for this line item will remain unchanged. For example, a refund payment can be issued but no items will be refunded or made available for sale again. \r\n    *   **cancel**: The items have not yet been fulfilled. The canceled quantity will be added back to the available count. The number of fulfillable units for this line item will decrease. \r\n    *   **return**: The items were already delivered, and will be returned to the merchant. The refunded quantity will be added back to the available count. The number of fulfillable units for this line item will remain unchanged. \r\n    *   **legacy_restock**: The deprecated `restock` property was used for this refund. These items were made available for sale again. This value is not accepted when creating new refunds.   \r\n*   **location_id**: The unique identifier of the [location](/api/admin-rest/current/resources/location) where the items will be restocked. Required when `restock_type` has the value `return` or `cancel`. \r\n*   **subtotal**: The subtotal of the refund line item. \r\n*   **total_tax**: The total tax on the refund line item. \r\n*   **subtotal_set**: The subtotal of the refund line item in shop and presentment currencies. \r\n*   **total_tax_set**: The total tax of the line item in shop and presentment currencies."
          nullable: true
        restock:
          type: string
          description: Whether to add the line items back to the store's inventory.
          nullable: true
          deprecated: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: 'A list of transactions involved in the refund. A single order can have multiple transactions associated with it. For more information, see the [ Transaction](/api/admin-rest/current/resources/transaction) resource.'
          nullable: true
        user_id:
          type: integer
          description: The unique identifier of the user who performed the refund.
          format: int64
          nullable: true
        order_id:
          type: integer
          description: The unique identifier of the order.
          format: int64
          nullable: true
        notify:
          type: boolean
          description: Whether to send a refund notification to the customer
          nullable: true
        shipping:
          $ref: '#/components/schemas/Shipping'
        currency:
          type: string
          description: 'The three-letter code (ISO 4217 format) for the currency used for the refund. Note: Required whenever the shipping amount property is provided.'
          nullable: true
        total_duties_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: false
    CreateRefundRequest:
      required:
        - refund
      type: object
      properties:
        refund:
          $ref: '#/components/schemas/CreateRefund'
      additionalProperties: false
    CreateTransaction:
      type: object
      properties:
        amount:
          type: number
          description: 'The amount of money included in the transaction. If you don''t provide a value for `amount`, then it defaults to the total cost of the order (even if a previous transaction has been made towards it).'
          format: decimal
          nullable: true
        authorization:
          type: string
          description: The authorization code associated with the transaction.
          nullable: true
        authorization_expires_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the Shopify Payments authorization expires.'
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency used for the payment.'
          nullable: true
        device_id:
          type: integer
          description: The ID for the device.
          format: int64
          nullable: true
        error_code:
          $ref: '#/components/schemas/TransactionErrorCode'
        extended_authorization_attributes:
          $ref: '#/components/schemas/ExtendedAuthorizationAttributes'
        gateway:
          type: string
          description: 'The name of the gateway the transaction was issued through. A list of gateways can be found on Shopify''s [payment gateways page](//www.shopify.com/payment-gateways).'
          nullable: true
        kind:
          $ref: '#/components/schemas/TransactionKind'
        location_id:
          type: integer
          description: The ID of the physical location where the transaction was processed.
          format: int64
          nullable: true
        message:
          type: string
          description: A string generated by the payment provider with additional information about why the transaction succeeded or failed.
          nullable: true
        order_id:
          type: integer
          description: The ID for the order that the transaction is associated with.
          format: int64
          nullable: true
        payment_details:
          $ref: '#/components/schemas/PaymentDetails'
        parent_id:
          type: integer
          description: "The ID of an associated transaction. \r\n\r\n*   For `capture` transactions, the parent needs to be an `authorization` transaction. \r\n*   For `void` transactions, the parent needs to be an `authorization` transaction. \r\n*   For `refund` transactions, the parent needs to be a `capture` or `sale` transaction."
          format: int64
          nullable: true
        payments_refund_attributes:
          $ref: '#/components/schemas/PaymentsRefundAttributes'
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when a transaction was processed. This value is the date that''s used in the analytic reports. By default, it matches the `created_at` value. If you''re importing transactions from an app or another platform, then you can set `processed_at` to a date and time in the past to match when the original transaction was processed.'
          format: date-time
          nullable: true
        receipt:
          type: string
          description: A transaction receipt attached to the transaction by the gateway. The value of this field depends on which gateway the shop is using.
          nullable: true
        source_name:
          type: string
          description: 'The origin of the transaction. This is set by Shopify and can''t be overridden. Example values: `web`, `pos`, `iphone`, and `android`.'
          nullable: true
        status:
          type: string
          description: 'The status of the transaction. Valid values: `pending`, `failure`, `success`, and `error`.'
          nullable: true
        test:
          type: boolean
          description: Whether the transaction is a test transaction.
          nullable: true
        user_id:
          type: integer
          description: 'The ID for the user who was logged into the Shopify POS device when the order was processed, if applicable.'
          format: int64
          nullable: true
        currency_exchange_adjustment:
          $ref: '#/components/schemas/CurrencyExchangeAdjustment'
        maximum_refundable:
          type: number
          description: The maximum amount that can be refunded
          format: decimal
          nullable: true
      additionalProperties: false
    CreateTransactionRequest:
      required:
        - transaction
      type: object
      properties:
        transaction:
          $ref: '#/components/schemas/CreateTransaction'
      additionalProperties: false
    CurrencyExchangeAdjustment:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        adjustment:
          type: number
          description: The difference between the amounts on the associated transaction and the parent transaction.
          format: decimal
          nullable: true
        original_amount:
          type: number
          description: The amount of the parent transaction in the shop currency.
          format: decimal
          nullable: true
        final_amount:
          type: number
          description: The amount of the associated transaction in the shop currency.
          format: decimal
          nullable: true
        currency:
          type: string
          description: The shop currency.
          nullable: true
      additionalProperties: { }
    Customer:
      required:
        - id
      type: object
      properties:
        accepts_marketing:
          type: boolean
          description: 'As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.Whether the customer has consented to receive marketing material by email.'
          nullable: true
          deprecated: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAddress'
          description: 'A list of the ten most recently updated addresses for the customer. Each address has the following properties: * **address1**: The customer''s mailing address. * **address2**: An additional field for the customer''s mailing address. * **city**: The customer''s city, town, or village. * **company**: The customer''s company. * **country**: The customer''s country. * **country_code**: The two-letter country code corresponding to the customer''s country. * **country_name**: The customer''s normalized country name. * **customer_id**: A unique identifier for the customer. * **default**: Whether this address is the default address for the customer. * **first_name**: The customer''s first name. * **id**: A unique identifier for the address. * **last_name**: The customer''s last name. * **name**: The customer''s first and last names. * **phone**: The customer''s phone number at this address. * **province**: The customer''s region name. Typically a province, a state, or a prefecture. * **province_code**: The code for the region of the address, such as the province, state, or district. For example QC for Quebec, Canada. * **zip**: The customer''s postal code, also known as zip, postcode, Eircode, etc.'
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency that the customer used when they paid for their last order. Defaults to the shop currency. Returns the shop currency for test orders.'
          nullable: true
        default_address:
          $ref: '#/components/schemas/CustomerAddress'
        email:
          type: string
          description: The unique email address of the customer. Attempting to assign the same email address to multiple customers returns an error.
          nullable: true
        email_marketing_consent:
          $ref: '#/components/schemas/EmailMarketingConsent'
        first_name:
          type: string
          description: The customer's first name.
          nullable: true
        last_name:
          type: string
          description: The customer's last name.
          nullable: true
        last_order_id:
          type: integer
          description: The ID of the customer's last order.
          format: int64
          nullable: true
        last_order_name:
          type: string
          description: The name of the customer's last order. This is directly related to the `name` field on the Order resource.
          nullable: true
        metafield:
          type: string
          description: 'Attaches additional metadata to a shop''s resources: * **key** (required): An identifier for the metafield (maximum of 30 characters). * **namespace**(required): A container for a set of metadata (maximum of 20 characters). Namespaces help distinguish between metadata that you created and metadata created by another individual with a similar namespace. * **value** (required): Information to be stored as metadata. * **type** (required): The type. Refer to the [full list of types](/apps/metafields/types). * **description** (optional): Additional information about the metafield.'
          nullable: true
        marketing_opt_in_level:
          type: string
          description: "As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.The marketing subscription opt-in level, as described in the [M3AAWG Sender Best Common Practices](https://www.m3aawg.org/sites/default/files/document/M3AAWG_Senders_BCP_Ver3-2015-02.pdf), that the customer gave when they consented to receive marketing material by email.If the customer does not accept email marketing, then this property will be set to `null`.Valid values:\r\n\r\n*   `single_opt_in` \r\n*   `confirmed_opt_in` \r\n*   `unknown`"
          nullable: true
          deprecated: true
        multipass_identifier:
          type: string
          description: 'A unique identifier for the customer that''s used with [Multipass login](/api/multipass).'
          nullable: true
        note:
          type: string
          description: A note about the customer.
          nullable: true
        orders_count:
          type: integer
          description: The number of orders associated with this customer. Test and archived orders aren't counted.
          format: int32
          nullable: true
        password:
          type: string
          description: The customer's password.
          nullable: true
        password_confirmation:
          type: string
          description: The customer's password that's confirmed.
          nullable: true
        phone:
          type: string
          description: "The unique phone number ([E.164 format](https://en.wikipedia.org/wiki/E.164)) for this customer. Attempting to assign the same phone number to multiple customers returns an error. The property can be set using different formats, but each format must represent a number that can be dialed from anywhere in the world. The following formats are all valid:\r\n\r\n*   6135551212 \r\n*   +16135551212 \r\n*   (613)555-1212 \r\n*   +1 613-555-1212"
          nullable: true
        sms_marketing_consent:
          $ref: '#/components/schemas/SmsMarketingConsent'
        state:
          type: string
          description: 'The state of the customer''s account with a shop. Default value: `disabled`. Valid values: * **disabled**: The customer doesn''t have an active account. Customer accounts can be disabled from the Shopify admin at any time. * **invited**: The customer has received an email invite to create an account. * **enabled**: The customer has created an account. * **declined**: The customer declined the email invite to create an account.'
          nullable: true
        tags:
          type: string
          description: 'Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values. A customer can have up to 250 tags. Each tag can have up to 255 characters.'
          nullable: true
        tax_exempt:
          type: boolean
          description: 'Whether the customer is exempt from paying taxes on their order. If `true`, then taxes won''t be applied to an order at checkout. If `false`, then taxes will be applied at checkout.'
          nullable: true
        tax_exemptions:
          type: array
          items:
            type: string
          description: 'Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only. Valid values: * **EXEMPT_ALL**: This customer is exempt from all Canadian taxes. * **CA_STATUS_CARD_EXEMPTION**: This customer is exempt from specific taxes for holding a valid STATUS_CARD_EXEMPTION in Canada. * **CA_DIPLOMAT_EXEMPTION**: This customer is exempt from specific taxes for holding a valid DIPLOMAT_EXEMPTION in Canada. * **CA_BC_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in British Columbia. * **CA_MB_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Manitoba. * **CA_SK_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Saskatchewan. * **CA_BC_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in British Columbia. * **CA_MB_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Manitoba. * **CA_NS_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Nova Scotia. * **CA_PE_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Prince Edward Island. * **CA_SK_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Saskatchewan. * **CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in British Columbia. * **CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in Saskatchewan. * **CA_BC_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_BC_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_ON_PURCHASE_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PURCHASE_EXEMPTION in Ontario. * **CA_MB_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Manitoba. * **CA_NS_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Nova Scotia. * **CA_SK_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Saskatchewan.'
          nullable: true
        total_spent:
          type: number
          description: The total amount of money that the customer has spent across their order history.
          format: decimal
          nullable: true
        verified_email:
          type: boolean
          description: Whether the customer has verified their email address.
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.Customer. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.Customer response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.Customer metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        accepts_marketing_updated_at:
          type: string
          description: 'As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format)when the customer consented or objected to receiving marketing material by email. Set this value wheneverthe customer consents or objects to marketing materials.'
          format: date-time
          nullable: true
          deprecated: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    CustomerAddress:
      required:
        - id
      type: object
      properties:
        address1:
          type: string
          description: The customer's mailing address
          nullable: true
        address2:
          type: string
          description: An additional field for the customer's mailing address.
          nullable: true
        city:
          type: string
          description: 'The customer''s city, town, or village.'
          nullable: true
        country:
          type: string
          description: The customer's country.
          nullable: true
        country_code:
          type: string
          description: The two-letter country code corresponding to the customer's country.
          nullable: true
        country_name:
          type: string
          description: The customer’s normalized country name.
          nullable: true
        company:
          type: string
          description: The customer’s company.
          nullable: true
        customer_id:
          type: integer
          description: The unique identifier for the customer.
          format: int64
          nullable: true
        first_name:
          type: string
          description: The customer’s first name.
          nullable: true
        last_name:
          type: string
          description: The customer’s last name.
          nullable: true
        name:
          type: string
          description: The customer’s first and last names.
          nullable: true
        phone:
          type: string
          description: The customer’s phone number at this address.
          nullable: true
        province:
          type: string
          description: 'The customer’s region name. Typically a province, a state, or a prefecture.'
          nullable: true
        province_code:
          type: string
          description: The two-letter code for the customer’s region.
          nullable: true
        zip:
          type: string
          description: 'The customer’s postal code, also known as zip, postcode, Eircode, etc.'
          nullable: true
        default:
          type: boolean
          description: Indicates whether this address is the default address.
          nullable: true
        latitude:
          type: number
          format: decimal
          nullable: true
        longitude:
          type: number
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
      additionalProperties: { }
    DiscountAllocation:
      type: object
      properties:
        amount:
          type: string
          description: The discount amount allocated to the line (not sure why it is a string)
          nullable: true
        discount_application_index:
          type: integer
          description: The index of the associated discount application in the order's discount_applications list.
          format: int64
        amount_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    DiscountApplication:
      type: object
      properties:
        type:
          type: string
          description: "The discount application type. Valid values:\r\nmanual: The discount was manually applied by the merchant(for example, by using an app or creating a draft order).\r\nscript: The discount was applied by a Shopify Script.\r\ndiscount_code: The discount was applied by a discount code."
          nullable: true
        code:
          type: string
          description: The discount code that was used to apply the discount. Available only for discount code applications.
          nullable: true
        title:
          type: string
          description: 'The title of the discount application, as defined by the merchant. Available only for manual discount applications.'
          nullable: true
        description:
          type: string
          description: 'The description of the discount application, as defined by the merchant or the Shopify Script. Available only for manual and script discount applications.'
          nullable: true
        value:
          type: string
          description: "The value of the discount application as a decimal. This represents the intention of the discount application.\r\nFor example, if the intent was to apply a 20% discount, then the value will be 20.0.\r\nIf the intent was to apply a $15 discount, then the value will be 15.0."
          nullable: true
        value_type:
          type: string
          description: "The type of the value. Valid values:\r\nfixed_amount: A fixed amount discount value in the currency of the order.\r\npercentage: A percentage discount value."
          nullable: true
        allocation_method:
          type: string
          description: "The method by which the discount application value has been allocated to entitled lines. Valid values:\r\nacross: The value is spread across all entitled lines.\r\neach: The value is applied onto every entitled line.\r\none: The value is applied onto a single line."
          nullable: true
        target_selection:
          type: string
          description: "The lines on the order, of the type defined by target_type, that the discount is allocated over. Valid values:\r\nall: The discount is allocated onto all lines,\r\nentitled: The discount is allocated only onto lines it is entitled for.\r\nexplicit: The discount is allocated onto explicitly selected lines."
          nullable: true
        target_type:
          type: string
          description: "The type of line on the order that the discount is applicable on. Valid values:\r\nline_item: The discount applies to line items.\r\nshipping_line: The discount applies to shipping lines."
          nullable: true
      additionalProperties: { }
    DiscountCode:
      type: object
      properties:
        code:
          type: string
          description: "The case-insensitive discount code that customers use at checkout. (maximum: 255 characters)\r\n <div class=\"note note-caution\"> \r\n\r\nUse the same value for `code` as the `title` property of the associated [price rule](/docs/admin-api/rest/reference/discounts/pricerule/#title-property).\r\n </div>"
          nullable: true
        price_rule_id:
          type: integer
          description: The ID for the price rule that this discount code belongs to.
          format: int64
          nullable: true
        usage_count:
          type: integer
          description: The number of times that the discount code has been redeemed.
          format: int32
          nullable: true
        amount:
          type: string
          description: The amount of the discount.
          nullable: true
        type:
          type: string
          description: 'The type of discount. Known values are ''percentage'', ''shipping'', ''fixed_amount'' and ''none''.'
          nullable: true
        errors:
          $ref: '#/components/schemas/DiscountCodeErrors'
        id:
          type: integer
          format: int64
          nullable: true
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    DiscountCodeErrors:
      type: object
      properties:
        code:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: { }
    DiscountValueType:
      enum:
        - fixed_amount
        - percentage
      type: string
      additionalProperties: { }
    DraftLineItem:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        fulfillable_quantity:
          type: integer
          description: 'The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity.'
          format: int32
          nullable: true
        fulfillment_service:
          type: string
          description: 'Service provider who is doing the fulfillment. Valid values are either "manual" or the name of the provider. eg: "amazon", "shipwire", etc.'
          nullable: true
        fulfillment_status:
          type: string
          description: 'The fulfillment status of this line item. Known values are ''fulfilled'', ''null'' and ''partial''.'
          nullable: true
        grams:
          type: integer
          description: The weight of the item in grams.
          format: int64
          nullable: true
        price:
          type: number
          description: The price of the item before discounts have been applied.
          format: decimal
          nullable: true
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The number of products that were purchased.
          format: int32
          nullable: true
        requires_shipping:
          type: boolean
          description: States whether or not the fulfillment requires shipping.
          nullable: true
        sku:
          type: string
          description: A unique identifier of the item in the fulfillment.
          nullable: true
        title:
          type: string
          description: The title of the product.
          nullable: true
        variant_id:
          type: integer
          description: The id of the product variant. Can be null if the product purchased is not a variant.
          format: int64
          nullable: true
        variant_title:
          type: string
          description: The title of the product variant. Can be null if the product purchased is not a variant.
          nullable: true
        name:
          type: string
          description: The name of the product variant.
          nullable: true
        vendor:
          type: string
          description: The name of the supplier of the item.
          nullable: true
        gift_card:
          type: boolean
          description: States whether the order used a gift card.
          nullable: true
        taxable:
          type: boolean
          description: States whether or not the product was taxable.
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'An array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem.'
          nullable: true
        tip_payment_gateway:
          type: string
          description: 'The payment gateway used to tender the tip, such as shopify_payments. Present only on tips.'
          nullable: true
        tip_payment_method:
          type: string
          description: 'The payment method used to tender the tip, such as Visa. Present only on tips.'
          nullable: true
        total_discount:
          type: number
          description: The total discount amount applied to this line item. This value is not subtracted in the line item price.
          format: decimal
          nullable: true
        total_discount_set:
          $ref: '#/components/schemas/PriceSet'
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocation'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemProperty'
          description: "An array of custom information for an item that has been added to the cart.\r\nOften used to provide product customization options.\r\nAn array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem."
          nullable: true
        variant_inventory_management:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        product_exists:
          type: boolean
          description: This property is undocumented by Shopify.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemDuty'
          description: 'A list of duty objects, each containing information about a duty on the line item'
          nullable: true
        origin_location:
          $ref: '#/components/schemas/LineItemOriginLocation'
        custom:
          type: boolean
          description: 'Indicates if this is a product variant line item, or a custom line item. If set to true indicates a custom line item. If set to false indicates a product variant line item. This is a read only field.'
          nullable: true
        applied_discount:
          $ref: '#/components/schemas/AppliedDiscount'
      additionalProperties: { }
    DraftOrder:
      required:
        - id
      type: object
      properties:
        order_id:
          type: integer
          description: The ID of the order that's created and associated with the draft order after the draft order is completed.
          format: int64
          nullable: true
        name:
          type: string
          description: Name of the draft order.
          nullable: true
        customer:
          $ref: '#/components/schemas/Customer'
        shipping_address:
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'
        note:
          type: string
          description: The text of an optional note that a merchant can attach to the draft order.
          nullable: true
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          description: The extra information that's added to the order. The information appears in the**Additional details** section of an order details page. Each array entry must contain a hash with `name` and `value` keys.
          nullable: true
        email:
          type: string
          description: The customer's email address.
          nullable: true
        currency:
          type: string
          description: 'The three letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency used for the payment.'
          nullable: true
        invoice_sent_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the invoice was emailed to the customer.'
          format: date-time
          nullable: true
        invoice_url:
          type: string
          description: The URL for the invoice.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/DraftLineItem'
          description: "The product variant line item or custom line item associated to the draft order. Each draft order must include at least one `line_item`. Each `line_item` resource has the following properties: \r\n\r\n*   **custom**: *Read only field* Whether this is a custom line item or a product variant line item. If set to `true` indicates a custom line item. If set to `false` indicates a product variant line item. \r\n*   **id**: The ID of the line item. \r\n*   **variant_id**: The ID of the product variant corresponding to the line item. Required for a product variant line item. Set to `null` for a custom line item. \r\n*   **product_id**: The ID of the product corresponding to the line item’s product variant. \r\n*   **name**: The name of the product. \r\n*   **variant_title**: The title of the product variant. Defaults to `Custom` for custom line items created via the API. \r\n*   **vendor**: The vendor. \r\n*   **quantity**: The number of products that were purchased. \r\n*   **gift_card**: Indicates if the product is a gift card. Valid values: `true` or `false`. \r\n*   **fulfillment_service**: The service provider responsible for fulfillment. Valid values are either `manual` or the name of the provider, for example amazon, shipwire. Defaults to `manual` for custom line items. \r\n*   **properties**: An array of custom information for an item that has been added to the draft order, often used to provide [product customization options](/api/liquid/objects/line_item#line_item-properties). Copied to created order when draft order is completed. \r\n*   **applied_discount**: The discount applied to the line item. For more information, see the `applied_discount` property. \r\n*   **tax_lines**: *Read only field* The calculated rate and amount of taxes for the line item. \r\n\r\n    *   **price**: The amount of tax to be charged. \r\n    *   **rate**: The rate of tax to be applied. \r\n    *   **title**: The name of the tax.  \r\n*   **title**: The title of the product or variant. Applicable only to custom line items. *Required field*. \r\n*   **price**: The price of the item before discounts have been applied. Applicable only to custom line items. *Required field*. \r\n*   **grams**: The weight of the item in grams. Applicable only to custom line items. If not specified, defaults to 0. \r\n*   **requires_shipping**: Whether the fulfillment requires shipping. Applicable only to custom line items. Valid values: `true` or `false.` \r\n*   **sku**: A unique identifier for the item in the fulfillment. Applicable only to custom line items. \r\n*   **taxable**: Whether the product is taxable. Applicable only to custom line items."
          nullable: true
        payment_terms:
          type: string
          description: "The terms and conditions under which a payment should be processed.\r\n\r\n*   **amount**: The amount that is owed according to the payment terms. \r\n*   **currency**: The presentment currency for the payment. \r\n*   **payment_terms_name**: The name of the selected payment terms template for the draft order. \r\n*   **payment_terms_type**: The type of selected payment terms template for the draft order. \r\n*   **due_in_days**: The number of days between the invoice date and due date that is defined in the selected payment terms template. \r\n*   **payment_schedules**: An array of schedules associated to the payment terms. \r\n\r\n    *   **amount**: The amount that is owed according to the payment terms. \r\n    *   **currency**: The presentment currency for the payment. \r\n    *   **issued_at**: The date and time when the payment terms were initiated. \r\n    *   **due_at**: The date and time when the payment is due. Calculated based on `issued_at` and `due_in_days` or a customized fixed date if the type is fixed. \r\n    *   **completed_at**: The date and time when the purchase is completed. Returns **null** initially and updates when the payment is captured. \r\n    *   **expected_payment_method**: The name of the payment method gateway."
          nullable: true
        shipping_line:
          $ref: '#/components/schemas/DraftShippingLine'
        source_name:
          type: string
          description: 'The source of the checkout. To use this field for sales attribution, you need to register the channels that your app is managing. You can register the channels that your app is managing by completing the [Order Attribution Access Form](https://docs.google.com/forms/d/e/1FAIpQLScmVTZRQNjOJ7RD738mL1lGeFjqKVe_FM2tO9xsm21QEo5Ozg/viewform?usp=sf_link). After you''ve submited the form, you''ll need to wait for your request to be processed by Shopify. You can find a list of your channels in the Partner Dashboard, in your app''s Marketplace extension. You can specify a handle as the `source_name` value in your request.'
          nullable: true
        tags:
          type: string
          description: 'A comma-seperated list of additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length. For example, `tags: "tag1","tag2","tag3"`.'
          nullable: true
        tax_exempt:
          type: boolean
          description: 'Whether taxes are exempt for the draft order. If set to `false`, then Shopify refers to the `taxable` field for each `line_item`. If a customer is applied to the draft order, then Shopify uses the customer''s `tax_exempt` field instead.'
          nullable: true
        tax_exemptions:
          type: array
          items:
            type: string
          description: 'Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only. Valid values: * **EXEMPT_ALL**: This customer is exempt from all Canadian taxes. * **CA_STATUS_CARD_EXEMPTION**: This customer is exempt from specific taxes for holding a valid STATUS_CARD_EXEMPTION in Canada. * **CA_DIPLOMAT_EXEMPTION**: This customer is exempt from specific taxes for holding a valid DIPLOMAT_EXEMPTION in Canada. * **CA_BC_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in British Columbia. * **CA_MB_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Manitoba. * **CA_SK_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Saskatchewan. * **CA_BC_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in British Columbia. * **CA_MB_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Manitoba. * **CA_NS_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Nova Scotia. * **CA_PE_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Prince Edward Island. * **CA_SK_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Saskatchewan. * **CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in British Columbia. * **CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in Saskatchewan. * **CA_BC_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_BC_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_ON_PURCHASE_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PURCHASE_EXEMPTION in Ontario. * **CA_MB_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Manitoba. * **CA_NS_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Nova Scotia. * **CA_SK_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Saskatchewan.'
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: "An array of tax line resources, each of which details a tax applicable to the order. Each `tax_lines` resource has the following properties: \r\n\r\n*   **price**: The amount of tax to be charged. \r\n*   **rate**: The rate of tax to be applied. \r\n*   **title**: The name of the tax."
          nullable: true
        applied_discount:
          $ref: '#/components/schemas/AppliedDiscount'
        taxes_included:
          type: boolean
          description: 'Whether taxes are included in the order subtotal. Valid values: `true` or `false`.'
          nullable: true
        total_tax:
          type: number
          description: The sum of all the taxes applied to the order.
          format: decimal
          nullable: true
        subtotal_price:
          type: number
          description: The price of the order before shipping and taxes.
          format: decimal
          nullable: true
        total_price:
          type: number
          description: 'The sum of all the prices of all the items in the order, including taxes and discounts.'
          format: decimal
          nullable: true
        completed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the order is created and the draft order is completed.'
          format: date-time
          nullable: true
        status:
          type: string
          description: "The status of a draft order as it transitions into an order. When a draft order is created it is set to `open` status. The invoice can then be sent to the customer, and `status` changes to `invoice_sent`. The draft order can then be paid, set to pending, or paid by credit card. In each case, the draft order is set to `completed` and an order is created.\r\n\r\nAfter a draft order is set to `completed` the only further modifications that can be made are adding tags or metafields.\r\n\r\nValid values: * **open**: Draft order is open. * **invoice_sent**: Invoice has been sent for the draft order. * **completed**: Draft order has been completed and turned into an order."
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.DraftOrder. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.DraftOrder response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.DraftOrder metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        use_customer_default_address:
          type: boolean
          description: An optional boolean that you can send as part of a draft order object to load customer shipping information.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    DraftOrderInvoice:
      type: object
      properties:
        to:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        bcc:
          type: array
          items:
            type: string
          nullable: true
        subject:
          type: string
          nullable: true
        custom_message:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    DraftOrderInvoiceItem:
      required:
        - draft_order_invoice
      type: object
      properties:
        draft_order_invoice:
          $ref: '#/components/schemas/DraftOrderInvoice'
      additionalProperties: { }
    DraftOrderItem:
      required:
        - draft_order
      type: object
      properties:
        draft_order:
          $ref: '#/components/schemas/DraftOrder'
      additionalProperties: { }
    DraftOrderList:
      required:
        - draft_orders
      type: object
      properties:
        draft_orders:
          type: array
          items:
            $ref: '#/components/schemas/DraftOrder'
      additionalProperties: { }
    DraftShippingLine:
      type: object
      properties:
        custom:
          type: boolean
          description: Whether this is a regular shipping line or custom shipping line.
          nullable: true
        handle:
          type: string
          description: The handle of the shipping rate which was selected and applied. Required for regular shipping lines.
          nullable: true
        title:
          type: string
          description: 'The title of the shipping method. Required for custom shipping lines. (maximum: 255 characters)'
          nullable: true
        price:
          type: number
          description: The price of the shipping method. Required for custom shipping lines.
          format: decimal
          nullable: true
      additionalProperties: { }
    EmailMarketingConsent:
      type: object
      properties:
        state:
          type: string
          description: The current email marketing state for the customer.
          nullable: true
        opt_in_level:
          type: string
          description: 'The marketing subscription opt-in level, as described in the M3AAWG Sender Best Common Practices, that the customer gave when they consented to receive marketing material by email.'
          nullable: true
        consent_updated_at:
          type: string
          description: 'The date and time when the customer consented to receive marketing material by email. If no date is provided, then the date and time when the consent information was sent is used.'
          format: date-time
          nullable: true
      additionalProperties: { }
    ExtendedAuthorizationAttributes:
      type: object
      properties:
        standard_authorization_expires_at:
          type: string
          description: 'The date and time (ISO 8601 format) when the standard authorization period expires. After expiry, an extended authorization fee is applied upon capturing the payment.'
          format: date-time
          nullable: true
        extended_authorization_expires_at:
          type: string
          description: 'The date and time (ISO 8601 format) when the extended authorization period expires. After expiry, the merchant can''t capture the payment.'
          format: date-time
          nullable: true
      additionalProperties: { }
    FinancialStatus:
      enum:
        - pending
        - authorized
        - partially_paid
        - paid
        - partially_refunded
        - refunded
        - voided
      type: string
      additionalProperties: { }
    FinancialStatusRequest:
      enum:
        - pending
        - authorized
        - partially_paid
        - paid
        - partially_refunded
        - refunded
        - voided
        - any
        - unpaid
      type: string
      additionalProperties: { }
    Fulfillment:
      required:
        - id
      type: object
      properties:
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          description: "A list of the fulfillment's line items, which includes:\r\n\r\n*   **id**: The ID of the line item within the fulfillment. \r\n*   **variant_id**: The ID of the product variant being fulfilled. \r\n*   **title**: The title of the product. \r\n*   **quantity**: The number of items in the fulfillment. \r\n*   **price**: The price of the item. \r\n*   **grams**: The weight of the item in grams. \r\n*   **sku**: The unique identifier of the item in the fulfillment. \r\n*   **variant_title**: The title of the product variant being fulfilled. \r\n*   **vendor**: The name of the supplier of the item. \r\n*   **fulfillment_service**: The service provider who is doing the fulfillment. This field will be deprecated. Use the `assigned_location` property on the `FulfillmentOrder` resource instead. \r\n*   **product_id**: The unique numeric identifier for the product in the fulfillment. \r\n*   **requires_shipping**: Whether a customer needs to provide a shipping address when placing an order for this product variant. \r\n*   **taxable**: Whether the line item is taxable. \r\n*   **gift_card**: Whether the line item is a [gift card](https://help.shopify.com/manual/products/gift-card-products). \r\n*   **name**: The name of the product variant. \r\n*   **variant_inventory_management**: The name of the inventory management system. \r\n*   **properties**: Any additional properties associated with the line item. \r\n*   **product_exists**: Whether the product exists. \r\n*   **fulfillable_quantity**: The amount available to fulfill. This is the quantity - max (refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity. This field will be deprecated. Use the `fulfillable_quantity` property of the `line_item` property on the `FulfillmentOrder` resource instead. \r\n*   **total_discount**: The total of any discounts applied to the line item. \r\n*   **fulfillment_status**: The status of an order in terms of the line items being fulfilled. Valid values: `fulfilled`, `null`, or `partial`. This field will be deprecated. Use the `status` property on the `FulfillmentOrder` resource instead. \r\n*   **fulfillment_line_item_id**: A unique identifier for a quantity of items within a single fulfillment. An order can have multiple fulfillment line items. \r\n*   **tax_lines**: The `title`, `price`, and `rate` of any taxes applied to the line item. \r\n*   **duties**: A list of duty objects, each containing information about a duty on the line item."
          nullable: true
        location_id:
          type: integer
          description: 'The unique identifier of the location that the fulfillment was processed at. To find the ID of the location, use the [Location resource](/docs/admin-api/rest/reference/inventory/location).'
          format: int64
          nullable: true
        name:
          type: string
          description: 'The uniquely identifying fulfillment name, consisting of two parts separated by a `.`. The first part represents the order name and the second part represents the fulfillment number. The fulfillment number automatically increments depending on how many fulfillments are in an order (e.g. `#1001.1`, `#1001.2`).'
          nullable: true
        notify_customer:
          type: boolean
          description: 'Whether the customer should be notified. If set to `true`, then an email will be sent when the fulfillment is created or updated. For orders that were initially created using the API, the default value is `false`. For all other orders, the default value is `true`.'
          nullable: true
        order_id:
          type: integer
          description: The unique numeric identifier for the order.
          format: int64
          nullable: true
        origin_address:
          $ref: '#/components/schemas/Address'
        receipt:
          $ref: '#/components/schemas/Receipt'
        service:
          type: string
          description: The fulfillment service associated with the fulfillment.
          nullable: true
        shipment_status:
          $ref: '#/components/schemas/ShipmentStatus'
        status:
          $ref: '#/components/schemas/FulfillmentStatus'
        tracking_company:
          type: string
          description: "The name of the tracking company. The following tracking companies display for shops located in any country: \r\n\r\n*   **4PX** \r\n*   **Amazon Logistics UK** \r\n*   **Amazon Logistics US** \r\n*   **Anjun Logistics** \r\n*   **APC** \r\n*   **Australia Post** \r\n*   **Bluedart** \r\n*   **Canada Post** \r\n*   **Canpar** \r\n*   **China Post** \r\n*   **Chukou1** \r\n*   **Correios** \r\n*   **Couriers Please** \r\n*   **Delhivery** \r\n*   **DHL eCommerce** \r\n*   **DHL eCommerce Asia** \r\n*   **DHL Express** \r\n*   **DPD** \r\n*   **DPD Local** \r\n*   **DPD UK** \r\n*   **Eagle** \r\n*   **FedEx** \r\n*   **FSC** \r\n*   **Asendia USA** \r\n*   **GLS** \r\n*   **GLS (US)** \r\n*   **Japan Post** \r\n*   **La Poste** \r\n*   **New Zealand Post** \r\n*   **Newgistics** \r\n*   **PostNL** \r\n*   **PostNord** \r\n*   **Purolator** \r\n*   **Royal Mail** \r\n*   **Sagawa** \r\n*   **Sendle** \r\n*   **SF Express** \r\n*   **SFC Fulfilllment** \r\n*   **Singapore Post** \r\n*   **StarTrack** \r\n*   **TNT** \r\n*   **Toll IPEC** \r\n*   **UPS** \r\n*   **USPS** \r\n*   **Whistl** \r\n*   **Yamato** \r\n*   **YunExpress**  \r\n\r\nThe following tracking companies are displayed for shops located in specific countries:\r\n\r\n*   **Germany**: Deutsche Post (DE), Deutsche Post (EN), DHL \r\n*   **Ireland**: An Post, Fastway \r\n*   **Australia**: Aramex Australia, Australia Post, Sendle \r\n*   **Japan**: エコ配, 西濃運輸, 西濃スーパーエキスプレス, 福山通運, 日本通運, 名鉄運輸, 第一貨物 \r\n*   **China**: Anjun Logistics, China Post, DHL eCommerce Asia, FSC, SFC Fulfillment, WanbExpress, YunExpress  <div class=\"note\"> \r\n\r\n#### Important\r\n\r\nWhen creating a fulfillment for a supported carrier, send the `tracking_company` exactly as written in the list above. If the tracking company doesn't match one of the supported entries, then the shipping status might not be updated properly during the fulfillment process.\r\n </div>"
          nullable: true
        tracking_numbers:
          type: array
          items:
            type: string
          description: "A list of tracking numbers, provided by the shipping company. <div class=\"note\"> \r\n\r\n#### Important\r\n\r\nIt is highly recommended that you send the tracking company and the tracking URL as well. If neither one of these is sent, then the tracking company will be determined automatically. This can result in an invalid tracking URL.\r\n\r\nThe tracking URL is displayed in the shipping confirmation email, which can optionally be sent to the customer. When accounts are enabled, it is also displayed in the customer's order history.\r\n </div>"
          nullable: true
        tracking_urls:
          type: array
          items:
            type: string
          description: The URLs of tracking pages for the fulfillment.
          nullable: true
        variant_inventory_management:
          type: string
          description: The name of the inventory management service.
          nullable: true
        tracking_number:
          type: string
          nullable: true
        tracking_url:
          type: string
          description: The URLs of tracking pages for the fulfillment.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    FulfillmentStatus:
      enum:
        - pending
        - open
        - success
        - cancelled
        - error
        - failure
      type: string
      additionalProperties: { }
    FulfillmentStatusRequest:
      enum:
        - shipped
        - partial
        - unshipped
        - any
        - unfulfilled
      type: string
      additionalProperties: { }
    LineItem:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        fulfillable_quantity:
          type: integer
          description: 'The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity.'
          format: int32
          nullable: true
        fulfillment_service:
          type: string
          description: 'Service provider who is doing the fulfillment. Valid values are either "manual" or the name of the provider. eg: "amazon", "shipwire", etc.'
          nullable: true
        fulfillment_status:
          type: string
          description: 'The fulfillment status of this line item. Known values are ''fulfilled'', ''null'' and ''partial''.'
          nullable: true
        grams:
          type: integer
          description: The weight of the item in grams.
          format: int64
          nullable: true
        price:
          type: number
          description: The price of the item before discounts have been applied.
          format: decimal
          nullable: true
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The number of products that were purchased.
          format: int32
          nullable: true
        requires_shipping:
          type: boolean
          description: States whether or not the fulfillment requires shipping.
          nullable: true
        sku:
          type: string
          description: A unique identifier of the item in the fulfillment.
          nullable: true
        title:
          type: string
          description: The title of the product.
          nullable: true
        variant_id:
          type: integer
          description: The id of the product variant. Can be null if the product purchased is not a variant.
          format: int64
          nullable: true
        variant_title:
          type: string
          description: The title of the product variant. Can be null if the product purchased is not a variant.
          nullable: true
        name:
          type: string
          description: The name of the product variant.
          nullable: true
        vendor:
          type: string
          description: The name of the supplier of the item.
          nullable: true
        gift_card:
          type: boolean
          description: States whether the order used a gift card.
          nullable: true
        taxable:
          type: boolean
          description: States whether or not the product was taxable.
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'An array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem.'
          nullable: true
        tip_payment_gateway:
          type: string
          description: 'The payment gateway used to tender the tip, such as shopify_payments. Present only on tips.'
          nullable: true
        tip_payment_method:
          type: string
          description: 'The payment method used to tender the tip, such as Visa. Present only on tips.'
          nullable: true
        total_discount:
          type: number
          description: The total discount amount applied to this line item. This value is not subtracted in the line item price.
          format: decimal
          nullable: true
        total_discount_set:
          $ref: '#/components/schemas/PriceSet'
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocation'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemProperty'
          description: "An array of custom information for an item that has been added to the cart.\r\nOften used to provide product customization options.\r\nAn array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem."
          nullable: true
        variant_inventory_management:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        product_exists:
          type: boolean
          description: This property is undocumented by Shopify.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemDuty'
          description: 'A list of duty objects, each containing information about a duty on the line item'
          nullable: true
        origin_location:
          $ref: '#/components/schemas/LineItemOriginLocation'
      additionalProperties: { }
    LineItemDuty:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        harmonized_system_code:
          type: string
          nullable: true
        country_code_of_origin:
          type: string
          nullable: true
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          nullable: true
      additionalProperties: { }
    LineItemOriginLocation:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        country_code:
          type: string
          description: The two-letter code (ISO 3166-1 format) for the country of the item's supplier.
          nullable: true
        province_code:
          type: string
          description: The two-letter abbreviation for the region of the item's supplier.
          nullable: true
        name:
          type: string
          description: The two-letter abbreviation for the region of the item's supplier.
          nullable: true
        address1:
          type: string
          description: The name of the item's supplier.
          nullable: true
        address2:
          type: string
          description: The suite number of the item's supplier.
          nullable: true
        city:
          type: string
          description: The suite number of the item's supplier.
          nullable: true
        zip:
          type: string
          description: The city of the item's supplier.
          nullable: true
      additionalProperties: { }
    LineItemProperty:
      type: object
      properties:
        name:
          type: string
          description: The name of the note attribute.
          nullable: true
        value:
          type: string
          description: The value of the note attribute.
          nullable: true
      additionalProperties: { }
      description: An object representing a properties for OpenShopify.Admin.Builder.Models.LineItem.Properties
    Metafield:
      required:
        - id
      type: object
      properties:
        description:
          type: string
          description: A description of the information that the metafield contains.
          nullable: true
        key:
          type: string
          description: 'The key of the metafield. Keys can be up to 30 characters long and can contain alphanumeric characters, hyphens, underscores, and periods.'
          nullable: true
        namespace:
          type: string
          description: A container for a group of metafields. Grouping metafields within a namespace prevents your metafields from conflicting with other metafields with the same key name. Must have between 3-20 characters.
          nullable: true
        owner_id:
          type: integer
          description: The unique ID of the resource that the metafield is attached to.
          format: int64
          nullable: true
        owner_resource:
          type: string
          description: The type of resource that the metafield is attached to.
          nullable: true
        value:
          description: 'The data to store in the metafield. The value is always stored as a string, regardless of the metafield''s type.'
          nullable: true
        type:
          $ref: '#/components/schemas/MetafieldType'
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    MetafieldType:
      enum:
        - boolean
        - color
        - date
        - date_time
        - dimension
        - file_reference
        - json
        - multi_line_text_field
        - number_decimal
        - number_integer
        - page_reference
        - product_reference
        - rating
        - single_line_text_field
        - variant_reference
        - volume
        - weight
      type: string
      additionalProperties: { }
    NoteAttribute:
      type: object
      properties:
        name:
          type: string
          description: The name of the note attribute.
          nullable: true
        value:
          type: string
          description: The value of the note attribute.
          nullable: true
      additionalProperties: { }
      description: An object representing a note attribute for OpenShopify.Admin.Builder.Models.OrderBase.NoteAttributes
    Order:
      required:
        - id
      type: object
      properties:
        app_id:
          type: integer
          description: The ID of the app that created the order.
          format: int64
          nullable: true
        billing_address:
          $ref: '#/components/schemas/Address'
        browser_ip:
          type: string
          description: The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported.
          nullable: true
        buyer_accepts_marketing:
          type: boolean
          description: Whether the customer consented to receive email updates from the shop.
          nullable: true
        cancel_reason:
          $ref: '#/components/schemas/CancelReason'
        cancelled_at:
          type: string
          description: The date and time when the order was canceled. Returns `null` if the order isn't canceled.
          format: date-time
          nullable: true
        cart_token:
          type: string
          description: A unique value when referencing the cart that's associated with the order.
          nullable: true
        checkout_token:
          type: string
          description: A unique value when referencing the checkout that's associated with the order.
          nullable: true
        client_details:
          $ref: '#/components/schemas/ClientDetails'
        closed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the order was closed. Returns `null` if the order isn''t closed.'
          format: date-time
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the shop currency.'
          nullable: true
        current_total_discounts:
          type: string
          description: 'The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_total_discounts_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_price:
          type: string
          description: 'The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_total_price_set:
          $ref: '#/components/schemas/PriceSet'
        current_subtotal_price:
          type: string
          description: 'The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_subtotal_price_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_tax:
          type: string
          description: 'The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds.'
          nullable: true
        current_total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        customer:
          $ref: '#/components/schemas/Customer'
        customer_locale:
          type: string
          description: 'The two or three-letter language code, optionally followed by a region modifier.'
          nullable: true
        discount_applications:
          type: array
          items:
            $ref: '#/components/schemas/DiscountApplication'
          description: "An ordered list of stacked discount applications.\r\n\r\nThe `discount_applications` property includes 3 types: `discount_code`, `manual`, and `script`. All 3 types share a common structure and have some type specific attributes.\r\n\r\n*   **allocation_method**: The method by which the discount application value has been allocated to entitled lines. Valid values: \r\n\r\n    *   `across`: The value is spread across all entitled lines. \r\n    *   `each`: The value is applied onto every entitled line. \r\n    *   `one`: The value is applied onto a single line. <div class=\"note-caution note\"> \r\n\r\n#### Caution\r\n\r\nAs of version 2020-07, `across` is returned instead of `one` as the meaning is the same for explicit discounts.\r\n </div>   \r\n*   **code**: The discount code that was used to apply the discount. Available only for discount code applications.  \r\n*   **description**: The description of the discount application, as defined by the merchant or the Shopify Script. Available only for manual and script discount applications.  \r\n*   **target_selection**: The lines on the order, of the type defined by `target_type`, that the discount is allocated over. Valid values: \r\n\r\n    *   `all`: The discount is allocated onto all lines, \r\n    *   `entitled`: The discount is allocated only onto lines it is entitled for. \r\n    *   `explicit`: The discount is allocated onto explicitly selected lines.   \r\n*   **target_type**: The type of line on the order that the discount is applicable on. Valid values: \r\n\r\n    *   `line_item`: The discount applies to line items. \r\n    *   `shipping_line`: The discount applies to shipping lines.   \r\n*   **title**: The title of the discount application, as defined by the merchant. Available only for manual discount applications. \r\n*   **type**: The discount application type. Valid values: \r\n\r\n    *   `automatic`: The discount was applied automatically, such as by a Buy X Get Y automatic discount. \r\n    *   `discount_code`: The discount was applied by a discount code. \r\n    *   `manual`: The discount was manually applied by the merchant (for example, by using an app or creating a draft order). \r\n    *   `script`: The discount was applied by a Shopify Script.   \r\n*   **value**: The value of the discount application as a decimal. This represents the intention of the discount application. For example, if the intent was to apply a 20% discount, then the value will be `20.0`. If the intent was to apply a $15 discount, then the value will be `15.0`.  \r\n*   **value_type**: The type of the value. Valid values: \r\n\r\n    *   `fixed_amount`: A fixed amount discount value in the currency of the order. \r\n    *   `percentage`: A percentage discount value."
          nullable: true
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode'
          description: 'A list of discounts applied to the order. Each discount object includes the following properties: * **amount**: The amount that''s deducted from the order total. When you create an order, this value is the percentage or monetary amount to deduct. After the order is created, this property returns the calculated amount. * **code**: When the associated discount application is of type `code`, this property returns the discount code that was entered at checkout. Otherwise this property returns the title of the discount that was applied. * **type**: The type of discount. Default value: `fixed_amount`. Valid values: * `fixed_amount`: Applies `amount` as a unit of the store''s currency. For example, if `amount` is 30 and the store''s currency is USD, then 30 USD is deducted from the order total when the discount is applied. * `percentage`: Applies a discount of `amount` as a percentage of the order total. * `shipping`: Applies a free shipping discount on orders that have a shipping rate less than or equal to `amount`. For example, if `amount` is 30, then the discount will give the customer free shipping for any shipping rate that is less than or equal to $30.'
          nullable: true
        email:
          type: string
          description: The customer's email address.
          nullable: true
        estimated_taxes:
          type: boolean
          description: 'Whether taxes on the order are estimated. Many factors can change between the time a customer places an order and the time the order is shipped, which could affect the calculation of taxes. This property returns `false` when taxes on the order are finalized and aren''t subject to any changes.'
          nullable: true
        financial_status:
          $ref: '#/components/schemas/FinancialStatus'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
          description: 'An array of fulfillments associated with the order. For more information, see the [Fulfillment API](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment).'
          nullable: true
        fulfillment_status:
          $ref: '#/components/schemas/OrderFulfillmentStatus'
        gateway:
          type: string
          description: The payment gateway used.
          nullable: true
          deprecated: true
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when they entered the shop.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          description: "A list of line item objects, each containing information about an item in the order. Each object has the following properties: \r\n\r\n*   **fulfillable_quantity**: The amount available to fulfill, calculated as follows: \r\n\r\n`*quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity*`\r\n\r\n*   **fulfillment_service**: The service provider that's fulfilling the item. Valid values: `manual`, or the name of the provider, such as `amazon` or `shipwire`. This field is due to be **deprecated**. Consider using [' \"FulfillmentOrder#assigned_location](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) instead. \r\n*   **fulfillment_status**: How far along an order is in terms line items fulfilled. Valid values: `null`, `fulfilled`, `partial`, and `not_eligible`. \r\n*   **grams**: The weight of the item in grams. \r\n*   **id**: The ID of the line item. \r\n*   **price**: The price of the item before discounts have been applied in the shop currency. \r\n*   **price_set**: The price of the line item in shop and presentment currencies. \r\n*   **product_id**: The ID of the product that the line item belongs to. Can be `null` if the original product associated with the order is deleted at a later date. \r\n*   **quantity**: The number of items that were purchased. \r\n*   **requires_shipping**: Whether the item requires shipping. \r\n*   **sku**: The item's SKU (stock keeping unit). \r\n*   **title**: The title of the product. \r\n*   **variant_id**: The ID of the product variant. \r\n*   **variant_title**: The title of the product variant. \r\n*   **vendor**: The name of the item's supplier. \r\n*   **name**: The name of the product variant. \r\n*   **gift_card**: Whether the item is a gift card. If `true`, then the item is not taxed or considered for shipping charges. \r\n*   **properties**: An array of custom information for the item that has been added to the cart. Often used to provide product customization options.  \r\n*   **taxable**: Whether the item was taxable. \r\n*   **tax_lines**: A list of tax line objects, each of which details a tax applied to the item. \r\n\r\n    *   `title`: The name of the tax. \r\n    *   `price`: The amount added to the order for this tax in the shop currency. \r\n    *   `price_set`: The amount added to the order for this tax in shop and presentment currencies. \r\n    *   `rate`: The tax rate applied to the order to calculate the tax price. \r\n    *   `channel_liable`: Whether the channel that submitted the tax line is liable for remitting. A value of `null` indicates unknown liability for the tax line.   \r\n*   **tip_payment_gateway**: The payment gateway used to tender the tip, such as `shopify_payments`. Present only on tips. \r\n*   **tip_payment_method**: The payment method used to tender the tip, such as `Visa`. Present only on tips. \r\n*   **total_discount**: The total amount of the discount allocated to the line item in the shop currency. This field must be explicitly set using draft orders, Shopify scripts, or the API. Instead of using this field, Shopify recommends using `discount_allocations`, which provides the same information. \r\n*   **total_discount_set**: The total amount allocated to the line item in the presentment currency. Instead of using this field, Shopify recommends using `discount_allocations`, which provides the same information. \r\n*   **discount_allocations**: An ordered list of amounts allocated by discount applications. Each discount allocation is associated with a particular discount application. \r\n\r\n    *   `amount`: The discount amount allocated to the line in the shop currency. \r\n    *   `discount_application_index`: The index of the associated discount application in the order's `discount_applications` list. \r\n    *   `amount_set`: The discount amount allocated to the line item in shop and presentment currencies.   \r\n*   **origin_location**: The location of the line item’s fulfillment origin. This field is due to be **deprecated**. Consider using [' \"FulfillmentOrder#assigned_location_id](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) instead. \r\n\r\n    *   `id`: The location ID of the line item’s fulfillment origin. Used by Shopify to calculate applicable taxes. This is not the ID of the location where the order was placed. You can use the [FulfillmentOrder](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) resource to determine the location an item will be sourced from. \r\n    *   `country_code`: The two-letter code ([ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format) for the country of the item's supplier. \r\n    *   `province_code`: The two-letter abbreviation for the region of the item's supplier. \r\n    *   `name`: The name of the item's supplier. \r\n    *   `address1`: The street address of the item's supplier. \r\n    *   `address2`: The suite number of the item's supplier. \r\n    *   `city`: The city of the item's supplier. \r\n    *   `zip`: The zip of the item's supplier.   \r\n*   **duties**: A list of duty objects, each containing information about a duty on the line item."
          nullable: true
        location_id:
          type: integer
          description: 'The ID of the physical location where the order was processed. To determine the locations where the line items are assigned for fulfillment please use the [FulfillmentOrder](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) resource.'
          format: int64
          nullable: true
        name:
          type: string
          description: 'The order name, generated by combining the `order_number` property with the order prefix and suffix that are set in the merchant''s [general settings](//www.shopify.com/admin/settings/general). This is different from the `id` property, which is the ID of the order used by the API. This field can also be set by the API to be any string value.'
          nullable: true
        note:
          type: string
          description: An optional note that a shop owner can attach to the order.
          nullable: true
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          description: Extra information that is added to the order. Appears in the **Additional details** section of an order details page. Each array entry must contain a hash with `name` and `value` keys.
          nullable: true
        number:
          type: integer
          description: The order's position in the shop's count of orders. Numbers are sequential and start at 1.
          format: int32
          nullable: true
        order_number:
          type: integer
          description: The order 's position in the shop's count of orders starting at 1001. Order numbers are sequential and start at 1001.
          format: int32
          nullable: true
        original_total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        payment_details:
          type: string
          description: "An object containing information about the payment. It has the following properties: \r\n\r\n*   **avs_result_code**: The response code from [the address verification system](https://en.wikipedia.org/wiki/Address_Verification_System) (AVS). The code is a single letter. See [ this chart](http://www.emsecommerce.net/avs_cvv2_response_codes.htm) for the codes and their definitions. \r\n*   **credit_card_bin**: The [issuer identification number](https://en.wikipedia.org/wiki/ISO/IEC_7812) (IIN), formerly known as the bank identification number (BIN), of the customer's credit card. This is made up of the first few digits of the credit card number. \r\n*   **credit_card_company**: The name of the company who issued the customer's credit card. \r\n*   **credit_card_number**: The customer's credit card number, with most of the leading digits redacted. \r\n*   **cvv_result_code**: The response code from the credit card company indicating whether the customer entered the [card security code](https://en.wikipedia.org/wiki/Card_Security_Code) (card verification value) correctly. The code is a single letter or empty string. See [ this chart](http://www.emsecommerce.net/avs_cvv2_response_codes.htm) for the codes and their definitions."
          nullable: true
          deprecated: true
        payment_terms:
          type: string
          description: "The terms and conditions under which a payment should be processed.\r\n\r\n*   **amount**: The amount that is owed according to the payment terms. \r\n*   **currency**: The presentment currency for the payment. \r\n*   **payment_terms_name**: The name of the selected payment terms template for the order. \r\n*   **payment_terms_type**: The type of selected payment terms template for the order. \r\n*   **due_in_days**: The number of days between the invoice date and due date that is defined in the selected payment terms template. \r\n*   **payment_schedules**: An array of schedules associated to the payment terms. \r\n\r\n    *   **amount**: The amount that is owed according to the payment terms. \r\n    *   **currency**: The presentment currency for the payment. \r\n    *   **issued_at**: The date and time when the payment terms were initiated. \r\n    *   **due_at**: The date and time when the payment is due. Calculated based on `issued_at` and `due_in_days` or a customized fixed date if the type is fixed. \r\n    *   **completed_at**: The date and time when the purchase is completed. Returns **null** initially and updates when the payment is captured. \r\n    *   **expected_payment_method**: The name of the payment method gateway."
          nullable: true
        payment_gateway_names:
          type: array
          items:
            type: string
          description: The list of payment gateways used for the order.
          nullable: true
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications.
          nullable: true
        presentment_currency:
          type: string
          description: The presentment currency that was used to display prices to the customer.
          nullable: true
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an order was processed. This value is the date that appears on your orders and that''s used in the analytic reports. If you''re importing orders from an app or another platform, then you can set `processed_at` to a date and time in the past to match when the original order was created.'
          format: date-time
          nullable: true
        processing_method:
          $ref: '#/components/schemas/ProcessingMethod'
        referring_site:
          type: string
          description: The website where the customer clicked a link to the shop.
          nullable: true
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/Refund'
          description: 'A list of refunds applied to the order. For more information, see the [Refund API](/docs/admin-api/rest/reference/orders/refund).'
          nullable: true
        shipping_address:
          $ref: '#/components/schemas/Address'
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          description: "An array of objects, each of which details a shipping method used. Each object has the following properties: \r\n\r\n*   **code**: A reference to the shipping method. \r\n*   **discounted_price**: The price of the shipping method after line-level discounts have been applied. Doesn't reflect cart-level or order-level discounts. \r\n*   **discounted_price_set**: The price of the shipping method in both shop and presentment currencies after line-level discounts have been applied. \r\n*   **price**: The price of this shipping method in the shop currency. Can't be negative. \r\n*   **price_set**: The price of the shipping method in shop and presentment currencies. \r\n*   **source**: The source of the shipping method. \r\n*   **title**: The title of the shipping method. \r\n*   **tax_lines**: A list of tax line objects, each of which details a tax applicable to this shipping line. \r\n*   **carrier_identifier**: A reference to the carrier service that provided the rate. Present when the rate was computed by a third-party carrier service. \r\n*   **requested_fulfillment_service_id**: A reference to the fulfillment service that is being requested for the shipping method. Present if the shipping method requires processing by a third party fulfillment service; `null` otherwise."
          nullable: true
        source_name:
          type: string
          description: 'The source of the checkout. To use this field for sales attribution, you must register the channels that your app is managing. You can register the channels that your app is managing by completing [this Google Form](https://docs.google.com/forms/d/e/1FAIpQLScmVTZRQNjOJ7RD738mL1lGeFjqKVe_FM2tO9xsm21QEo5Ozg/viewform?usp=sf_link). After you''ve submited your request, you need to wait for your request to be processed by Shopify. You can find a list of your channels in the Partner Dashboard, in your app''s Marketplace extension. You can specify a handle as the `source_name` value in your request.'
          nullable: true
        source_identifier:
          type: string
          description: The ID of the order placed on the originating platform.This value doesn't correspond to the Shopify ID that's generated from a completed draft.
          nullable: true
        source_url:
          type: string
          description: 'A valid URL to the original order on the originating surface.This URL is displayed to merchants on the Order Details page.If the URL is invalid, then it won''t be displayed.'
          nullable: true
        subtotal_price:
          type: number
          description: 'The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips.'
          format: decimal
          nullable: true
        subtotal_price_set:
          $ref: '#/components/schemas/PriceSet'
        tags:
          type: string
          description: 'Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length.'
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: "An array of tax line objects, each of which details a tax applicable to the order. Each object has the following properties: \r\n\r\n*   **price**: The amount of tax to be charged in the shop currency. \r\n*   **rate**: The rate of tax to be applied. \r\n*   **title**: The name of the tax. \r\n*   **channel_liable**: Whether the channel that submitted the tax line is liable for remitting. A value of `null` indicates unknown liability for the tax line.  When creating an order through the API, tax lines can be specified on the order or the line items but not both. Tax lines specified on the order are split across the *taxable* line items in the created order."
          nullable: true
        taxes_included:
          type: boolean
          description: Whether taxes are included in the order subtotal.
          nullable: true
        test:
          type: boolean
          description: Whether this is a test order.
          nullable: true
        token:
          type: string
          description: A unique value when referencing the order.
          nullable: true
        total_discounts:
          type: number
          description: The total discounts applied to the price of the order in the shop currency.
          format: decimal
          nullable: true
        total_discounts_set:
          $ref: '#/components/schemas/PriceSet'
        total_line_items_price:
          type: number
          description: The sum of all line item prices in the shop currency.
          format: decimal
          nullable: true
        total_line_items_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_outstanding:
          type: string
          description: The total outstanding amount of the order in the shop currency.
          nullable: true
        total_price:
          type: number
          description: 'The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive.'
          format: decimal
          nullable: true
        total_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_shipping_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_tax:
          type: number
          description: The sum of all the taxes applied to the order in the shop currency. Must be positive.
          format: decimal
          nullable: true
        total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        total_tip_received:
          type: number
          description: The sum of all the tips in the order in the shop currency.
          format: decimal
          nullable: true
        total_weight:
          type: number
          description: The sum of all line item weights in grams. The sum is not adjusted as items are removed from the order.
          format: decimal
          nullable: true
        user_id:
          type: integer
          description: 'The ID of the user logged into Shopify POS who processed the order, if applicable.'
          format: int64
          nullable: true
        order_status_url:
          type: string
          description: 'The URL pointing to the [order status web page](https://help.shopify.com/manual/orders/status-tracking), if applicable.'
          nullable: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: "An array of OpenShopify.Admin.Builder.Models.Transaction objects that detail all of the transactions in\r\nthis order."
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.OrderBase. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.OrderBase response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.OrderBase metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        checkout_id:
          type: integer
          format: int64
          nullable: true
        confirmed:
          type: boolean
          nullable: true
        contact_email:
          type: string
          nullable: true
        total_price_usd:
          type: number
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    OrderFulfillmentStatus:
      enum:
        - fulfilled
        - partial
        - restocked
      type: string
      additionalProperties: { }
    OrderItem:
      required:
        - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
      additionalProperties: { }
    OrderList:
      required:
        - orders
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      additionalProperties: { }
    OrderRisk:
      required:
        - id
      type: object
      properties:
        cause_cancel:
          type: boolean
          description: "Whether this order risk is severe enough to force the cancellation of the order. If `true`, then this order risk is included in the **Order canceled** message that's shown on the details page of the canceled order. \r\n\r\n**Note:** Setting this property to `true` does not cancel the order. Use this property only if your app automatically cancels the order using the [Order](/docs/admin-api/rest/reference/orders/order/#cancel-{{ current_version }}) resource. If your app doesn't automatically cancel orders based on order risks, then leave this property set to `false`."
          nullable: true
        checkout_id:
          type: integer
          description: The ID of the checkout that the order risk belongs to.
          format: int64
          nullable: true
        display:
          type: boolean
          description: "Whether the order risk is displayed on the order details page in the Shopify admin. If `false`, then this order risk is ignored when Shopify determines your app's overall risk level for the order.\r\n\r\nIt's not advised to create order risks with a display set to `false`. \r\n<aside class='note'>\r\n\r\nThis property can't be changed after an order risk is created.\r\n</aside><aside class='caution'>This property might be removed in future API versions.</aside>"
          nullable: true
        merchant_message:
          type: string
          description: The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if `display` is set to`true`.
          nullable: true
          deprecated: true
        message:
          type: string
          description: The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if `display` is set to`true`.
          nullable: true
        order_id:
          type: integer
          description: The ID of the order that the order risk belongs to.
          format: int64
          nullable: true
        recommendation:
          $ref: '#/components/schemas/RiskRecommendation'
        score:
          type: number
          description: "**For internal use only**. A number between 0 and 1 that's assigned to the order. The closer the score is to 1, the more likely it is that the order is fraudulent. <aside class=\"note\"> \r\n\r\n#### Note\r\n\r\nThere is no guarantee of stability in risk scores. Scores are not probabilities. The relationship between scores and the probability of fraud can vary over time and between risk providers.\r\n </aside>"
          format: decimal
          nullable: true
        source:
          type: string
          description: The source of the order risk.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    OrderRiskItem:
      required:
        - risk
      type: object
      properties:
        risk:
          $ref: '#/components/schemas/OrderRisk'
      additionalProperties: { }
    OrderRiskList:
      required:
        - risks
      type: object
      properties:
        risks:
          type: array
          items:
            $ref: '#/components/schemas/OrderRisk'
      additionalProperties: { }
    OrderStatusRequest:
      enum:
        - open
        - closed
        - any
      type: string
      additionalProperties: { }
    PaymentDetails:
      type: object
      properties:
        avs_result_code:
          type: string
          nullable: true
        credit_card_bin:
          type: string
          nullable: true
        cvv_result_code:
          type: string
          nullable: true
        credit_card_number:
          type: string
          nullable: true
        credit_card_company:
          type: string
          nullable: true
      additionalProperties: { }
    PaymentsRefundAttributeStatus:
      enum:
        - pending
        - failure
        - success
        - error
      type: string
      additionalProperties: { }
    PaymentsRefundAttributes:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PaymentsRefundAttributeStatus'
        acquirer_reference_number:
          type: string
          description: A unique number associated with the transaction that can be used to track the refund. This property has a value only for transactions completed with Visa or Mastercard.
          nullable: true
      additionalProperties: { }
    Price:
      type: object
      properties:
        currency_code:
          type: string
          description: The three-letter code (ISO 4217 format) for currency.
          nullable: true
        amount:
          type: number
          description: The amount in the currency.
          format: decimal
          nullable: true
      additionalProperties: { }
    PriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      additionalProperties: { }
    ProcessingMethod:
      enum:
        - ''
        - checkout
        - direct
        - manual
        - offsite
        - express
        - free
      type: string
      additionalProperties: { }
    Receipt:
      type: object
      properties:
        testcase:
          type: boolean
          nullable: true
        authorization:
          type: string
          nullable: true
      additionalProperties: { }
    Refund:
      required:
        - id
      type: object
      properties:
        duties:
          type: array
          items:
            $ref: '#/components/schemas/RefundDuty'
          description: A list of duties that have been reimbursed as part of the refund.
          nullable: true
        note:
          type: string
          description: An optional note attached to a refund.
          nullable: true
        order_adjustments:
          type: array
          items:
            $ref: '#/components/schemas/RefundOrderAdjustment'
          description: "A list of order adjustments attached to the refund. Order adjustments are generated to account for refunded shipping costs and differences between calculated and actual refund amounts. Each entry has the following properties:\r\n\r\n*   **id**: The unique identifier for the order adjustment. \r\n*   **order_id**: The unique identifier for the order that the order adjustment is associated with. \r\n*   **refund_id**: The unique identifier for the refund that the order adjustment is associated with. \r\n*   **amount**: The value of the discrepancy between the calculated refund and the actual refund. If the `kind` property's value is `shipping_refund`, then `amount` returns the value of shipping charges refunded to the customer. \r\n*   **tax_amount**: The taxes that are added to `amount`, such as applicable shipping taxes added to a shipping refund. \r\n*   **kind**: The order adjustment type. Valid values: `shipping_refund` and `refund_discrepancy`. \r\n*   **reason**: The reason for the order adjustment. To set this value, include `discrepancy_reason` when you create a refund. \r\n*   **amount_set**: The amount of the order adjustment in shop and presentment currencies. \r\n*   **tax_amount_set**: The tax amount of the order adjustment in shop and presentment currencies."
          nullable: true
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the refund was imported. This value can be set to a date in the past when importing from other systems. If no value is provided, then it will be auto-generated as the current time in Shopify. Public apps need to be granted permission by Shopify to import orders with the `processed_at` timestamp set to a value earlier the `created_at` timestamp. Private apps can''t be granted permission by Shopify.'
          format: date-time
          nullable: true
        refund_duties:
          type: array
          items:
            $ref: '#/components/schemas/RefundDutyType'
          description: "A list of refunded duties. Each entry has the following properties:\r\n\r\n*   **duty_id**: The unique identifier of the duty. \r\n*   **refund_type**: Specifies how you want the duty refunded. Valid values: \r\n\r\n    *   `FULL`: Refunds all the duties associated with a duty ID. You do not need to include refund line items if you are using the full refund type. \r\n    *   `PROPORTIONAL`: Refunds duties in proportion to the line item quantity that you want to refund. If you choose the proportional refund type, then you must also pass the refund line items to calculate the portion of duties to refund."
          nullable: true
        refund_line_items:
          type: array
          items:
            $ref: '#/components/schemas/RefundLineItem'
          description: "A list of refunded line items. Each entry has the following properties: \r\n\r\n*   **id**: The unique identifier of the line item in the refund. \r\n*   **line_item**: A line item being refunded. \r\n*   **line_item_id**: The ID of the related line item in the order. \r\n*   **quantity**: The refunded quantity of the associated line item. \r\n*   **restock_type**: How this refund line item affects inventory levels. Valid values: \r\n\r\n    *   **no_restock**: Refunding these items won't affect inventory. The number of fulfillable units for this line item will remain unchanged. For example, a refund payment can be issued but no items will be refunded or made available for sale again. \r\n    *   **cancel**: The items have not yet been fulfilled. The canceled quantity will be added back to the available count. The number of fulfillable units for this line item will decrease. \r\n    *   **return**: The items were already delivered, and will be returned to the merchant. The refunded quantity will be added back to the available count. The number of fulfillable units for this line item will remain unchanged. \r\n    *   **legacy_restock**: The deprecated `restock` property was used for this refund. These items were made available for sale again. This value is not accepted when creating new refunds.   \r\n*   **location_id**: The unique identifier of the [location](/api/admin-rest/current/resources/location) where the items will be restocked. Required when `restock_type` has the value `return` or `cancel`. \r\n*   **subtotal**: The subtotal of the refund line item. \r\n*   **total_tax**: The total tax on the refund line item. \r\n*   **subtotal_set**: The subtotal of the refund line item in shop and presentment currencies. \r\n*   **total_tax_set**: The total tax of the line item in shop and presentment currencies."
          nullable: true
        restock:
          type: string
          description: Whether to add the line items back to the store's inventory.
          nullable: true
          deprecated: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: 'A list of transactions involved in the refund. A single order can have multiple transactions associated with it. For more information, see the [ Transaction](/api/admin-rest/current/resources/transaction) resource.'
          nullable: true
        user_id:
          type: integer
          description: The unique identifier of the user who performed the refund.
          format: int64
          nullable: true
        order_id:
          type: integer
          description: The unique identifier of the order.
          format: int64
          nullable: true
        notify:
          type: boolean
          description: Whether to send a refund notification to the customer
          nullable: true
        shipping:
          $ref: '#/components/schemas/Shipping'
        currency:
          type: string
          description: 'The three-letter code (ISO 4217 format) for the currency used for the refund. Note: Required whenever the shipping amount property is provided.'
          nullable: true
        total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    RefundDuty:
      type: object
      properties:
        duty_id:
          type: integer
          format: int64
          nullable: true
        amount_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    RefundDutyType:
      type: object
      properties:
        duty_id:
          type: integer
          format: int64
          nullable: true
        refund_type:
          type: string
          nullable: true
      additionalProperties: { }
    RefundItem:
      required:
        - refund
      type: object
      properties:
        refund:
          $ref: '#/components/schemas/Refund'
      additionalProperties: { }
    RefundLineItem:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        line_item:
          $ref: '#/components/schemas/LineItem'
        line_item_id:
          type: integer
          description: The unique identifier of the refund line item.
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The quantity of the associated line item that was returned.
          format: int32
          nullable: true
        total_tax:
          type: number
          description: Tax amount refunded
          format: decimal
          nullable: true
        subtotal:
          type: number
          description: Item subtotal
          format: decimal
          nullable: true
        subtotal_set:
          $ref: '#/components/schemas/PriceSet'
        total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        restock_type:
          $ref: '#/components/schemas/RestockType'
        location_id:
          type: integer
          description: "The unique identifier of the location where the items will be restocked.\r\nRequired when restock_type has the value return or cancel."
          format: int64
          nullable: true
      additionalProperties: { }
    RefundList:
      required:
        - refunds
      type: object
      properties:
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/Refund'
      additionalProperties: { }
    RefundOrderAdjustment:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        order_id:
          type: integer
          description: The unique identifier of the order
          format: int64
          nullable: true
        refund_id:
          type: integer
          description: The unique identifier of the refund
          format: int64
          nullable: true
        amount:
          type: number
          description: The amount refunded (it is negative and does not include tax).
          format: decimal
          nullable: true
        tax_amount:
          type: number
          description: The tax amount refunded (negative).
          format: decimal
          nullable: true
        kind:
          type: string
          description: 'The type of adjustment. Values include "refund_discrepancy", "shipping_refund"'
          nullable: true
        reason:
          type: string
          description: Reason for the refund
          nullable: true
        amount_set:
          $ref: '#/components/schemas/PriceSet'
        tax_amount_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    RestockType:
      enum:
        - no_restock
        - cancel
        - return
        - legacy_restock
      type: string
      additionalProperties: { }
    RiskRecommendation:
      enum:
        - cancel
        - investigate
        - accept
      type: string
      additionalProperties: { }
    SendInvoiceRequest:
      required:
        - draft_order_invoice
      type: object
      properties:
        draft_order_invoice:
          $ref: '#/components/schemas/DraftOrderInvoice'
      additionalProperties: false
    ShipmentStatus:
      enum:
        - label_printed
        - label_purchased
        - attempted_delivery
        - ready_for_pickup
        - confirmed
        - in_transit
        - out_for_delivery
        - delivered
        - failure
      type: string
      additionalProperties: { }
    Shipping:
      type: object
      properties:
        full_refund:
          type: boolean
          description: Whether to refund all remaining shipping.
          nullable: true
        amount:
          type: number
          description: Set a specific amount to refund for shipping. Takes precedence over full_refund.
          format: decimal
          nullable: true
        maximum_refundable:
          type: number
          description: The maximum amount that can be refunded
          format: decimal
          nullable: true
        tax:
          type: number
          format: decimal
          nullable: true
      additionalProperties: { }
    ShippingLine:
      type: object
      properties:
        handle:
          type: string
          description: The carrier provided identifier.
          nullable: true
        carrier_identifier:
          type: string
          description: The carrier provided identifier.
          nullable: true
        code:
          type: string
          description: A reference to the shipping method.
          nullable: true
        phone:
          type: string
          description: The phone number used for the shipment.
          nullable: true
        price:
          type: number
          description: The price of this shipping method.
          format: decimal
          nullable: true
        discounted_price:
          type: number
          description: The discounted price of this shipping method.
          format: decimal
          nullable: true
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocation'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
          nullable: true
        source:
          type: string
          description: The source of the shipping method.
          nullable: true
        title:
          type: string
          description: The title of the shipping method.
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'A list of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.ShippingLine.'
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
        discounted_price_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    ShippingRate:
      required:
        - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
        price:
          type: number
          format: decimal
          nullable: true
        title:
          type: string
          nullable: true
        checkout:
          $ref: '#/components/schemas/ShippingRateCheckout'
        phone_required:
          type: boolean
          nullable: true
        delivery_range:
          type: integer
          format: int64
          nullable: true
        estimated_time_in_transit:
          type: integer
          format: int64
          nullable: true
        handle:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    ShippingRateCheckout:
      type: object
      properties:
        total_tax:
          type: number
          format: decimal
          nullable: true
        total_price:
          type: number
          format: decimal
          nullable: true
        subtotal_price:
          type: number
          format: decimal
          nullable: true
      additionalProperties: { }
    SmsMarketingConsent:
      type: object
      properties:
        state:
          type: string
          description: The current SMS marketing state for the customer.
          nullable: true
        opt_in_level:
          type: string
          description: 'The marketing subscription opt-in level, as described in the M3AAWG Sender Best Common Practices, that the customer gave when they consented to receive marketing material by SMS.'
          nullable: true
        consent_updated_at:
          type: string
          description: 'The date and time when the customer consented to receive marketing material by SMS. If no date is provided, then the date and time when the consent information was sent is used.'
          format: date-time
          nullable: true
        consent_collected_from:
          type: string
          description: The source for whether the customer has consented to receive marketing material by SMS.
          nullable: true
      additionalProperties: { }
    TaxLine:
      type: object
      properties:
        price:
          type: number
          description: The amount of tax to be charged.
          format: decimal
          nullable: true
        rate:
          type: number
          description: The rate of tax to be applied.
          format: decimal
          nullable: true
        title:
          type: string
          description: The name of the tax.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    Transaction:
      required:
        - id
      type: object
      properties:
        amount:
          type: number
          description: 'The amount of money included in the transaction. If you don''t provide a value for `amount`, then it defaults to the total cost of the order (even if a previous transaction has been made towards it).'
          format: decimal
          nullable: true
        authorization:
          type: string
          description: The authorization code associated with the transaction.
          nullable: true
        authorization_expires_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the Shopify Payments authorization expires.'
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency used for the payment.'
          nullable: true
        device_id:
          type: integer
          description: The ID for the device.
          format: int64
          nullable: true
        error_code:
          $ref: '#/components/schemas/TransactionErrorCode'
        extended_authorization_attributes:
          $ref: '#/components/schemas/ExtendedAuthorizationAttributes'
        gateway:
          type: string
          description: 'The name of the gateway the transaction was issued through. A list of gateways can be found on Shopify''s [payment gateways page](//www.shopify.com/payment-gateways).'
          nullable: true
        kind:
          $ref: '#/components/schemas/TransactionKind'
        location_id:
          type: integer
          description: The ID of the physical location where the transaction was processed.
          format: int64
          nullable: true
        message:
          type: string
          description: A string generated by the payment provider with additional information about why the transaction succeeded or failed.
          nullable: true
        order_id:
          type: integer
          description: The ID for the order that the transaction is associated with.
          format: int64
          nullable: true
        payment_details:
          $ref: '#/components/schemas/PaymentDetails'
        parent_id:
          type: integer
          description: "The ID of an associated transaction. \r\n\r\n*   For `capture` transactions, the parent needs to be an `authorization` transaction. \r\n*   For `void` transactions, the parent needs to be an `authorization` transaction. \r\n*   For `refund` transactions, the parent needs to be a `capture` or `sale` transaction."
          format: int64
          nullable: true
        payments_refund_attributes:
          $ref: '#/components/schemas/PaymentsRefundAttributes'
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when a transaction was processed. This value is the date that''s used in the analytic reports. By default, it matches the `created_at` value. If you''re importing transactions from an app or another platform, then you can set `processed_at` to a date and time in the past to match when the original transaction was processed.'
          format: date-time
          nullable: true
        receipt:
          type: string
          description: A transaction receipt attached to the transaction by the gateway. The value of this field depends on which gateway the shop is using.
          nullable: true
        source_name:
          type: string
          description: 'The origin of the transaction. This is set by Shopify and can''t be overridden. Example values: `web`, `pos`, `iphone`, and `android`.'
          nullable: true
        status:
          type: string
          description: 'The status of the transaction. Valid values: `pending`, `failure`, `success`, and `error`.'
          nullable: true
        test:
          type: boolean
          description: Whether the transaction is a test transaction.
          nullable: true
        user_id:
          type: integer
          description: 'The ID for the user who was logged into the Shopify POS device when the order was processed, if applicable.'
          format: int64
          nullable: true
        currency_exchange_adjustment:
          $ref: '#/components/schemas/CurrencyExchangeAdjustment'
        maximum_refundable:
          type: number
          description: The maximum amount that can be refunded
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    TransactionErrorCode:
      enum:
        - incorrect_number
        - invalid_number
        - invalid_expiry_date
        - invalid_cvc
        - expired_card
        - incorrect_cvc
        - incorrect_zip
        - incorrect_address
        - card_declined
        - processing_error
        - call_issuer
        - pick_up_card
      type: string
      additionalProperties: { }
    TransactionItem:
      required:
        - transaction
      type: object
      properties:
        transaction:
          $ref: '#/components/schemas/Transaction'
      additionalProperties: { }
    TransactionKind:
      enum:
        - authorization
        - capture
        - sale
        - void
        - refund
      type: string
      additionalProperties: { }
    TransactionList:
      required:
        - transactions
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
      additionalProperties: { }
    UpdateDraftOrder:
      required:
        - id
      type: object
      properties:
        order_id:
          type: integer
          description: The ID of the order that's created and associated with the draft order after the draft order is completed.
          format: int64
          nullable: true
        name:
          type: string
          description: Name of the draft order.
          nullable: true
        customer:
          $ref: '#/components/schemas/Customer'
        shipping_address:
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'
        note:
          type: string
          description: The text of an optional note that a merchant can attach to the draft order.
          nullable: true
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          description: The extra information that's added to the order. The information appears in the**Additional details** section of an order details page. Each array entry must contain a hash with `name` and `value` keys.
          nullable: true
        email:
          type: string
          description: The customer's email address.
          nullable: true
        currency:
          type: string
          description: 'The three letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency used for the payment.'
          nullable: true
        invoice_sent_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the invoice was emailed to the customer.'
          format: date-time
          nullable: true
        invoice_url:
          type: string
          description: The URL for the invoice.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/DraftLineItem'
          description: "The product variant line item or custom line item associated to the draft order. Each draft order must include at least one `line_item`. Each `line_item` resource has the following properties: \r\n\r\n*   **custom**: *Read only field* Whether this is a custom line item or a product variant line item. If set to `true` indicates a custom line item. If set to `false` indicates a product variant line item. \r\n*   **id**: The ID of the line item. \r\n*   **variant_id**: The ID of the product variant corresponding to the line item. Required for a product variant line item. Set to `null` for a custom line item. \r\n*   **product_id**: The ID of the product corresponding to the line item’s product variant. \r\n*   **name**: The name of the product. \r\n*   **variant_title**: The title of the product variant. Defaults to `Custom` for custom line items created via the API. \r\n*   **vendor**: The vendor. \r\n*   **quantity**: The number of products that were purchased. \r\n*   **gift_card**: Indicates if the product is a gift card. Valid values: `true` or `false`. \r\n*   **fulfillment_service**: The service provider responsible for fulfillment. Valid values are either `manual` or the name of the provider, for example amazon, shipwire. Defaults to `manual` for custom line items. \r\n*   **properties**: An array of custom information for an item that has been added to the draft order, often used to provide [product customization options](/api/liquid/objects/line_item#line_item-properties). Copied to created order when draft order is completed. \r\n*   **applied_discount**: The discount applied to the line item. For more information, see the `applied_discount` property. \r\n*   **tax_lines**: *Read only field* The calculated rate and amount of taxes for the line item. \r\n\r\n    *   **price**: The amount of tax to be charged. \r\n    *   **rate**: The rate of tax to be applied. \r\n    *   **title**: The name of the tax.  \r\n*   **title**: The title of the product or variant. Applicable only to custom line items. *Required field*. \r\n*   **price**: The price of the item before discounts have been applied. Applicable only to custom line items. *Required field*. \r\n*   **grams**: The weight of the item in grams. Applicable only to custom line items. If not specified, defaults to 0. \r\n*   **requires_shipping**: Whether the fulfillment requires shipping. Applicable only to custom line items. Valid values: `true` or `false.` \r\n*   **sku**: A unique identifier for the item in the fulfillment. Applicable only to custom line items. \r\n*   **taxable**: Whether the product is taxable. Applicable only to custom line items."
          nullable: true
        payment_terms:
          type: string
          description: "The terms and conditions under which a payment should be processed.\r\n\r\n*   **amount**: The amount that is owed according to the payment terms. \r\n*   **currency**: The presentment currency for the payment. \r\n*   **payment_terms_name**: The name of the selected payment terms template for the draft order. \r\n*   **payment_terms_type**: The type of selected payment terms template for the draft order. \r\n*   **due_in_days**: The number of days between the invoice date and due date that is defined in the selected payment terms template. \r\n*   **payment_schedules**: An array of schedules associated to the payment terms. \r\n\r\n    *   **amount**: The amount that is owed according to the payment terms. \r\n    *   **currency**: The presentment currency for the payment. \r\n    *   **issued_at**: The date and time when the payment terms were initiated. \r\n    *   **due_at**: The date and time when the payment is due. Calculated based on `issued_at` and `due_in_days` or a customized fixed date if the type is fixed. \r\n    *   **completed_at**: The date and time when the purchase is completed. Returns **null** initially and updates when the payment is captured. \r\n    *   **expected_payment_method**: The name of the payment method gateway."
          nullable: true
        shipping_line:
          $ref: '#/components/schemas/DraftShippingLine'
        source_name:
          type: string
          description: 'The source of the checkout. To use this field for sales attribution, you need to register the channels that your app is managing. You can register the channels that your app is managing by completing the [Order Attribution Access Form](https://docs.google.com/forms/d/e/1FAIpQLScmVTZRQNjOJ7RD738mL1lGeFjqKVe_FM2tO9xsm21QEo5Ozg/viewform?usp=sf_link). After you''ve submited the form, you''ll need to wait for your request to be processed by Shopify. You can find a list of your channels in the Partner Dashboard, in your app''s Marketplace extension. You can specify a handle as the `source_name` value in your request.'
          nullable: true
        tags:
          type: string
          description: 'A comma-seperated list of additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length. For example, `tags: "tag1","tag2","tag3"`.'
          nullable: true
        tax_exempt:
          type: boolean
          description: 'Whether taxes are exempt for the draft order. If set to `false`, then Shopify refers to the `taxable` field for each `line_item`. If a customer is applied to the draft order, then Shopify uses the customer''s `tax_exempt` field instead.'
          nullable: true
        tax_exemptions:
          type: array
          items:
            type: string
          description: 'Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only. Valid values: * **EXEMPT_ALL**: This customer is exempt from all Canadian taxes. * **CA_STATUS_CARD_EXEMPTION**: This customer is exempt from specific taxes for holding a valid STATUS_CARD_EXEMPTION in Canada. * **CA_DIPLOMAT_EXEMPTION**: This customer is exempt from specific taxes for holding a valid DIPLOMAT_EXEMPTION in Canada. * **CA_BC_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in British Columbia. * **CA_MB_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Manitoba. * **CA_SK_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Saskatchewan. * **CA_BC_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in British Columbia. * **CA_MB_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Manitoba. * **CA_NS_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Nova Scotia. * **CA_PE_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Prince Edward Island. * **CA_SK_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Saskatchewan. * **CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in British Columbia. * **CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in Saskatchewan. * **CA_BC_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_BC_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_ON_PURCHASE_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PURCHASE_EXEMPTION in Ontario. * **CA_MB_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Manitoba. * **CA_NS_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Nova Scotia. * **CA_SK_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Saskatchewan.'
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: "An array of tax line resources, each of which details a tax applicable to the order. Each `tax_lines` resource has the following properties: \r\n\r\n*   **price**: The amount of tax to be charged. \r\n*   **rate**: The rate of tax to be applied. \r\n*   **title**: The name of the tax."
          nullable: true
        applied_discount:
          $ref: '#/components/schemas/AppliedDiscount'
        taxes_included:
          type: boolean
          description: 'Whether taxes are included in the order subtotal. Valid values: `true` or `false`.'
          nullable: true
        total_tax:
          type: number
          description: The sum of all the taxes applied to the order.
          format: decimal
          nullable: true
        subtotal_price:
          type: number
          description: The price of the order before shipping and taxes.
          format: decimal
          nullable: true
        total_price:
          type: number
          description: 'The sum of all the prices of all the items in the order, including taxes and discounts.'
          format: decimal
          nullable: true
        completed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the order is created and the draft order is completed.'
          format: date-time
          nullable: true
        status:
          type: string
          description: "The status of a draft order as it transitions into an order. When a draft order is created it is set to `open` status. The invoice can then be sent to the customer, and `status` changes to `invoice_sent`. The draft order can then be paid, set to pending, or paid by credit card. In each case, the draft order is set to `completed` and an order is created.\r\n\r\nAfter a draft order is set to `completed` the only further modifications that can be made are adding tags or metafields.\r\n\r\nValid values: * **open**: Draft order is open. * **invoice_sent**: Invoice has been sent for the draft order. * **completed**: Draft order has been completed and turned into an order."
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.DraftOrder. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.DraftOrder response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.DraftOrder metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        use_customer_default_address:
          type: boolean
          description: An optional boolean that you can send as part of a draft order object to load customer shipping information.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: false
    UpdateDraftOrderRequest:
      required:
        - draft_order
      type: object
      properties:
        draft_order:
          $ref: '#/components/schemas/UpdateDraftOrder'
      additionalProperties: false
    UpdateOrder:
      required:
        - id
      type: object
      properties:
        app_id:
          type: integer
          description: The ID of the app that created the order.
          format: int64
          nullable: true
        billing_address:
          $ref: '#/components/schemas/Address'
        browser_ip:
          type: string
          description: The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported.
          nullable: true
        buyer_accepts_marketing:
          type: boolean
          description: Whether the customer consented to receive email updates from the shop.
          nullable: true
        cancel_reason:
          $ref: '#/components/schemas/CancelReason'
        cancelled_at:
          type: string
          description: The date and time when the order was canceled. Returns `null` if the order isn't canceled.
          format: date-time
          nullable: true
        cart_token:
          type: string
          description: A unique value when referencing the cart that's associated with the order.
          nullable: true
        checkout_token:
          type: string
          description: A unique value when referencing the checkout that's associated with the order.
          nullable: true
        client_details:
          $ref: '#/components/schemas/ClientDetails'
        closed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the order was closed. Returns `null` if the order isn''t closed.'
          format: date-time
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the shop currency.'
          nullable: true
        current_total_discounts:
          type: string
          description: 'The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_total_discounts_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_price:
          type: string
          description: 'The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_total_price_set:
          $ref: '#/components/schemas/PriceSet'
        current_subtotal_price:
          type: string
          description: 'The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_subtotal_price_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_tax:
          type: string
          description: 'The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds.'
          nullable: true
        current_total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        customer:
          $ref: '#/components/schemas/Customer'
        customer_locale:
          type: string
          description: 'The two or three-letter language code, optionally followed by a region modifier.'
          nullable: true
        discount_applications:
          type: array
          items:
            $ref: '#/components/schemas/DiscountApplication'
          description: "An ordered list of stacked discount applications.\r\n\r\nThe `discount_applications` property includes 3 types: `discount_code`, `manual`, and `script`. All 3 types share a common structure and have some type specific attributes.\r\n\r\n*   **allocation_method**: The method by which the discount application value has been allocated to entitled lines. Valid values: \r\n\r\n    *   `across`: The value is spread across all entitled lines. \r\n    *   `each`: The value is applied onto every entitled line. \r\n    *   `one`: The value is applied onto a single line. <div class=\"note-caution note\"> \r\n\r\n#### Caution\r\n\r\nAs of version 2020-07, `across` is returned instead of `one` as the meaning is the same for explicit discounts.\r\n </div>   \r\n*   **code**: The discount code that was used to apply the discount. Available only for discount code applications.  \r\n*   **description**: The description of the discount application, as defined by the merchant or the Shopify Script. Available only for manual and script discount applications.  \r\n*   **target_selection**: The lines on the order, of the type defined by `target_type`, that the discount is allocated over. Valid values: \r\n\r\n    *   `all`: The discount is allocated onto all lines, \r\n    *   `entitled`: The discount is allocated only onto lines it is entitled for. \r\n    *   `explicit`: The discount is allocated onto explicitly selected lines.   \r\n*   **target_type**: The type of line on the order that the discount is applicable on. Valid values: \r\n\r\n    *   `line_item`: The discount applies to line items. \r\n    *   `shipping_line`: The discount applies to shipping lines.   \r\n*   **title**: The title of the discount application, as defined by the merchant. Available only for manual discount applications. \r\n*   **type**: The discount application type. Valid values: \r\n\r\n    *   `automatic`: The discount was applied automatically, such as by a Buy X Get Y automatic discount. \r\n    *   `discount_code`: The discount was applied by a discount code. \r\n    *   `manual`: The discount was manually applied by the merchant (for example, by using an app or creating a draft order). \r\n    *   `script`: The discount was applied by a Shopify Script.   \r\n*   **value**: The value of the discount application as a decimal. This represents the intention of the discount application. For example, if the intent was to apply a 20% discount, then the value will be `20.0`. If the intent was to apply a $15 discount, then the value will be `15.0`.  \r\n*   **value_type**: The type of the value. Valid values: \r\n\r\n    *   `fixed_amount`: A fixed amount discount value in the currency of the order. \r\n    *   `percentage`: A percentage discount value."
          nullable: true
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode'
          description: 'A list of discounts applied to the order. Each discount object includes the following properties: * **amount**: The amount that''s deducted from the order total. When you create an order, this value is the percentage or monetary amount to deduct. After the order is created, this property returns the calculated amount. * **code**: When the associated discount application is of type `code`, this property returns the discount code that was entered at checkout. Otherwise this property returns the title of the discount that was applied. * **type**: The type of discount. Default value: `fixed_amount`. Valid values: * `fixed_amount`: Applies `amount` as a unit of the store''s currency. For example, if `amount` is 30 and the store''s currency is USD, then 30 USD is deducted from the order total when the discount is applied. * `percentage`: Applies a discount of `amount` as a percentage of the order total. * `shipping`: Applies a free shipping discount on orders that have a shipping rate less than or equal to `amount`. For example, if `amount` is 30, then the discount will give the customer free shipping for any shipping rate that is less than or equal to $30.'
          nullable: true
        email:
          type: string
          description: The customer's email address.
          nullable: true
        estimated_taxes:
          type: boolean
          description: 'Whether taxes on the order are estimated. Many factors can change between the time a customer places an order and the time the order is shipped, which could affect the calculation of taxes. This property returns `false` when taxes on the order are finalized and aren''t subject to any changes.'
          nullable: true
        financial_status:
          $ref: '#/components/schemas/FinancialStatus'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
          description: 'An array of fulfillments associated with the order. For more information, see the [Fulfillment API](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment).'
          nullable: true
        fulfillment_status:
          $ref: '#/components/schemas/OrderFulfillmentStatus'
        gateway:
          type: string
          description: The payment gateway used.
          nullable: true
          deprecated: true
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when they entered the shop.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          description: "A list of line item objects, each containing information about an item in the order. Each object has the following properties: \r\n\r\n*   **fulfillable_quantity**: The amount available to fulfill, calculated as follows: \r\n\r\n`*quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity - open_fulfilled_quantity*`\r\n\r\n*   **fulfillment_service**: The service provider that's fulfilling the item. Valid values: `manual`, or the name of the provider, such as `amazon` or `shipwire`. This field is due to be **deprecated**. Consider using [' \"FulfillmentOrder#assigned_location](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) instead. \r\n*   **fulfillment_status**: How far along an order is in terms line items fulfilled. Valid values: `null`, `fulfilled`, `partial`, and `not_eligible`. \r\n*   **grams**: The weight of the item in grams. \r\n*   **id**: The ID of the line item. \r\n*   **price**: The price of the item before discounts have been applied in the shop currency. \r\n*   **price_set**: The price of the line item in shop and presentment currencies. \r\n*   **product_id**: The ID of the product that the line item belongs to. Can be `null` if the original product associated with the order is deleted at a later date. \r\n*   **quantity**: The number of items that were purchased. \r\n*   **requires_shipping**: Whether the item requires shipping. \r\n*   **sku**: The item's SKU (stock keeping unit). \r\n*   **title**: The title of the product. \r\n*   **variant_id**: The ID of the product variant. \r\n*   **variant_title**: The title of the product variant. \r\n*   **vendor**: The name of the item's supplier. \r\n*   **name**: The name of the product variant. \r\n*   **gift_card**: Whether the item is a gift card. If `true`, then the item is not taxed or considered for shipping charges. \r\n*   **properties**: An array of custom information for the item that has been added to the cart. Often used to provide product customization options.  \r\n*   **taxable**: Whether the item was taxable. \r\n*   **tax_lines**: A list of tax line objects, each of which details a tax applied to the item. \r\n\r\n    *   `title`: The name of the tax. \r\n    *   `price`: The amount added to the order for this tax in the shop currency. \r\n    *   `price_set`: The amount added to the order for this tax in shop and presentment currencies. \r\n    *   `rate`: The tax rate applied to the order to calculate the tax price. \r\n    *   `channel_liable`: Whether the channel that submitted the tax line is liable for remitting. A value of `null` indicates unknown liability for the tax line.   \r\n*   **tip_payment_gateway**: The payment gateway used to tender the tip, such as `shopify_payments`. Present only on tips. \r\n*   **tip_payment_method**: The payment method used to tender the tip, such as `Visa`. Present only on tips. \r\n*   **total_discount**: The total amount of the discount allocated to the line item in the shop currency. This field must be explicitly set using draft orders, Shopify scripts, or the API. Instead of using this field, Shopify recommends using `discount_allocations`, which provides the same information. \r\n*   **total_discount_set**: The total amount allocated to the line item in the presentment currency. Instead of using this field, Shopify recommends using `discount_allocations`, which provides the same information. \r\n*   **discount_allocations**: An ordered list of amounts allocated by discount applications. Each discount allocation is associated with a particular discount application. \r\n\r\n    *   `amount`: The discount amount allocated to the line in the shop currency. \r\n    *   `discount_application_index`: The index of the associated discount application in the order's `discount_applications` list. \r\n    *   `amount_set`: The discount amount allocated to the line item in shop and presentment currencies.   \r\n*   **origin_location**: The location of the line item’s fulfillment origin. This field is due to be **deprecated**. Consider using [' \"FulfillmentOrder#assigned_location_id](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) instead. \r\n\r\n    *   `id`: The location ID of the line item’s fulfillment origin. Used by Shopify to calculate applicable taxes. This is not the ID of the location where the order was placed. You can use the [FulfillmentOrder](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) resource to determine the location an item will be sourced from. \r\n    *   `country_code`: The two-letter code ([ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format) for the country of the item's supplier. \r\n    *   `province_code`: The two-letter abbreviation for the region of the item's supplier. \r\n    *   `name`: The name of the item's supplier. \r\n    *   `address1`: The street address of the item's supplier. \r\n    *   `address2`: The suite number of the item's supplier. \r\n    *   `city`: The city of the item's supplier. \r\n    *   `zip`: The zip of the item's supplier.   \r\n*   **duties**: A list of duty objects, each containing information about a duty on the line item."
          nullable: true
        location_id:
          type: integer
          description: 'The ID of the physical location where the order was processed. To determine the locations where the line items are assigned for fulfillment please use the [FulfillmentOrder](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) resource.'
          format: int64
          nullable: true
        name:
          type: string
          description: 'The order name, generated by combining the `order_number` property with the order prefix and suffix that are set in the merchant''s [general settings](//www.shopify.com/admin/settings/general). This is different from the `id` property, which is the ID of the order used by the API. This field can also be set by the API to be any string value.'
          nullable: true
        note:
          type: string
          description: An optional note that a shop owner can attach to the order.
          nullable: true
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          description: Extra information that is added to the order. Appears in the **Additional details** section of an order details page. Each array entry must contain a hash with `name` and `value` keys.
          nullable: true
        number:
          type: integer
          description: The order's position in the shop's count of orders. Numbers are sequential and start at 1.
          format: int32
          nullable: true
        order_number:
          type: integer
          description: The order 's position in the shop's count of orders starting at 1001. Order numbers are sequential and start at 1001.
          format: int32
          nullable: true
        original_total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        payment_details:
          type: string
          description: "An object containing information about the payment. It has the following properties: \r\n\r\n*   **avs_result_code**: The response code from [the address verification system](https://en.wikipedia.org/wiki/Address_Verification_System) (AVS). The code is a single letter. See [ this chart](http://www.emsecommerce.net/avs_cvv2_response_codes.htm) for the codes and their definitions. \r\n*   **credit_card_bin**: The [issuer identification number](https://en.wikipedia.org/wiki/ISO/IEC_7812) (IIN), formerly known as the bank identification number (BIN), of the customer's credit card. This is made up of the first few digits of the credit card number. \r\n*   **credit_card_company**: The name of the company who issued the customer's credit card. \r\n*   **credit_card_number**: The customer's credit card number, with most of the leading digits redacted. \r\n*   **cvv_result_code**: The response code from the credit card company indicating whether the customer entered the [card security code](https://en.wikipedia.org/wiki/Card_Security_Code) (card verification value) correctly. The code is a single letter or empty string. See [ this chart](http://www.emsecommerce.net/avs_cvv2_response_codes.htm) for the codes and their definitions."
          nullable: true
          deprecated: true
        payment_terms:
          type: string
          description: "The terms and conditions under which a payment should be processed.\r\n\r\n*   **amount**: The amount that is owed according to the payment terms. \r\n*   **currency**: The presentment currency for the payment. \r\n*   **payment_terms_name**: The name of the selected payment terms template for the order. \r\n*   **payment_terms_type**: The type of selected payment terms template for the order. \r\n*   **due_in_days**: The number of days between the invoice date and due date that is defined in the selected payment terms template. \r\n*   **payment_schedules**: An array of schedules associated to the payment terms. \r\n\r\n    *   **amount**: The amount that is owed according to the payment terms. \r\n    *   **currency**: The presentment currency for the payment. \r\n    *   **issued_at**: The date and time when the payment terms were initiated. \r\n    *   **due_at**: The date and time when the payment is due. Calculated based on `issued_at` and `due_in_days` or a customized fixed date if the type is fixed. \r\n    *   **completed_at**: The date and time when the purchase is completed. Returns **null** initially and updates when the payment is captured. \r\n    *   **expected_payment_method**: The name of the payment method gateway."
          nullable: true
        payment_gateway_names:
          type: array
          items:
            type: string
          description: The list of payment gateways used for the order.
          nullable: true
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications.
          nullable: true
        presentment_currency:
          type: string
          description: The presentment currency that was used to display prices to the customer.
          nullable: true
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an order was processed. This value is the date that appears on your orders and that''s used in the analytic reports. If you''re importing orders from an app or another platform, then you can set `processed_at` to a date and time in the past to match when the original order was created.'
          format: date-time
          nullable: true
        processing_method:
          $ref: '#/components/schemas/ProcessingMethod'
        referring_site:
          type: string
          description: The website where the customer clicked a link to the shop.
          nullable: true
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/Refund'
          description: 'A list of refunds applied to the order. For more information, see the [Refund API](/docs/admin-api/rest/reference/orders/refund).'
          nullable: true
        shipping_address:
          $ref: '#/components/schemas/Address'
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          description: "An array of objects, each of which details a shipping method used. Each object has the following properties: \r\n\r\n*   **code**: A reference to the shipping method. \r\n*   **discounted_price**: The price of the shipping method after line-level discounts have been applied. Doesn't reflect cart-level or order-level discounts. \r\n*   **discounted_price_set**: The price of the shipping method in both shop and presentment currencies after line-level discounts have been applied. \r\n*   **price**: The price of this shipping method in the shop currency. Can't be negative. \r\n*   **price_set**: The price of the shipping method in shop and presentment currencies. \r\n*   **source**: The source of the shipping method. \r\n*   **title**: The title of the shipping method. \r\n*   **tax_lines**: A list of tax line objects, each of which details a tax applicable to this shipping line. \r\n*   **carrier_identifier**: A reference to the carrier service that provided the rate. Present when the rate was computed by a third-party carrier service. \r\n*   **requested_fulfillment_service_id**: A reference to the fulfillment service that is being requested for the shipping method. Present if the shipping method requires processing by a third party fulfillment service; `null` otherwise."
          nullable: true
        source_name:
          type: string
          description: 'The source of the checkout. To use this field for sales attribution, you must register the channels that your app is managing. You can register the channels that your app is managing by completing [this Google Form](https://docs.google.com/forms/d/e/1FAIpQLScmVTZRQNjOJ7RD738mL1lGeFjqKVe_FM2tO9xsm21QEo5Ozg/viewform?usp=sf_link). After you''ve submited your request, you need to wait for your request to be processed by Shopify. You can find a list of your channels in the Partner Dashboard, in your app''s Marketplace extension. You can specify a handle as the `source_name` value in your request.'
          nullable: true
        source_identifier:
          type: string
          description: The ID of the order placed on the originating platform.This value doesn't correspond to the Shopify ID that's generated from a completed draft.
          nullable: true
        source_url:
          type: string
          description: 'A valid URL to the original order on the originating surface.This URL is displayed to merchants on the Order Details page.If the URL is invalid, then it won''t be displayed.'
          nullable: true
        subtotal_price:
          type: number
          description: 'The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips.'
          format: decimal
          nullable: true
        subtotal_price_set:
          $ref: '#/components/schemas/PriceSet'
        tags:
          type: string
          description: 'Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length.'
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: "An array of tax line objects, each of which details a tax applicable to the order. Each object has the following properties: \r\n\r\n*   **price**: The amount of tax to be charged in the shop currency. \r\n*   **rate**: The rate of tax to be applied. \r\n*   **title**: The name of the tax. \r\n*   **channel_liable**: Whether the channel that submitted the tax line is liable for remitting. A value of `null` indicates unknown liability for the tax line.  When creating an order through the API, tax lines can be specified on the order or the line items but not both. Tax lines specified on the order are split across the *taxable* line items in the created order."
          nullable: true
        taxes_included:
          type: boolean
          description: Whether taxes are included in the order subtotal.
          nullable: true
        test:
          type: boolean
          description: Whether this is a test order.
          nullable: true
        token:
          type: string
          description: A unique value when referencing the order.
          nullable: true
        total_discounts:
          type: number
          description: The total discounts applied to the price of the order in the shop currency.
          format: decimal
          nullable: true
        total_discounts_set:
          $ref: '#/components/schemas/PriceSet'
        total_line_items_price:
          type: number
          description: The sum of all line item prices in the shop currency.
          format: decimal
          nullable: true
        total_line_items_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_outstanding:
          type: string
          description: The total outstanding amount of the order in the shop currency.
          nullable: true
        total_price:
          type: number
          description: 'The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive.'
          format: decimal
          nullable: true
        total_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_shipping_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_tax:
          type: number
          description: The sum of all the taxes applied to the order in the shop currency. Must be positive.
          format: decimal
          nullable: true
        total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        total_tip_received:
          type: number
          description: The sum of all the tips in the order in the shop currency.
          format: decimal
          nullable: true
        total_weight:
          type: number
          description: The sum of all line item weights in grams. The sum is not adjusted as items are removed from the order.
          format: decimal
          nullable: true
        user_id:
          type: integer
          description: 'The ID of the user logged into Shopify POS who processed the order, if applicable.'
          format: int64
          nullable: true
        order_status_url:
          type: string
          description: 'The URL pointing to the [order status web page](https://help.shopify.com/manual/orders/status-tracking), if applicable.'
          nullable: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: "An array of OpenShopify.Admin.Builder.Models.Transaction objects that detail all of the transactions in\r\nthis order."
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.OrderBase. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.OrderBase response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.OrderBase metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        checkout_id:
          type: integer
          format: int64
          nullable: true
        confirmed:
          type: boolean
          nullable: true
        contact_email:
          type: string
          nullable: true
        total_price_usd:
          type: number
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: false
    UpdateOrderRequest:
      required:
        - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/UpdateOrder'
      additionalProperties: false
    UpdateOrderRisk:
      required:
        - id
      type: object
      properties:
        cause_cancel:
          type: boolean
          description: "Whether this order risk is severe enough to force the cancellation of the order. If `true`, then this order risk is included in the **Order canceled** message that's shown on the details page of the canceled order. \r\n\r\n**Note:** Setting this property to `true` does not cancel the order. Use this property only if your app automatically cancels the order using the [Order](/docs/admin-api/rest/reference/orders/order/#cancel-{{ current_version }}) resource. If your app doesn't automatically cancel orders based on order risks, then leave this property set to `false`."
          nullable: true
        checkout_id:
          type: integer
          description: The ID of the checkout that the order risk belongs to.
          format: int64
          nullable: true
        display:
          type: boolean
          description: "Whether the order risk is displayed on the order details page in the Shopify admin. If `false`, then this order risk is ignored when Shopify determines your app's overall risk level for the order.\r\n\r\nIt's not advised to create order risks with a display set to `false`. \r\n<aside class='note'>\r\n\r\nThis property can't be changed after an order risk is created.\r\n</aside><aside class='caution'>This property might be removed in future API versions.</aside>"
          nullable: true
        merchant_message:
          type: string
          description: The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if `display` is set to`true`.
          nullable: true
          deprecated: true
        message:
          type: string
          description: The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if `display` is set to`true`.
          nullable: true
        order_id:
          type: integer
          description: The ID of the order that the order risk belongs to.
          format: int64
          nullable: true
        recommendation:
          $ref: '#/components/schemas/RiskRecommendation'
        score:
          type: number
          description: "**For internal use only**. A number between 0 and 1 that's assigned to the order. The closer the score is to 1, the more likely it is that the order is fraudulent. <aside class=\"note\"> \r\n\r\n#### Note\r\n\r\nThere is no guarantee of stability in risk scores. Scores are not probabilities. The relationship between scores and the probability of fraud can vary over time and between risk providers.\r\n </aside>"
          format: decimal
          nullable: true
        source:
          type: string
          description: The source of the order risk.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: false
    UpdateOrderRiskRequest:
      required:
        - risk
      type: object
      properties:
        risk:
          $ref: '#/components/schemas/UpdateOrderRisk'
      additionalProperties: false
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
security:
  - ApiKey: [ ]
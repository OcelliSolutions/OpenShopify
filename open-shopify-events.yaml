openapi: 3.0.1
info:
  title: Events
  description: Events
  version: '2023-04'
servers:
  - url: 'https://{store_name}.myshopify.com/admin/api/{api_version}'
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
      api_version:
        default: '2023-04'
        description: The api version.
  - url: 'https://{store_name}.myshopify.com/admin'
    description: Some endpoints do not use the standard routing. This is an alternate.
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
paths:
  /events.json:
    get:
      tags:
        - Event
      operationId: ListEvents
      parameters:
        - name: created_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          schema:
            type: string
            format: date-time
        - name: fields
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
        - name: since_id
          in: query
          schema:
            type: integer
            format: int64
        - name: verb
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
  '/events/{event_id}.json':
    get:
      tags:
        - Event
      operationId: GetEvent
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventItem'
  /events/count.json:
    get:
      tags:
        - Event
      operationId: CountEvents
      parameters:
        - name: created_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/orders/{order_id}/events.json':
    get:
      tags:
        - Event
      operationId: GetEventAfterSpecificIDUsingSinceId
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: created_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          schema:
            type: string
            format: date-time
        - name: fields
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
        - name: since_id
          in: query
          schema:
            type: integer
            format: int64
        - name: verb
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
  '/products/{product_id}/events.json':
    get:
      tags:
        - Event
      operationId: ListEventsFromSpecificProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: created_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          schema:
            type: string
            format: date-time
        - name: fields
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
        - name: since_id
          in: query
          schema:
            type: integer
            format: int64
        - name: verb
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
  /webhooks.json:
    get:
      tags:
        - Webhook
      operationId: ListWebhooks
      parameters:
        - name: address
          in: query
          schema:
            type: string
        - name: created_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          schema:
            type: string
            format: date-time
        - name: fields
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
        - name: since_id
          in: query
          schema:
            type: integer
            format: int64
        - name: topic
          in: query
          schema:
            type: string
        - name: updated_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookList'
    post:
      tags:
        - Webhook
      operationId: CreateWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookItem'
  /webhooks/count.json:
    get:
      tags:
        - Webhook
      operationId: CountWebhooks
      parameters:
        - name: address
          in: query
          schema:
            type: string
        - name: topic
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/webhooks/{webhook_id}.json':
    get:
      tags:
        - Webhook
      operationId: GetWebhook
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookItem'
    put:
      tags:
        - Webhook
      operationId: UpdateWebhook
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookItem'
    delete:
      tags:
        - Webhook
      operationId: DeleteWebhook
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
components:
  schemas:
    CountItem:
      type: object
      properties:
        count:
          type: integer
          format: int32
      additionalProperties: { }
    CreateWebhook:
      required:
        - topic
      type: object
      properties:
        address:
          type: string
          description: Destination URI to which the webhook subscription should send the POST request when an event occurs.
          nullable: true
        api_version:
          type: string
          description: The Admin API version that Shopify uses to serialize webhook events. This value is inherited from the app that created the webhook subscription.
          nullable: true
        fields:
          type: array
          items:
            type: string
          description: 'An optional array of top-level resource fields that should be serialized and sent in the POST request. If absent, all fields will be sent.'
          nullable: true
        format:
          $ref: '#/components/schemas/WebhookFormat'
        metafield_namespaces:
          type: array
          items:
            type: string
          description: Optional array of namespaces for any metafields that should be included with each webhook.
          nullable: true
        private_metafield_namespaces:
          type: array
          items:
            type: string
          description: Optional array of namespaces for any private metafields that should be included with each webhook.
          nullable: true
        topic:
          $ref: '#/components/schemas/WebhookTopic'
      additionalProperties: false
    CreateWebhookRequest:
      required:
        - webhook
      type: object
      properties:
        webhook:
          $ref: '#/components/schemas/CreateWebhook'
      additionalProperties: false
    Event:
      required:
        - id
      type: object
      properties:
        arguments:
          type: array
          items: { }
          description: Refers to a certain event and its resources.
          nullable: true
        body:
          type: string
          description: A text field containing information about the event.
          nullable: true
        description:
          type: string
          description: A human readable description of the event.
          nullable: true
          deprecated: true
        path:
          type: string
          description: 'A relative URL to the resource the event is for, if applicable.'
          nullable: true
        message:
          type: string
          description: A human readable description of the event. Can contain some HTML formatting.
          nullable: true
        subject_id:
          type: integer
          description: The ID of the resource that generated the event.
          format: int64
          nullable: true
        subject_type:
          $ref: '#/components/schemas/EventSubjectType'
        verb:
          type: string
          description: 'The type of event that occurred. Different resources generate different types of event. See the [Resources](#resources-that-can-create-events) section for a list of possible verbs.'
          nullable: true
        author:
          type: string
          description: Undocumented by Shopify
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    EventItem:
      required:
        - event
      type: object
      properties:
        event:
          $ref: '#/components/schemas/Event'
      additionalProperties: { }
    EventList:
      required:
        - events
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      additionalProperties: { }
    EventSubjectType:
      enum:
        - Article
        - Blog
        - Collection
        - Comment
        - Order
        - Page
        - PriceRule
        - Product
        - ApiPermission
      type: string
      additionalProperties: { }
    UpdateWebhook:
      required:
        - id
        - topic
      type: object
      properties:
        address:
          type: string
          description: Destination URI to which the webhook subscription should send the POST request when an event occurs.
          nullable: true
        api_version:
          type: string
          description: The Admin API version that Shopify uses to serialize webhook events. This value is inherited from the app that created the webhook subscription.
          nullable: true
        fields:
          type: array
          items:
            type: string
          description: 'An optional array of top-level resource fields that should be serialized and sent in the POST request. If absent, all fields will be sent.'
          nullable: true
        format:
          $ref: '#/components/schemas/WebhookFormat'
        metafield_namespaces:
          type: array
          items:
            type: string
          description: Optional array of namespaces for any metafields that should be included with each webhook.
          nullable: true
        private_metafield_namespaces:
          type: array
          items:
            type: string
          description: Optional array of namespaces for any private metafields that should be included with each webhook.
          nullable: true
        topic:
          $ref: '#/components/schemas/WebhookTopic'
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: false
    UpdateWebhookRequest:
      required:
        - webhook
      type: object
      properties:
        webhook:
          $ref: '#/components/schemas/UpdateWebhook'
      additionalProperties: false
    Webhook:
      required:
        - id
        - topic
      type: object
      properties:
        address:
          type: string
          description: Destination URI to which the webhook subscription should send the POST request when an event occurs.
          nullable: true
        api_version:
          type: string
          description: The Admin API version that Shopify uses to serialize webhook events. This value is inherited from the app that created the webhook subscription.
          nullable: true
        fields:
          type: array
          items:
            type: string
          description: 'An optional array of top-level resource fields that should be serialized and sent in the POST request. If absent, all fields will be sent.'
          nullable: true
        format:
          $ref: '#/components/schemas/WebhookFormat'
        metafield_namespaces:
          type: array
          items:
            type: string
          description: Optional array of namespaces for any metafields that should be included with each webhook.
          nullable: true
        private_metafield_namespaces:
          type: array
          items:
            type: string
          description: Optional array of namespaces for any private metafields that should be included with each webhook.
          nullable: true
        topic:
          $ref: '#/components/schemas/WebhookTopic'
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    WebhookFormat:
      enum:
        - JSON
        - XML
      type: string
      additionalProperties: { }
    WebhookItem:
      required:
        - webhook
      type: object
      properties:
        webhook:
          $ref: '#/components/schemas/Webhook'
      additionalProperties: { }
    WebhookList:
      required:
        - webhooks
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
      additionalProperties: { }
    WebhookTopic:
      enum:
        - app/uninstalled
        - bulk_operations/finish
        - carts/create
        - carts/update
        - checkouts/create
        - checkouts/delete
        - checkouts/update
        - collection_listings/add
        - collection_listings/remove
        - collection_listings/update
        - collections/create
        - collections/delete
        - collections/update
        - customer_groups/create
        - customer_groups/delete
        - customer_groups/update
        - customer_payment_methods/create
        - customer_payment_methods/revoke
        - customer_payment_methods/update
        - customers/create
        - customers/delete
        - customers/disable
        - customers/enable
        - customers/update
        - customers_marketing_consent/update
        - disputes/create
        - disputes/update
        - domains/create
        - domains/destroy
        - domains/update
        - draft_orders/create
        - draft_orders/delete
        - draft_orders/update
        - fulfillment_events/create
        - fulfillment_events/delete
        - fulfillments/create
        - fulfillments/update
        - inventory_items/create
        - inventory_items/delete
        - inventory_items/update
        - inventory_levels/connect
        - inventory_levels/disconnect
        - inventory_levels/update
        - locales/create
        - locales/update
        - locations/create
        - locations/delete
        - locations/update
        - order_transactions/create
        - orders/cancelled
        - orders/create
        - orders/delete
        - orders/edited
        - orders/fulfilled
        - orders/paid
        - orders/partially_fulfilled
        - orders/updated
        - product_listings/add
        - product_listings/remove
        - product_listings/update
        - products/create
        - products/delete
        - products/update
        - profiles/create
        - profiles/delete
        - profiles/update
        - refunds/create
        - selling_plan_groups/create
        - selling_plan_groups/delete
        - selling_plan_groups/update
        - shop/update
        - subscription_billing_attempts/challenged
        - subscription_billing_attempts/failure
        - subscription_billing_attempts/success
        - subscription_contracts/create
        - subscription_contracts/update
        - tender_transactions/create
        - themes/create
        - themes/delete
        - themes/publish
        - themes/update
      type: string
      additionalProperties: { }
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
security:
  - ApiKey: [ ]
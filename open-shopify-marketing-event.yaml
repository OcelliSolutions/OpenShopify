openapi: 3.0.1
info:
  title: Marketing Event
  description: Marketing Event
  version: '2022-04'
servers:
  - url: 'https://{store_name}.myshopify.com/admin/api/{api_version}'
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
      api_version:
        default: '2022-04'
        description: The api version.
  - url: 'https://{store_name}.myshopify.com/admin'
    description: Some endpoints do not use the standard routing. This is an alternate.
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
paths:
  /marketing_events.json:
    get:
      tags:
        - MarketingEvent
      summary: Retrieves a list of all marketing events
      operationId: ListMarketingEvents
      parameters:
        - name: limit
          in: query
          description: The amount of results to return.
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          description: A unique ID used to access a certain page of results.
          schema:
            type: string
        - name: offset
          in: query
          description: The number of marketing events to skip.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventList'
    post:
      tags:
        - MarketingEvent
      summary: Creates a marketing event
      operationId: CreateMarketingEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMarketingEventRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateMarketingEventRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventItem'
        '400':
          description: Bad Request
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventError'
  /marketing_events/count.json:
    get:
      tags:
        - MarketingEvent
      summary: Retrieves a count of all marketing events
      operationId: CountMarketingEvents
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/marketing_events/{marketing_event_id}.json':
    get:
      tags:
        - MarketingEvent
      summary: Retrieves a single marketing event
      operationId: GetMarketingEvent
      parameters:
        - name: marketing_event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventItem'
    put:
      tags:
        - MarketingEvent
      summary: Updates a marketing event
      operationId: UpdateMarketingEvent
      parameters:
        - name: marketing_event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMarketingEventRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateMarketingEventRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventItem'
    delete:
      tags:
        - MarketingEvent
      summary: Deletes a marketing event
      operationId: DeleteMarketingEvent
      parameters:
        - name: marketing_event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  '/marketing_events/{marketing_event_id}/engagements.json':
    post:
      tags:
        - MarketingEvent
      summary: Creates marketing engagements on a marketing event
      operationId: CreateMarketingEngagementsOnMarketingEvent
      parameters:
        - name: marketing_event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: occurred_on
          in: query
          description: 'The date that these engagements occurred on, in the format “YYYY-MM-DD”.'
          schema:
            type: string
        - name: ad_spend
          in: query
          description: 'The total ad spend for the day, if the marketing event is a paid ad with a daily spend.'
          schema:
            type: string
        - name: clicks_count
          in: query
          description: The total number of clicks on the marketing event for the day.
          schema:
            type: string
        - name: comments_count
          in: query
          description: The total number of comments for the day.
          schema:
            type: string
        - name: favorites_count
          in: query
          description: The total number of favorites for the day.
          schema:
            type: string
        - name: impressions_count
          in: query
          description: 'The total number of impressions for the day. An impression occurs when the marketing event is served to a customer, either as a email or through a marketing channel.'
          schema:
            type: string
        - name: is_cumulative
          in: query
          description: Whether the engagements are reported as lifetime values rather than daily totals.
          schema:
            type: string
        - name: shares_count
          in: query
          description: The total number of shares for the day.
          schema:
            type: string
        - name: views_count
          in: query
          description: 'The total number of views for the day. A view occurs when a customer reads the marketing event that was served to them, for example, if the customer opens the email or spends time looking at a Facebook post.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMarketingEventRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateMarketingEventRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngagementList'
components:
  schemas:
    BudgetType:
      enum:
        - daily
        - lifetime
      type: string
      additionalProperties: { }
    CountItem:
      type: object
      properties:
        count:
          type: integer
          format: int32
      additionalProperties: { }
    CreateMarketingEvent:
      type: object
      properties:
        remote_id:
          type: string
          description: An optional remote identifier for a marketing event. The remote identifier lets Shopify validate engagement data.
          nullable: true
        event_type:
          $ref: '#/components/schemas/EventType'
        marketing_channel:
          $ref: '#/components/schemas/MarketingChannel'
        paid:
          type: boolean
          description: Whether the event is paid or organic.
          nullable: true
        referring_domain:
          type: string
          description: The destination domain of the marketing event. Required if the `marketing_channel` is set to `search` or `social`.
          nullable: true
        budget:
          type: string
          description: The budget of the ad campaign.
          nullable: true
        currency:
          type: string
          description: The currency for the budget. Required if `budget` is specified.
          nullable: true
        budget_type:
          $ref: '#/components/schemas/BudgetType'
        started_at:
          type: string
          description: The time when the marketing action was started.
          format: date-time
          nullable: true
        scheduled_to_end_at:
          type: string
          description: 'For events with a duration, the time when the event was scheduled to end.'
          format: date-time
          nullable: true
        ended_at:
          type: string
          description: 'For events with a duration, the time when the event actually ended.'
          format: date-time
          nullable: true
        UTM parameters:
          type: string
          description: "The [UTM parameters](https://en.wikipedia.org/wiki/UTM_parameters) used in the links provided in the marketing event. Values must be unique and should not be url-encoded.\r\n\r\nTo do traffic or order attribution you must at least define `utm_campaign`, `utm_source`, and `utm_medium`."
          nullable: true
        description:
          type: string
          description: A description of the marketing event.
          nullable: true
        manage_url:
          type: string
          description: 'A link to manage the marketing event. In most cases, this links to the app that created the event.'
          nullable: true
        preview_url:
          type: string
          description: 'A link to the live version of the event, or to a rendered preview in the app that created it.'
          nullable: true
        marketed_resources:
          type: array
          items:
            $ref: '#/components/schemas/MarketedResource'
          description: "A list of the items that were marketed in the marketing event. Includes the `type` and `id` of each item. Valid values for `type` are: \r\n\r\n*   `product` \r\n*   `collection` \r\n*   `price_rule` \r\n*   `discount` (Will be replaced by price_rule after April 20, 2017.) \r\n*   `page` \r\n*   `article` \r\n*   `homepage` (Doesn't have an `id`.)"
          nullable: true
        utm_campaign:
          type: string
          nullable: true
        utm_source:
          type: string
          nullable: true
        utm_medium:
          type: string
          nullable: true
        marketing_activity_id:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    CreateMarketingEventRequest:
      required:
        - marketing_event
      type: object
      properties:
        marketing_event:
          $ref: '#/components/schemas/CreateMarketingEvent'
      additionalProperties: false
    Engagement:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: { }
    EngagementList:
      required:
        - engagements
      type: object
      properties:
        engagements:
          type: array
          items:
            $ref: '#/components/schemas/Engagement'
      additionalProperties: { }
    EventType:
      enum:
        - ad
        - post
        - message
        - retargeting
        - transactional
        - affiliate
        - loyalty
        - newsletter
        - abandoned_cart
      type: string
      additionalProperties: { }
    MarketedResource:
      enum:
        - product
        - collection
        - price_rule
        - page
        - article
        - homepage
      type: string
      additionalProperties: { }
    MarketingChannel:
      enum:
        - search
        - display
        - social
        - email
        - referral
      type: string
      additionalProperties: { }
    MarketingEvent:
      required:
        - id
      type: object
      properties:
        remote_id:
          type: string
          description: An optional remote identifier for a marketing event. The remote identifier lets Shopify validate engagement data.
          nullable: true
        event_type:
          $ref: '#/components/schemas/EventType'
        marketing_channel:
          $ref: '#/components/schemas/MarketingChannel'
        paid:
          type: boolean
          description: Whether the event is paid or organic.
          nullable: true
        referring_domain:
          type: string
          description: The destination domain of the marketing event. Required if the `marketing_channel` is set to `search` or `social`.
          nullable: true
        budget:
          type: string
          description: The budget of the ad campaign.
          nullable: true
        currency:
          type: string
          description: The currency for the budget. Required if `budget` is specified.
          nullable: true
        budget_type:
          $ref: '#/components/schemas/BudgetType'
        started_at:
          type: string
          description: The time when the marketing action was started.
          format: date-time
          nullable: true
        scheduled_to_end_at:
          type: string
          description: 'For events with a duration, the time when the event was scheduled to end.'
          format: date-time
          nullable: true
        ended_at:
          type: string
          description: 'For events with a duration, the time when the event actually ended.'
          format: date-time
          nullable: true
        UTM parameters:
          type: string
          description: "The [UTM parameters](https://en.wikipedia.org/wiki/UTM_parameters) used in the links provided in the marketing event. Values must be unique and should not be url-encoded.\r\n\r\nTo do traffic or order attribution you must at least define `utm_campaign`, `utm_source`, and `utm_medium`."
          nullable: true
        description:
          type: string
          description: A description of the marketing event.
          nullable: true
        manage_url:
          type: string
          description: 'A link to manage the marketing event. In most cases, this links to the app that created the event.'
          nullable: true
        preview_url:
          type: string
          description: 'A link to the live version of the event, or to a rendered preview in the app that created it.'
          nullable: true
        marketed_resources:
          type: array
          items:
            $ref: '#/components/schemas/MarketedResource'
          description: "A list of the items that were marketed in the marketing event. Includes the `type` and `id` of each item. Valid values for `type` are: \r\n\r\n*   `product` \r\n*   `collection` \r\n*   `price_rule` \r\n*   `discount` (Will be replaced by price_rule after April 20, 2017.) \r\n*   `page` \r\n*   `article` \r\n*   `homepage` (Doesn't have an `id`.)"
          nullable: true
        utm_campaign:
          type: string
          nullable: true
        utm_source:
          type: string
          nullable: true
        utm_medium:
          type: string
          nullable: true
        marketing_activity_id:
          type: integer
          format: int64
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: { }
    MarketingEventError:
      required:
        - errors
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/MarketingEventErrorDetails'
      additionalProperties: { }
    MarketingEventErrorDetails:
      type: object
      properties:
        base:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: { }
    MarketingEventItem:
      required:
        - marketing_event
      type: object
      properties:
        marketing_event:
          $ref: '#/components/schemas/MarketingEvent'
      additionalProperties: { }
    MarketingEventList:
      required:
        - marketing_events
      type: object
      properties:
        marketing_events:
          type: array
          items:
            $ref: '#/components/schemas/MarketingEvent'
      additionalProperties: { }
    UpdateMarketingEvent:
      required:
        - id
      type: object
      properties:
        remote_id:
          type: string
          description: An optional remote identifier for a marketing event. The remote identifier lets Shopify validate engagement data.
          nullable: true
        event_type:
          $ref: '#/components/schemas/EventType'
        marketing_channel:
          $ref: '#/components/schemas/MarketingChannel'
        paid:
          type: boolean
          description: Whether the event is paid or organic.
          nullable: true
        referring_domain:
          type: string
          description: The destination domain of the marketing event. Required if the `marketing_channel` is set to `search` or `social`.
          nullable: true
        budget:
          type: string
          description: The budget of the ad campaign.
          nullable: true
        currency:
          type: string
          description: The currency for the budget. Required if `budget` is specified.
          nullable: true
        budget_type:
          $ref: '#/components/schemas/BudgetType'
        started_at:
          type: string
          description: The time when the marketing action was started.
          format: date-time
          nullable: true
        scheduled_to_end_at:
          type: string
          description: 'For events with a duration, the time when the event was scheduled to end.'
          format: date-time
          nullable: true
        ended_at:
          type: string
          description: 'For events with a duration, the time when the event actually ended.'
          format: date-time
          nullable: true
        UTM parameters:
          type: string
          description: "The [UTM parameters](https://en.wikipedia.org/wiki/UTM_parameters) used in the links provided in the marketing event. Values must be unique and should not be url-encoded.\r\n\r\nTo do traffic or order attribution you must at least define `utm_campaign`, `utm_source`, and `utm_medium`."
          nullable: true
        description:
          type: string
          description: A description of the marketing event.
          nullable: true
        manage_url:
          type: string
          description: 'A link to manage the marketing event. In most cases, this links to the app that created the event.'
          nullable: true
        preview_url:
          type: string
          description: 'A link to the live version of the event, or to a rendered preview in the app that created it.'
          nullable: true
        marketed_resources:
          type: array
          items:
            $ref: '#/components/schemas/MarketedResource'
          description: "A list of the items that were marketed in the marketing event. Includes the `type` and `id` of each item. Valid values for `type` are: \r\n\r\n*   `product` \r\n*   `collection` \r\n*   `price_rule` \r\n*   `discount` (Will be replaced by price_rule after April 20, 2017.) \r\n*   `page` \r\n*   `article` \r\n*   `homepage` (Doesn't have an `id`.)"
          nullable: true
        utm_campaign:
          type: string
          nullable: true
        utm_source:
          type: string
          nullable: true
        utm_medium:
          type: string
          nullable: true
        marketing_activity_id:
          type: integer
          format: int64
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: false
    UpdateMarketingEventRequest:
      required:
        - marketing_event
      type: object
      properties:
        marketing_event:
          $ref: '#/components/schemas/UpdateMarketingEvent'
      additionalProperties: false
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
security:
  - ApiKey: [ ]
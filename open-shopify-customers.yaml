openapi: 3.0.1
info:
  title: Customers
  description: Customers
  version: '2023-04'
servers:
  - url: 'https://{store_name}.myshopify.com/admin/api/{api_version}'
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
      api_version:
        default: '2023-04'
        description: The api version.
  - url: 'https://{store_name}.myshopify.com/admin'
    description: Some endpoints do not use the standard routing. This is an alternate.
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
paths:
  /customers.json:
    get:
      tags:
        - Customer
      operationId: ListCustomers
      parameters:
        - name: created_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          schema:
            type: string
            format: date-time
        - name: fields
          in: query
          schema:
            type: string
        - name: ids
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
        - name: since_id
          in: query
          schema:
            type: integer
            format: int64
        - name: updated_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerList'
    post:
      tags:
        - Customer
      operationId: CreateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerItem'
  /customers/search.json:
    get:
      tags:
        - Customer
      operationId: SearchForCustomersThatMatchSuppliedQuery
      parameters:
        - name: fields
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
        - name: order
          in: query
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerList'
  '/customers/{customer_id}.json':
    get:
      tags:
        - Customer
      operationId: GetCustomer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerItem'
    put:
      tags:
        - Customer
      operationId: UpdateCustomer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerItem'
    delete:
      tags:
        - Customer
      summary: Delete a customer (UNDOCUMENTED)
      operationId: DeleteCustomer
      parameters:
        - name: customer_id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  '/customers/{customer_id}/account_activation_url.json':
    post:
      tags:
        - Customer
      operationId: CreateAccountActivationUrlForCustomer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountActivationBase'
  '/customers/{customer_id}/send_invite.json':
    post:
      tags:
        - Customer
      operationId: SendAccountInviteToCustomer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerInviteRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCustomerInviteRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInviteItem'
  /customers/count.json:
    get:
      tags:
        - Customer
      operationId: CountCustomers
      parameters:
        - name: created_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: created_at_min
          in: query
          schema:
            type: string
            format: date-time
        - name: updated_at_max
          in: query
          schema:
            type: string
            format: date-time
        - name: updated_at_min
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/customers/{customer_id}/orders.json':
    get:
      tags:
        - Customer
      operationId: ListOrdersThatBelongToCustomer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
  '/customers/{customer_id}/addresses.json':
    get:
      tags:
        - CustomerAddress
      operationId: ListAddressesForCustomer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressList'
    post:
      tags:
        - CustomerAddress
      operationId: CreateAddressForCustomer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressForCustomerRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAddressForCustomerRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressItem'
  '/customers/{customer_id}/addresses/{address_id}.json':
    get:
      tags:
        - CustomerAddress
      operationId: GetCustomerAddress
      parameters:
        - name: address_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressItem'
    put:
      tags:
        - CustomerAddress
      operationId: UpdateCustomerAddress
      parameters:
        - name: address_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerAddressRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerAddressRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressItem'
    delete:
      tags:
        - CustomerAddress
      operationId: DeleteAddressFromCustomersAddressList
      parameters:
        - name: address_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  '/customers/{customer_id}/addresses/set.json':
    put:
      tags:
        - CustomerAddress
      operationId: PerformBulkOperationsForMultipleCustomerAddresses
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformBulkOperationsForMultipleCustomerAddressesRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PerformBulkOperationsForMultipleCustomerAddressesRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  '/customers/{customer_id}/addresses/{address_id}/default.json':
    put:
      tags:
        - CustomerAddress
      operationId: SetDefaultAddressForCustomer
      parameters:
        - name: address_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddressItem'
  /customer_saved_searches.json:
    get:
      tags:
        - CustomerSavedSearch
      operationId: ListCustomerSavedSearches
      parameters:
        - name: fields
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
        - name: since_id
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSavedSearchList'
    post:
      tags:
        - CustomerSavedSearch
      operationId: CreateCustomerSavedSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerSavedSearchRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCustomerSavedSearchRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSavedSearchItem'
  /customer_saved_searches/count.json:
    get:
      tags:
        - CustomerSavedSearch
      operationId: CountCustomerSavedSearches
      parameters:
        - name: since_id
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/customer_saved_searches/{customer_saved_search_id}.json':
    get:
      tags:
        - CustomerSavedSearch
      operationId: GetCustomerSavedSearch
      parameters:
        - name: customer_saved_search_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSavedSearchItem'
    put:
      tags:
        - CustomerSavedSearch
      operationId: UpdateCustomerSavedSearch
      parameters:
        - name: customer_saved_search_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerSavedSearchRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerSavedSearchRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSavedSearchItem'
    delete:
      tags:
        - CustomerSavedSearch
      operationId: DeleteCustomerSavedSearch
      parameters:
        - name: customer_saved_search_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  '/customer_saved_searches/{customer_saved_search_id}/customers.json':
    get:
      tags:
        - CustomerSavedSearch
      operationId: ListCustomersByCustomerSavedSearch
      parameters:
        - name: customer_saved_search_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fields
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
        - name: order
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerList'
components:
  schemas:
    AccountActivationBase:
      type: object
      properties:
        account_activation_url:
          type: string
      additionalProperties: { }
    Address:
      required:
        - id
      type: object
      properties:
        address1:
          type: string
          description: The customer's mailing address
          nullable: true
        address2:
          type: string
          description: An additional field for the customer's mailing address.
          nullable: true
        city:
          type: string
          description: 'The customer''s city, town, or village.'
          nullable: true
        country:
          type: string
          description: The customer's country.
          nullable: true
        country_code:
          type: string
          description: The two-letter country code corresponding to the customer's country.
          nullable: true
        country_name:
          type: string
          description: The customer’s normalized country name.
          nullable: true
        company:
          type: string
          description: The customer’s company.
          nullable: true
        customer_id:
          type: integer
          description: The unique identifier for the customer.
          format: int64
          nullable: true
        first_name:
          type: string
          description: The customer’s first name.
          nullable: true
        last_name:
          type: string
          description: The customer’s last name.
          nullable: true
        name:
          type: string
          description: The customer’s first and last names.
          nullable: true
        phone:
          type: string
          description: The customer’s phone number at this address.
          nullable: true
        province:
          type: string
          description: 'The customer’s region name. Typically a province, a state, or a prefecture.'
          nullable: true
        province_code:
          type: string
          description: The two-letter code for the customer’s region.
          nullable: true
        zip:
          type: string
          description: 'The customer’s postal code, also known as zip, postcode, Eircode, etc.'
          nullable: true
        default:
          type: boolean
          description: Indicates whether this address is the default address.
          nullable: true
        latitude:
          type: number
          format: decimal
          nullable: true
        longitude:
          type: number
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
      additionalProperties: { }
    AddressList:
      required:
        - addresses
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
      additionalProperties: { }
    ClientDetails:
      type: object
      properties:
        accept_language:
          type: string
          description: Shopify does not offer documentation for this field.
          nullable: true
        browser_height:
          type: string
          description: 'The browser screen height in pixels, if available.'
          nullable: true
        browser_ip:
          type: string
          description: The browser IP address.
          nullable: true
        browser_width:
          type: string
          description: 'The browser screen width in pixels, if available.'
          nullable: true
        session_hash:
          type: string
          description: A hash of the session.
          nullable: true
        user_agent:
          type: string
          description: The browser's user agent string.
          nullable: true
      additionalProperties: { }
    CountItem:
      type: object
      properties:
        count:
          type: integer
          format: int32
      additionalProperties: { }
    CreateAccountActivationUrlForCustomerRequest:
      type: object
      properties:
        account_activation_url:
          type: string
      additionalProperties: false
    CreateAddressForCustomerRequest:
      required:
        - customer_address
      type: object
      properties:
        customer_address:
          $ref: '#/components/schemas/CreateCustomerAddress'
      additionalProperties: false
    CreateCustomer:
      type: object
      properties:
        accepts_marketing:
          type: boolean
          description: 'As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.Whether the customer has consented to receive marketing material by email.'
          nullable: true
          deprecated: true
        accepts_marketing_updated_at:
          type: string
          description: 'As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format)when the customer consented or objected to receiving marketing material by email. Set this value wheneverthe customer consents or objects to marketing materials.'
          format: date-time
          nullable: true
          deprecated: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/CreateCustomerAddress'
          description: A list of addresses for the customer.
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency that the customer used when they paid for their last order. Defaults to the shop currency. Returns the shop currency for test orders.'
          nullable: true
        default_address:
          $ref: '#/components/schemas/CreateCustomerAddress'
        email:
          type: string
          description: The unique email address of the customer. Attempting to assign the same email address to multiple customers returns an error.
          nullable: true
        email_marketing_consent:
          type: string
          description: "The marketing consent information when the customer consented to receiving marketing material by email. The `email` property is required to create a customer with email consent information and to update a customer for email consent that doesn't have an email recorded. The customer must have a unique email address associated to the record. The email marketing consent has the following properties: \r\n\r\n*   **state**: The current email marketing state for the customer. \r\n*   **opt_in_level**: The marketing subscription opt-in level, as described in the [M3AAWG Sender Best Common Practices](https://www.m3aawg.org/sites/default/files/document/M3AAWG_Senders_BCP_Ver3-2015-02.pdf), that the customer gave when they consented to receive marketing material by email. \r\n*   **consent_updated_at**: The date and time when the customer consented to receive marketing material by email. If no date is provided, then the date and time when the consent information was sent is used."
          nullable: true
        first_name:
          type: string
          description: The customer's first name.
          nullable: true
        last_name:
          type: string
          description: The customer's last name.
          nullable: true
        last_order_id:
          type: integer
          description: The ID of the customer's last order.
          format: int64
          nullable: true
        last_order_name:
          type: string
          description: The name of the customer's last order. This is directly related to the `name` field on the Order resource.
          nullable: true
        metafield:
          type: string
          description: 'Attaches additional metadata to a shop''s resources: * **key** (required): An identifier for the metafield (maximum of 30 characters). * **namespace**(required): A container for a set of metadata (maximum of 20 characters). Namespaces help distinguish between metadata that you created and metadata created by another individual with a similar namespace. * **value** (required): Information to be stored as metadata. * **type** (required): The type. Refer to the [full list of types](/apps/metafields/types). * **description** (optional): Additional information about the metafield.'
          nullable: true
        marketing_opt_in_level:
          type: string
          description: "As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.The marketing subscription opt-in level, as described in the [M3AAWG Sender Best Common Practices](https://www.m3aawg.org/sites/default/files/document/M3AAWG_Senders_BCP_Ver3-2015-02.pdf), that the customer gave when they consented to receive marketing material by email.If the customer does not accept email marketing, then this property will be set to `null`.Valid values:\r\n\r\n*   `single_opt_in` \r\n*   `confirmed_opt_in` \r\n*   `unknown`"
          nullable: true
          deprecated: true
        multipass_identifier:
          type: string
          description: 'A unique identifier for the customer that''s used with [Multipass login](/api/multipass).'
          nullable: true
        note:
          type: string
          description: A note about the customer.
          nullable: true
        orders_count:
          type: integer
          description: The number of orders associated with this customer. Test and archived orders aren't counted.
          format: int32
          nullable: true
        password:
          type: string
          description: The customer's password.
          nullable: true
        password_confirmation:
          type: string
          description: The customer's password that's confirmed.
          nullable: true
        phone:
          type: string
          description: "The unique phone number ([E.164 format](https://en.wikipedia.org/wiki/E.164)) for this customer. Attempting to assign the same phone number to multiple customers returns an error. The property can be set using different formats, but each format must represent a number that can be dialed from anywhere in the world. The following formats are all valid:\r\n\r\n*   6135551212 \r\n*   +16135551212 \r\n*   (613)555-1212 \r\n*   +1 613-555-1212"
          nullable: true
        sms_marketing_consent:
          type: string
          description: "The marketing consent information when the customer consented to receiving marketing material by SMS. The `phone` property is required to create a customer with SMS consent information and to perform an SMS update on a customer that doesn't have a phone number recorded. The customer must have a unique phone number associated to the record. The SMS marketing consent has the following properties: \r\n\r\n*   **state**: The current SMS marketing state for the customer. \r\n*   **opt_in_level**: The marketing subscription opt-in level, as described in the [ M3AAWG Sender Best Common Practices](https://www.m3aawg.org/sites/default/files/document/M3AAWG_Senders_BCP_Ver3-2015-02.pdf), that the customer gave when they consented to receive marketing material by SMS. \r\n*   **consent_updated_at**: The date and time when the customer consented to receive marketing material by SMS. If no date is provided, then the date and time when the consent information was sent is used. \r\n*   **consent_collected_from**: The source for whether the customer has consented to receive marketing material by SMS."
          nullable: true
        state:
          type: string
          description: 'The state of the customer''s account with a shop. Default value: `disabled`. Valid values: * **disabled**: The customer doesn''t have an active account. Customer accounts can be disabled from the Shopify admin at any time. * **invited**: The customer has received an email invite to create an account. * **enabled**: The customer has created an account. * **declined**: The customer declined the email invite to create an account.'
          nullable: true
        tags:
          type: string
          description: 'Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values. A customer can have up to 250 tags. Each tag can have up to 255 characters.'
          nullable: true
        tax_exempt:
          type: boolean
          description: 'Whether the customer is exempt from paying taxes on their order. If `true`, then taxes won''t be applied to an order at checkout. If `false`, then taxes will be applied at checkout.'
          nullable: true
        tax_exemptions:
          type: array
          items:
            type: string
          description: 'Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only. Valid values: * **EXEMPT_ALL**: This customer is exempt from all Canadian taxes. * **CA_STATUS_CARD_EXEMPTION**: This customer is exempt from specific taxes for holding a valid STATUS_CARD_EXEMPTION in Canada. * **CA_DIPLOMAT_EXEMPTION**: This customer is exempt from specific taxes for holding a valid DIPLOMAT_EXEMPTION in Canada. * **CA_BC_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in British Columbia. * **CA_MB_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Manitoba. * **CA_SK_RESELLER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid RESELLER_EXEMPTION in Saskatchewan. * **CA_BC_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in British Columbia. * **CA_MB_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Manitoba. * **CA_NS_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Nova Scotia. * **CA_PE_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Prince Edward Island. * **CA_SK_COMMERCIAL_FISHERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid COMMERCIAL_FISHERY_EXEMPTION in Saskatchewan. * **CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in British Columbia. * **CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PRODUCTION_AND_MACHINERY_EXEMPTION in Saskatchewan. * **CA_BC_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_SUB_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid SUB_CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_BC_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in British Columbia. * **CA_SK_CONTRACTOR_EXEMPTION**: This customer is exempt from specific taxes for holding a valid CONTRACTOR_EXEMPTION in Saskatchewan. * **CA_ON_PURCHASE_EXEMPTION**: This customer is exempt from specific taxes for holding a valid PURCHASE_EXEMPTION in Ontario. * **CA_MB_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Manitoba. * **CA_NS_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Nova Scotia. * **CA_SK_FARMER_EXEMPTION**: This customer is exempt from specific taxes for holding a valid FARMER_EXEMPTION in Saskatchewan.'
          nullable: true
        total_spent:
          type: number
          description: The total amount of money that the customer has spent across their order history.
          format: decimal
          nullable: true
        verified_email:
          type: boolean
          description: Whether the customer has verified their email address.
          nullable: true
        send_email_invite:
          type: boolean
          description: Whether an email invite should be sent to the new customer. Default is null.
          nullable: true
        send_email_welcome:
          type: boolean
          description: Whether a welcome email should be sent to the new customer. Default is null.
          nullable: true
      additionalProperties: false
    CreateCustomerAddress:
      type: object
      properties:
        address1:
          type: string
          description: The customer's mailing address
          nullable: true
        address2:
          type: string
          description: An additional field for the customer's mailing address.
          nullable: true
        city:
          type: string
          description: 'The customer''s city, town, or village.'
          nullable: true
        country:
          type: string
          description: The customer's country.
          nullable: true
        country_code:
          type: string
          description: The two-letter country code corresponding to the customer's country.
          nullable: true
        country_name:
          type: string
          description: The customer’s normalized country name.
          nullable: true
        company:
          type: string
          description: The customer’s company.
          nullable: true
        customer_id:
          type: integer
          description: The unique identifier for the customer.
          format: int64
          nullable: true
        first_name:
          type: string
          description: The customer’s first name.
          nullable: true
        last_name:
          type: string
          description: The customer’s last name.
          nullable: true
        name:
          type: string
          description: The customer’s first and last names.
          nullable: true
        phone:
          type: string
          description: The customer’s phone number at this address.
          nullable: true
        province:
          type: string
          description: 'The customer’s region name. Typically a province, a state, or a prefecture.'
          nullable: true
        province_code:
          type: string
          description: The two-letter code for the customer’s region.
          nullable: true
        zip:
          type: string
          description: 'The customer’s postal code, also known as zip, postcode, Eircode, etc.'
          nullable: true
        default:
          type: boolean
          description: Indicates whether this address is the default address.
          nullable: true
        latitude:
          type: number
          format: decimal
          nullable: true
        longitude:
          type: number
          format: decimal
          nullable: true
      additionalProperties: false
    CreateCustomerInvite:
      type: object
      properties:
        to:
          type: string
          description: The email address of the customer to be invited
          nullable: true
        from:
          type: string
          description: The sender of the email
          nullable: true
        subject:
          type: string
          description: the subject
          nullable: true
        custom_message:
          type: string
          description: a custom message to include
          nullable: true
        bcc:
          type: array
          items:
            type: string
          description: blind copy addresses
          nullable: true
      additionalProperties: false
    CreateCustomerInviteRequest:
      required:
        - customer_invite
      type: object
      properties:
        customer_invite:
          $ref: '#/components/schemas/CreateCustomerInvite'
      additionalProperties: false
    CreateCustomerRequest:
      required:
        - customer
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/CreateCustomer'
      additionalProperties: false
    CreateCustomerSavedSearch:
      type: object
      properties:
        name:
          type: string
          description: The name given by the shop owner to the customer saved search.
          nullable: true
        query:
          type: string
          description: 'The set of conditions that determines which customers are returned by the saved search. For more information, see [*Customer saved search queries*](#customer-saved-search-queries).'
          nullable: true
      additionalProperties: false
    CreateCustomerSavedSearchRequest:
      required:
        - customer_saved_search
      type: object
      properties:
        customer_saved_search:
          $ref: '#/components/schemas/CreateCustomerSavedSearch'
      additionalProperties: false
    CurrencyExchangeAdjustment:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        adjustment:
          type: number
          description: The difference between the amounts on the associated transaction and the parent transaction.
          format: decimal
          nullable: true
        original_amount:
          type: number
          description: The amount of the parent transaction in the shop currency.
          format: decimal
          nullable: true
        final_amount:
          type: number
          description: The amount of the associated transaction in the shop currency.
          format: decimal
          nullable: true
        currency:
          type: string
          description: The shop currency.
          nullable: true
      additionalProperties: { }
    Customer:
      required:
        - id
      type: object
      properties:
        accepts_marketing:
          type: boolean
          description: 'As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.Whether the customer has consented to receive marketing material by email.'
          nullable: true
          deprecated: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAddress'
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency that the customer used when they paid for their last order. Defaults to the shop currency. Returns the shop currency for test orders.'
          nullable: true
        default_address:
          $ref: '#/components/schemas/CustomerAddress'
        email:
          type: string
          description: The unique email address of the customer. Attempting to assign the same email address to multiple customers returns an error.
          nullable: true
        email_marketing_consent:
          $ref: '#/components/schemas/EmailMarketingConsent'
        first_name:
          type: string
          description: The customer's first name.
          nullable: true
        last_name:
          type: string
          description: The customer's last name.
          nullable: true
        last_order_id:
          type: integer
          description: The ID of the customer's last order.
          format: int64
          nullable: true
        last_order_name:
          type: string
          description: The name of the customer's last order. This is directly related to the `name` field on the Order resource.
          nullable: true
        metafield:
          type: string
          description: 'Attaches additional metadata to a shop''s resources: * **key** (required): An identifier for the metafield (maximum of 30 characters). * **namespace**(required): A container for a set of metadata (maximum of 20 characters). Namespaces help distinguish between metadata that you created and metadata created by another individual with a similar namespace. * **value** (required): Information to be stored as metadata. * **type** (required): The type. Refer to the [full list of types](/apps/metafields/types). * **description** (optional): Additional information about the metafield.'
          nullable: true
        marketing_opt_in_level:
          type: string
          description: "As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.The marketing subscription opt-in level, as described in the [M3AAWG Sender Best Common Practices](https://www.m3aawg.org/sites/default/files/document/M3AAWG_Senders_BCP_Ver3-2015-02.pdf), that the customer gave when they consented to receive marketing material by email.If the customer does not accept email marketing, then this property will be set to `null`.Valid values:\r\n\r\n*   `single_opt_in` \r\n*   `confirmed_opt_in` \r\n*   `unknown`"
          nullable: true
          deprecated: true
        multipass_identifier:
          type: string
          description: 'A unique identifier for the customer that''s used with [Multipass login](/api/multipass).'
          nullable: true
        note:
          type: string
          description: A note about the customer.
          nullable: true
        orders_count:
          type: integer
          description: The number of orders associated with this customer. Test and archived orders aren't counted.
          format: int32
          nullable: true
        password:
          type: string
          description: The customer's password.
          nullable: true
        password_confirmation:
          type: string
          description: The customer's password that's confirmed.
          nullable: true
        phone:
          type: string
          description: "The unique phone number ([E.164 format](https://en.wikipedia.org/wiki/E.164)) for this customer. Attempting to assign the same phone number to multiple customers returns an error. The property can be set using different formats, but each format must represent a number that can be dialed from anywhere in the world. The following formats are all valid:\r\n\r\n*   6135551212 \r\n*   +16135551212 \r\n*   (613)555-1212 \r\n*   +1 613-555-1212"
          nullable: true
        sms_marketing_consent:
          $ref: '#/components/schemas/SmsMarketingConsent'
        state:
          $ref: '#/components/schemas/CustomerState'
        tags:
          type: string
          description: 'Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values. A customer can have up to 250 tags. Each tag can have up to 255 characters.'
          nullable: true
        tax_exempt:
          type: boolean
          description: 'Whether the customer is exempt from paying taxes on their order. If `true`, then taxes won''t be applied to an order at checkout. If `false`, then taxes will be applied at checkout.'
          nullable: true
        tax_exemptions:
          type: array
          items:
            $ref: '#/components/schemas/CustomerTaxExemptions'
          nullable: true
        total_spent:
          type: number
          description: The total amount of money that the customer has spent across their order history.
          format: decimal
          nullable: true
        verified_email:
          type: boolean
          description: Whether the customer has verified their email address.
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.Customer. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.Customer response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.Customer metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        accepts_marketing_updated_at:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    CustomerAddress:
      required:
        - id
      type: object
      properties:
        address1:
          type: string
          description: The customer's mailing address
          nullable: true
        address2:
          type: string
          description: An additional field for the customer's mailing address.
          nullable: true
        city:
          type: string
          description: 'The customer''s city, town, or village.'
          nullable: true
        country:
          type: string
          description: The customer's country.
          nullable: true
        country_code:
          type: string
          description: The two-letter country code corresponding to the customer's country.
          nullable: true
        country_name:
          type: string
          description: The customer’s normalized country name.
          nullable: true
        company:
          type: string
          description: The customer’s company.
          nullable: true
        customer_id:
          type: integer
          description: The unique identifier for the customer.
          format: int64
          nullable: true
        first_name:
          type: string
          description: The customer’s first name.
          nullable: true
        last_name:
          type: string
          description: The customer’s last name.
          nullable: true
        name:
          type: string
          description: The customer’s first and last names.
          nullable: true
        phone:
          type: string
          description: The customer’s phone number at this address.
          nullable: true
        province:
          type: string
          description: 'The customer’s region name. Typically a province, a state, or a prefecture.'
          nullable: true
        province_code:
          type: string
          description: The two-letter code for the customer’s region.
          nullable: true
        zip:
          type: string
          description: 'The customer’s postal code, also known as zip, postcode, Eircode, etc.'
          nullable: true
        default:
          type: boolean
          description: Indicates whether this address is the default address.
          nullable: true
        latitude:
          type: number
          format: decimal
          nullable: true
        longitude:
          type: number
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
      additionalProperties: { }
    CustomerAddressItem:
      required:
        - customer_address
      type: object
      properties:
        customer_address:
          $ref: '#/components/schemas/CustomerAddress'
      additionalProperties: { }
    CustomerInvite:
      required:
        - id
      type: object
      properties:
        to:
          type: string
          description: The email address of the customer to be invited
          nullable: true
        from:
          type: string
          description: The sender of the email
          nullable: true
        subject:
          type: string
          description: the subject
          nullable: true
        custom_message:
          type: string
          description: a custom message to include
          nullable: true
        bcc:
          type: array
          items:
            type: string
          description: blind copy addresses
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    CustomerInviteItem:
      required:
        - customer_invite
      type: object
      properties:
        customer_invite:
          $ref: '#/components/schemas/CustomerInvite'
      additionalProperties: { }
    CustomerItem:
      required:
        - customer
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
      additionalProperties: { }
    CustomerList:
      required:
        - customers
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
      additionalProperties: { }
    CustomerSavedSearch:
      required:
        - id
      type: object
      properties:
        name:
          type: string
          description: The name given by the shop owner to the customer saved search.
          nullable: true
        query:
          type: string
          description: 'The set of conditions that determines which customers are returned by the saved search. For more information, see [*Customer saved search queries*](#customer-saved-search-queries).'
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    CustomerSavedSearchItem:
      required:
        - customer_saved_search
      type: object
      properties:
        customer_saved_search:
          $ref: '#/components/schemas/CustomerSavedSearch'
      additionalProperties: { }
    CustomerSavedSearchList:
      required:
        - customer_saved_searches
      type: object
      properties:
        customer_saved_searches:
          type: array
          items:
            $ref: '#/components/schemas/CustomerSavedSearch'
      additionalProperties: { }
    CustomerState:
      enum:
        - disabled
        - invited
        - enabled
        - declined
      type: string
      additionalProperties: { }
    CustomerTaxExemptions:
      enum:
        - EXEMPT_ALL
        - CA_STATUS_CARD_EXEMPTION
        - CA_DIPLOMAT_EXEMPTION
        - CA_BC_RESELLER_EXEMPTION
        - CA_MB_RESELLER_EXEMPTION
        - CA_SK_RESELLER_EXEMPTION
        - CA_BC_COMMERCIAL_FISHERY_EXEMPTION
        - CA_MB_COMMERCIAL_FISHERY_EXEMPTION
        - CA_NS_COMMERCIAL_FISHERY_EXEMPTION
        - CA_PE_COMMERCIAL_FISHERY_EXEMPTION
        - CA_SK_COMMERCIAL_FISHERY_EXEMPTION
        - CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION
        - CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION
        - CA_BC_SUB_CONTRACTOR_EXEMPTION
        - CA_SK_SUB_CONTRACTOR_EXEMPTION
        - CA_BC_CONTRACTOR_EXEMPTION
        - CA_SK_CONTRACTOR_EXEMPTION
        - CA_ON_PURCHASE_EXEMPTION
        - CA_MB_FARMER_EXEMPTION
        - CA_NS_FARMER_EXEMPTION
        - CA_SK_FARMER_EXEMPTION
      type: string
      additionalProperties: { }
    DiscountAllocation:
      type: object
      properties:
        amount:
          type: string
          description: The discount amount allocated to the line (not sure why it is a string)
          nullable: true
        discount_application_index:
          type: integer
          description: The index of the associated discount application in the order's discount_applications list.
          format: int64
        amount_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    DiscountApplication:
      type: object
      properties:
        type:
          type: string
          description: "The discount application type. Valid values:\r\nmanual: The discount was manually applied by the merchant(for example, by using an app or creating a draft order).\r\nscript: The discount was applied by a Shopify Script.\r\ndiscount_code: The discount was applied by a discount code."
          nullable: true
        code:
          type: string
          description: The discount code that was used to apply the discount. Available only for discount code applications.
          nullable: true
        title:
          type: string
          description: 'The title of the discount application, as defined by the merchant. Available only for manual discount applications.'
          nullable: true
        description:
          type: string
          description: 'The description of the discount application, as defined by the merchant or the Shopify Script. Available only for manual and script discount applications.'
          nullable: true
        value:
          type: string
          description: "The value of the discount application as a decimal. This represents the intention of the discount application.\r\nFor example, if the intent was to apply a 20% discount, then the value will be 20.0.\r\nIf the intent was to apply a $15 discount, then the value will be 15.0."
          nullable: true
        value_type:
          type: string
          description: "The type of the value. Valid values:\r\nfixed_amount: A fixed amount discount value in the currency of the order.\r\npercentage: A percentage discount value."
          nullable: true
        allocation_method:
          type: string
          description: "The method by which the discount application value has been allocated to entitled lines. Valid values:\r\nacross: The value is spread across all entitled lines.\r\neach: The value is applied onto every entitled line.\r\none: The value is applied onto a single line."
          nullable: true
        target_selection:
          type: string
          description: "The lines on the order, of the type defined by target_type, that the discount is allocated over. Valid values:\r\nall: The discount is allocated onto all lines,\r\nentitled: The discount is allocated only onto lines it is entitled for.\r\nexplicit: The discount is allocated onto explicitly selected lines."
          nullable: true
        target_type:
          type: string
          description: "The type of line on the order that the discount is applicable on. Valid values:\r\nline_item: The discount applies to line items.\r\nshipping_line: The discount applies to shipping lines."
          nullable: true
      additionalProperties: { }
    DiscountCode:
      type: object
      properties:
        code:
          type: string
          description: "The case-insensitive discount code that customers use at checkout. (maximum: 255 characters)\r\n <div class=\"note note-caution\"> \r\n\r\nUse the same value for `code` as the `title` property of the associated [price rule](/docs/admin-api/rest/reference/discounts/pricerule/#title-property).\r\n </div>"
          nullable: true
        price_rule_id:
          type: integer
          description: The ID for the price rule that this discount code belongs to.
          format: int64
          nullable: true
        usage_count:
          type: integer
          description: The number of times that the discount code has been redeemed.
          format: int32
          nullable: true
        errors:
          $ref: '#/components/schemas/DiscountCodeErrors'
        amount:
          type: string
          description: The amount of the discount.
          nullable: true
        type:
          $ref: '#/components/schemas/DiscountCodeType'
        id:
          type: integer
          format: int64
          nullable: true
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    DiscountCodeErrors:
      type: object
      properties:
        code:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: { }
    DiscountCodeType:
      enum:
        - percentage
        - shipping
        - fixed_amount
        - none
      type: string
      additionalProperties: { }
    EmailMarketingConsent:
      type: object
      properties:
        state:
          type: string
          description: The current email marketing state for the customer.
          nullable: true
        opt_in_level:
          type: string
          description: 'The marketing subscription opt-in level, as described in the M3AAWG Sender Best Common Practices, that the customer gave when they consented to receive marketing material by email.'
          nullable: true
        consent_updated_at:
          type: string
          description: 'The date and time when the customer consented to receive marketing material by email. If no date is provided, then the date and time when the consent information was sent is used.'
          format: date-time
          nullable: true
      additionalProperties: { }
    ExtendedAuthorizationAttributes:
      type: object
      properties:
        standard_authorization_expires_at:
          type: string
          description: 'The date and time (ISO 8601 format) when the standard authorization period expires. After expiry, an extended authorization fee is applied upon capturing the payment.'
          format: date-time
          nullable: true
        extended_authorization_expires_at:
          type: string
          description: 'The date and time (ISO 8601 format) when the extended authorization period expires. After expiry, the merchant can''t capture the payment.'
          format: date-time
          nullable: true
      additionalProperties: { }
    Fulfillment:
      required:
        - id
      type: object
      properties:
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          nullable: true
        location_id:
          type: integer
          description: 'The unique identifier of the location that the fulfillment was processed at. To find the ID of the location, use the [Location resource](/docs/admin-api/rest/reference/inventory/location).'
          format: int64
          nullable: true
        name:
          type: string
          description: 'The uniquely identifying fulfillment name, consisting of two parts separated by a `.`. The first part represents the order name and the second part represents the fulfillment number. The fulfillment number automatically increments depending on how many fulfillments are in an order (e.g. `#1001.1`, `#1001.2`).'
          nullable: true
        notify_customer:
          type: boolean
          description: 'Whether the customer should be notified.If set to `true`, then an email will be sent when the fulfillment is created or updated.The default value is `false`.'
          nullable: true
        order_id:
          type: integer
          description: The unique numeric identifier for the order.
          format: int64
          nullable: true
        origin_address:
          $ref: '#/components/schemas/Address'
        receipt:
          $ref: '#/components/schemas/Receipt'
        service:
          type: string
          description: The fulfillment service associated with the fulfillment.
          nullable: true
        shipment_status:
          $ref: '#/components/schemas/FulfillmentShipmentStatus'
        status:
          $ref: '#/components/schemas/FulfillmentStatus'
        tracking_company:
          type: string
          description: "The name of the tracking company. \r\n\r\n For the tracking company names from the [list below](#supported-tracking-companies) Shopify automatically builds tracking URLs for all of the provided tracking numbers, which makes the tracking numbers clickable in the interface.\r\n\r\n Additionally, for the tracking companies listed on the [Shipping Carriers help page](https://help.shopify.com/en/manual/shipping/understanding-shipping/shipping-carriers#integrated-shipping-carriers) Shopify will automatically update the fulfillment's `shipment_status` field during the fulfillment process.\r\n<aside class=\"note\"> \r\n\r\n#### Note\r\n\r\n Send the tracking company name exactly as written in the list below (capitalization matters). \r\n</aside>\r\n\r\n#### Supported tracking companies\r\n\r\n The following tracking companies display for shops located in any country:\r\n\r\n*   **4PX** \r\n*   **AGS** \r\n*   **Amazon Logistics UK** \r\n*   **Amazon Logistics US** \r\n*   **An Post** \r\n*   **Anjun Logistics** \r\n*   **APC** \r\n*   **Asendia USA** \r\n*   **Australia Post** \r\n*   **Bonshaw** \r\n*   **BPost** \r\n*   **BPost International** \r\n*   **Canada Post** \r\n*   **Canpar** \r\n*   **CDL Last Mile** \r\n*   **China Post** \r\n*   **Chronopost** \r\n*   **Chukou1** \r\n*   **Colissimo** \r\n*   **Comingle** \r\n*   **Coordinadora** \r\n*   **Correios** \r\n*   **Correos** \r\n*   **CTT** \r\n*   **CTT Express** \r\n*   **Cyprus Post** \r\n*   **Delnext** \r\n*   **Deutsche Post** \r\n*   **DHL eCommerce** \r\n*   **DHL eCommerce Asia** \r\n*   **DHL Express** \r\n*   **DoorDash** \r\n*   **DPD** \r\n*   **DPD Local** \r\n*   **DPD UK** \r\n*   **DTD Express** \r\n*   **DX** \r\n*   **Eagle** \r\n*   **Estes** \r\n*   **Evri** \r\n*   **FedEx** \r\n*   **First Global Logistics** \r\n*   **First Line** \r\n*   **FSC** \r\n*   **Fulfilla** \r\n*   **GLS** \r\n*   **Guangdong Weisuyi Information Technology (WSE)** \r\n*   **Heppner Internationale Spedition GmbH & Co.** \r\n*   **Iceland Post** \r\n*   **IDEX** \r\n*   **Israel Post** \r\n*   **Japan Post (EN)** \r\n*   **Japan Post (JA)** \r\n*   **La Poste** \r\n*   **Lasership** \r\n*   **Latvia Post** \r\n*   **Lietuvos Paštas** \r\n*   **Logisters** \r\n*   **Lone Star Overnight** \r\n*   **M3 Logistics** \r\n*   **Meteor Space** \r\n*   **Mondial Relay** \r\n*   **New Zealand Post** \r\n*   **NinjaVan** \r\n*   **North Russia Supply Chain (Shenzhen) Co.** \r\n*   **OnTrac** \r\n*   **Packeta** \r\n*   **Pago Logistics** \r\n*   **Ping An Da Tengfei Express** \r\n*   **Pitney Bowes** \r\n*   **Portal PostNord** \r\n*   **Poste Italiane** \r\n*   **PostNL** \r\n*   **PostNord DK** \r\n*   **PostNord NO** \r\n*   **PostNord SE** \r\n*   **Purolator** \r\n*   **Qxpress** \r\n*   **Qyun Express** \r\n*   **Royal Mail** \r\n*   **Royal Shipments** \r\n*   **Sagawa (EN)** \r\n*   **Sagawa (JA)** \r\n*   **Sendle** \r\n*   **SF Express** \r\n*   **SFC Fulfillment** \r\n*   **SHREE NANDAN COURIER** \r\n*   **Singapore Post** \r\n*   **Southwest Air Cargo** \r\n*   **StarTrack** \r\n*   **Step Forward Freight** \r\n*   **Swiss Post** \r\n*   **TForce Final Mile** \r\n*   **Tinghao** \r\n*   **TNT** \r\n*   **Toll IPEC** \r\n*   **United Delivery Service** \r\n*   **UPS** \r\n*   **USPS** \r\n*   **Venipak** \r\n*   **We Post** \r\n*   **Whistl** \r\n*   **Wizmo** \r\n*   **WMYC** \r\n*   **Xpedigo** \r\n*   **XPO Logistics** \r\n*   **Yamato (EN)** \r\n*   **Yamato (JA)** \r\n*   **YiFan Express** \r\n*   **YunExpress**\r\n\r\n The following tracking companies are displayed for shops located in specific countries:\r\n\r\n*   **Australia**: Australia Post, Sendle, Aramex Australia, TNT Australia, Hunter Express, Couriers Please, Bonds, Allied Express, Direct Couriers, Northline, GO Logistics \r\n*   **Austria**: Österreichische Post \r\n*   **Bulgaria**: Speedy \r\n*   **Canada**: Intelcom, BoxKnight, Loomis, GLS \r\n*   **China**: China Post, DHL eCommerce Asia, WanbExpress, YunExpress, Anjun Logistics, SFC Fulfillment, FSC \r\n*   **Czechia**: Zásilkovna \r\n*   **Germany**: Deutsche Post (DE), Deutsche Post (EN), DHL, DHL Express, Swiship, Hermes, GLS \r\n*   **Spain**: SEUR \r\n*   **France**: Colissimo, Mondial Relay, Colis Privé, GLS \r\n*   **United Kingdom**: Evri, DPD UK, Parcelforce, Yodel, DHL Parcel, Tuffnells \r\n*   **Greece**: ACS Courier \r\n*   **Hong Kong SAR**: SF Express \r\n*   **Ireland**: Fastway, DPD Ireland \r\n*   **India**: DTDC, India Post, Delhivery, Gati KWE, Professional Couriers, XpressBees, Ecom Express, Ekart, Shadowfax, Bluedart \r\n*   **Italy**: BRT, GLS Italy \r\n*   **Japan**: エコ配, 西濃運輸, 西濃スーパーエキスプレス, 福山通運, 日本通運, 名鉄運輸, 第一貨物 \r\n*   **Netherlands**: DHL Parcel, DPD \r\n*   **Norway**: Bring \r\n*   **Poland**: Inpost \r\n*   **Turkey**: PTT, Yurtiçi Kargo, Aras Kargo, Sürat Kargo \r\n*   **United States**: GLS, Alliance Air Freight, Pilot Freight, LSO, Old Dominion, R+L Carriers, Southwest Air Cargo \r\n*   **South Africa**: Fastway, Skynet"
          nullable: true
        tracking_numbers:
          type: array
          items:
            type: string
          description: "A list of tracking numbers provided by the shipping company. \r\n <aside class=\"note\"> \r\n\r\n#### Note\r\n\r\n With the REST API, you can set only one tracking number and one tracking URL per fulfillment. If you send multiple shipments with one fulfillment, you may want to specify tracking numbers and tracking URLs for all of them. You can do it with the equivalent GraphQL [FulfillmentCreateV2](/docs/api/admin-graphql/2023-01/mutations/fulfillmentCreateV2) and [fulfillmentTrackingInfoUpdateV2](/docs/api/admin-graphql/2023-01/mutations/fulfillmentTrackingInfoUpdateV2) mutations. \r\n</aside> \r\n\r\n The tracking numbers are clickable in the interface if one of the following applies (the highest in the list has the highest priority): \r\n\r\n*   Tracking URL provided in the `url` field.  \r\n*   [Shopify-known tracking company name](#supported-tracking-companies) specified in the `company` field. Shopify will build the tracking url automatically based on the tracking number specified.  \r\n*   The tracking number has a Shopify-known format. Shopify will guess the tracking provider and build the tracking url based on the tracking number format. Not all tracking carriers are supported, and multiple tracking carriers may use similarly formatted tracking numbers. This can result in an invalid tracking URL. It is highly recommended that you send the tracking company and the tracking URL."
          nullable: true
        tracking_urls:
          type: array
          items:
            type: string
          description: "The URLs of tracking pages for the fulfillment. \r\n\r\n The tracking URLs are displayed in the merchant's admin on the order page. The tracking URLs are displayed in the shipping confirmation email, which can optionally be sent to the customer. When accounts are enabled, the tracking URLs are also displayed in the customer's order history. \r\n\r\n<aside class=\"note\"> \r\n\r\n#### Note\r\n\r\n With the REST API, you can set only one tracking number and one tracking URL per fulfillment. If you send multiple shipments with one fulfillment, you may want to specify tracking numbers and tracking URLs for all of them. You can do it with the equivalent GraphQL [FulfillmentCreateV2](/docs/api/admin-graphql/2023-01/mutations/fulfillmentCreateV2) and [fulfillmentTrackingInfoUpdateV2](/docs/api/admin-graphql/2023-01/mutations/fulfillmentTrackingInfoUpdateV2) mutations. \r\n</aside>"
          nullable: true
        variant_inventory_management:
          type: string
          description: The name of the inventory management service.
          nullable: true
        tracking_number:
          type: string
          nullable: true
        tracking_url:
          type: string
          description: The URLs of tracking pages for the fulfillment.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    FulfillmentShipmentStatus:
      enum:
        - label_printed
        - label_purchased
        - attempted_delivery
        - ready_for_pickup
        - confirmed
        - in_transit
        - out_for_delivery
        - delivered
        - failure
      type: string
      additionalProperties: { }
    FulfillmentStatus:
      enum:
        - pending
        - open
        - success
        - cancelled
        - error
        - failure
      type: string
      additionalProperties: { }
    LineItem:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        fulfillable_quantity:
          type: integer
          description: 'The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity.'
          format: int32
          nullable: true
        fulfillment_service:
          type: string
          description: 'Service provider who is doing the fulfillment. Valid values are either "manual" or the name of the provider. eg: "amazon", "shipwire", etc.'
          nullable: true
        fulfillment_status:
          type: string
          description: 'The fulfillment status of this line item. Known values are ''fulfilled'', ''null'' and ''partial''.'
          nullable: true
        grams:
          type: integer
          description: The weight of the item in grams.
          format: int64
          nullable: true
        price:
          type: number
          description: The price of the item before discounts have been applied.
          format: decimal
          nullable: true
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The number of products that were purchased.
          format: int32
          nullable: true
        requires_shipping:
          type: boolean
          description: States whether or not the fulfillment requires shipping.
          nullable: true
        sku:
          type: string
          description: A unique identifier of the item in the fulfillment.
          nullable: true
        title:
          type: string
          description: The title of the product.
          nullable: true
        variant_id:
          type: integer
          description: The id of the product variant. Can be null if the product purchased is not a variant.
          format: int64
          nullable: true
        variant_title:
          type: string
          description: The title of the product variant. Can be null if the product purchased is not a variant.
          nullable: true
        name:
          type: string
          description: The name of the product variant.
          nullable: true
        vendor:
          type: string
          description: The name of the supplier of the item.
          nullable: true
        gift_card:
          type: boolean
          description: States whether the order used a gift card.
          nullable: true
        taxable:
          type: boolean
          description: States whether or not the product was taxable.
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'An array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem.'
          nullable: true
        tip_payment_gateway:
          type: string
          description: 'The payment gateway used to tender the tip, such as shopify_payments. Present only on tips.'
          nullable: true
        tip_payment_method:
          type: string
          description: 'The payment method used to tender the tip, such as Visa. Present only on tips.'
          nullable: true
        total_discount:
          type: number
          description: The total discount amount applied to this line item. This value is not subtracted in the line item price.
          format: decimal
          nullable: true
        total_discount_set:
          $ref: '#/components/schemas/PriceSet'
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocation'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
          nullable: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemProperty'
          description: "An array of custom information for an item that has been added to the cart.\r\nOften used to provide product customization options.\r\nAn array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem."
          nullable: true
        variant_inventory_management:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        product_exists:
          type: boolean
          description: This property is undocumented by Shopify.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemDuty'
          description: 'A list of duty objects, each containing information about a duty on the line item'
          nullable: true
        origin_location:
          $ref: '#/components/schemas/LineItemOriginLocation'
      additionalProperties: { }
    LineItemDuty:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        harmonized_system_code:
          type: string
          nullable: true
        country_code_of_origin:
          type: string
          nullable: true
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          nullable: true
      additionalProperties: { }
    LineItemOriginLocation:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        country_code:
          type: string
          description: The two-letter code (ISO 3166-1 format) for the country of the item's supplier.
          nullable: true
        province_code:
          type: string
          description: The two-letter abbreviation for the region of the item's supplier.
          nullable: true
        name:
          type: string
          description: The two-letter abbreviation for the region of the item's supplier.
          nullable: true
        address1:
          type: string
          description: The name of the item's supplier.
          nullable: true
        address2:
          type: string
          description: The suite number of the item's supplier.
          nullable: true
        city:
          type: string
          description: The suite number of the item's supplier.
          nullable: true
        zip:
          type: string
          description: The city of the item's supplier.
          nullable: true
      additionalProperties: { }
    LineItemProperty:
      type: object
      properties:
        name:
          type: string
          description: The name of the note attribute.
          nullable: true
        value:
          type: string
          description: The value of the note attribute.
          nullable: true
      additionalProperties: { }
      description: An object representing a properties for OpenShopify.Admin.Builder.Models.LineItem.Properties
    Metafield:
      required:
        - id
      type: object
      properties:
        description:
          type: string
          description: The description of the metafield.
          nullable: true
        key:
          type: string
          description: "The unique identifier for a metafield within its namespace.   \r\n Must be 3-64 characters long and can contain alphanumeric, hyphen, and underscore characters."
          nullable: true
        namespace:
          type: string
          description: "The container for a group of metafields that the metafield is or will be associated with. Used in tandem with `key` to lookup a metafield on a resource, preventing conflicts with other metafields with the same `key`.   \r\n Must be 3-255 characters long and can contain alphanumeric, hyphen, and underscore characters."
          nullable: true
        owner_id:
          type: integer
          description: The unique ID of the resource that the metafield is attached to.
          format: int64
          nullable: true
        owner_resource:
          type: string
          description: The type of resource that the metafield is attached to.
          nullable: true
        value:
          nullable: true
        type:
          $ref: '#/components/schemas/MetafieldType'
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    MetafieldType:
      enum:
        - boolean
        - color
        - date
        - date_time
        - dimension
        - file_reference
        - json
        - multi_line_text_field
        - number_decimal
        - number_integer
        - page_reference
        - product_reference
        - rating
        - single_line_text_field
        - variant_reference
        - volume
        - weight
      type: string
      additionalProperties: { }
    NoteAttribute:
      type: object
      properties:
        name:
          type: string
          description: The name of the note attribute.
          nullable: true
        value:
          type: string
          description: The value of the note attribute.
          nullable: true
      additionalProperties: { }
      description: An object representing a note attribute for OpenShopify.Admin.Builder.Models.OrderBase.NoteAttributes
    Order:
      required:
        - id
      type: object
      properties:
        app_id:
          type: integer
          description: The ID of the app that created the order.
          format: int64
          nullable: true
        billing_address:
          $ref: '#/components/schemas/Address'
        browser_ip:
          type: string
          description: The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported.
          nullable: true
        buyer_accepts_marketing:
          type: boolean
          description: Whether the customer consented to receive email updates from the shop.
          nullable: true
        cancel_reason:
          $ref: '#/components/schemas/OrderCancelReason'
        cancelled_at:
          type: string
          description: The date and time when the order was canceled. Returns `null` if the order isn't canceled.
          format: date-time
          nullable: true
        cart_token:
          type: string
          description: A unique value when referencing the cart that's associated with the order.
          nullable: true
        checkout_token:
          type: string
          description: A unique value when referencing the checkout that's associated with the order.
          nullable: true
        client_details:
          $ref: '#/components/schemas/ClientDetails'
        closed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the order was closed. Returns `null` if the order isn''t closed.'
          format: date-time
          nullable: true
        company:
          type: string
          description: Represents information about the purchasing company for the order. `null` will be returned if there is no purchasing company.
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the shop currency.'
          nullable: true
        current_total_additional_fees_set:
          type: string
          description: 'The current total additional fees on the order in shop and presentment currencies. The `amount` values associated with this field reflect order edits, returns, and refunds.'
          nullable: true
        current_total_discounts:
          type: string
          description: 'The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_total_discounts_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_price:
          type: string
          description: 'The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_total_price_set:
          $ref: '#/components/schemas/PriceSet'
        current_subtotal_price:
          type: string
          description: 'The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.'
          nullable: true
        current_subtotal_price_set:
          $ref: '#/components/schemas/PriceSet'
        current_total_tax:
          type: string
          description: 'The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds.'
          nullable: true
        current_total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        customer:
          $ref: '#/components/schemas/Customer'
        customer_locale:
          type: string
          description: 'The two or three-letter language code, optionally followed by a region modifier.'
          nullable: true
        discount_applications:
          type: array
          items:
            $ref: '#/components/schemas/DiscountApplication'
          nullable: true
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode'
          nullable: true
        email:
          type: string
          description: The customer's email address.
          nullable: true
        estimated_taxes:
          type: boolean
          description: 'Whether taxes on the order are estimated. Many factors can change between the time a customer places an order and the time the order is shipped, which could affect the calculation of taxes. This property returns `false` when taxes on the order are finalized and aren''t subject to any changes.'
          nullable: true
        financial_status:
          $ref: '#/components/schemas/OrderFinancialStatus'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/Fulfillment'
          nullable: true
        fulfillment_status:
          $ref: '#/components/schemas/OrderFulfillmentStatus'
        gateway:
          type: string
          description: The payment gateway used.
          nullable: true
          deprecated: true
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when they entered the shop.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
          nullable: true
        location_id:
          type: integer
          description: 'The ID of the physical location where the order was processed. To determine the locations where the line items are assigned for fulfillment please use the [FulfillmentOrder](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder) resource.'
          format: int64
          nullable: true
        merchant_of_record_app_id:
          type: integer
          description: The application acting as Merchant of Record for the order.
          format: int64
          nullable: true
        name:
          type: string
          description: 'The order name, generated by combining the `order_number` property with the order prefix and suffix that are set in the merchant''s [general settings](//www.shopify.com/admin/settings/general). This is different from the `id` property, which is the ID of the order used by the API. This field can also be set by the API to be any string value.'
          nullable: true
        note:
          type: string
          description: An optional note that a shop owner can attach to the order.
          nullable: true
        note_attributes:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttribute'
          nullable: true
        number:
          type: integer
          description: The order's position in the shop's count of orders. Numbers are sequential and start at 1.
          format: int32
          nullable: true
        order_number:
          type: integer
          description: The order 's position in the shop's count of orders starting at 1001. Order numbers are sequential and start at 1001.
          format: int32
          nullable: true
        original_total_additional_fees_set:
          type: string
          description: The original total additional fees on the order in shop and presentment currencies.
          nullable: true
        original_total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        payment_details:
          type: string
          description: "An object containing information about the payment. It has the following properties: \r\n\r\n*   **avs_result_code**: The response code from [the address verification system](https://en.wikipedia.org/wiki/Address_Verification_System) (AVS). The code is a single letter. See [ this chart](http://www.emsecommerce.net/avs_cvv2_response_codes.htm) for the codes and their definitions. \r\n*   **credit_card_bin**: The [issuer identification number](https://en.wikipedia.org/wiki/ISO/IEC_7812) (IIN), formerly known as the bank identification number (BIN), of the customer's credit card. This is made up of the first few digits of the credit card number. \r\n*   **credit_card_company**: The name of the company who issued the customer's credit card. \r\n*   **credit_card_number**: The customer's credit card number, with most of the leading digits redacted. \r\n*   **cvv_result_code**: The response code from the credit card company indicating whether the customer entered the [card security code](https://en.wikipedia.org/wiki/Card_Security_Code) (card verification value) correctly. The code is a single letter or empty string. See [ this chart](http://www.emsecommerce.net/avs_cvv2_response_codes.htm) for the codes and their definitions."
          nullable: true
          deprecated: true
        payment_terms:
          type: string
          description: "The terms and conditions under which a payment should be processed.\r\n\r\n*   **amount**: The amount that is owed according to the payment terms. \r\n*   **currency**: The presentment currency for the payment. \r\n*   **payment_terms_name**: The name of the selected payment terms template for the order. \r\n*   **payment_terms_type**: The type of selected payment terms template for the order. \r\n*   **due_in_days**: The number of days between the invoice date and due date that is defined in the selected payment terms template. \r\n*   **payment_schedules**: An array of schedules associated to the payment terms. \r\n\r\n    *   **amount**: The amount that is owed according to the payment terms. \r\n    *   **currency**: The presentment currency for the payment. \r\n    *   **issued_at**: The date and time when the payment terms were initiated. \r\n    *   **due_at**: The date and time when the payment is due. Calculated based on `issued_at` and `due_in_days` or a customized fixed date if the type is fixed. \r\n    *   **completed_at**: The date and time when the purchase is completed. Returns **null** initially and updates when the payment is captured. \r\n    *   **expected_payment_method**: The name of the payment method gateway."
          nullable: true
        payment_gateway_names:
          type: array
          items:
            type: string
          description: The list of payment gateways used for the order.
          nullable: true
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications.
          nullable: true
        presentment_currency:
          type: string
          description: The presentment currency that was used to display prices to the customer.
          nullable: true
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an order was processed. This value is the date that appears on your orders and that''s used in the analytic reports. If you''re importing orders from an app or another platform, then you can set `processed_at` to a date and time in the past to match when the original order was created.'
          format: date-time
          nullable: true
        processing_method:
          $ref: '#/components/schemas/OrderProcessingMethod'
        referring_site:
          type: string
          description: The website where the customer clicked a link to the shop.
          nullable: true
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/Refund'
          nullable: true
        shipping_address:
          $ref: '#/components/schemas/Address'
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          nullable: true
        source_name:
          type: string
          description: 'The source of the checkout. To use this field for sales attribution, you must register the channels that your app is managing. You can register the channels that your app is managing by completing [this Google Form](https://docs.google.com/forms/d/e/1FAIpQLScmVTZRQNjOJ7RD738mL1lGeFjqKVe_FM2tO9xsm21QEo5Ozg/viewform?usp=sf_link). After you''ve submited your request, you need to wait for your request to be processed by Shopify. You can find a list of your channels in the Partner Dashboard, in your app''s Marketplace extension. You can specify a handle as the `source_name` value in your request.'
          nullable: true
        source_identifier:
          type: string
          description: The ID of the order placed on the originating platform.This value doesn't correspond to the Shopify ID that's generated from a completed draft.
          nullable: true
        source_url:
          type: string
          description: 'A valid URL to the original order on the originating surface.This URL is displayed to merchants on the Order Details page.If the URL is invalid, then it won''t be displayed.'
          nullable: true
        subtotal_price:
          type: number
          description: 'The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips.'
          format: decimal
          nullable: true
        subtotal_price_set:
          $ref: '#/components/schemas/PriceSet'
        tags:
          type: string
          description: 'Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length.'
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          nullable: true
        taxes_included:
          type: boolean
          description: Whether taxes are included in the order subtotal.
          nullable: true
        test:
          type: boolean
          description: Whether this is a test order.
          nullable: true
        token:
          type: string
          description: A unique value when referencing the order.
          nullable: true
        total_discounts:
          type: number
          description: The total discounts applied to the price of the order in the shop currency.
          format: decimal
          nullable: true
        total_discounts_set:
          $ref: '#/components/schemas/PriceSet'
        total_line_items_price:
          type: number
          description: The sum of all line item prices in the shop currency.
          format: decimal
          nullable: true
        total_line_items_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_outstanding:
          type: string
          description: The total outstanding amount of the order in the shop currency.
          nullable: true
        total_price:
          type: number
          description: 'The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive.'
          format: decimal
          nullable: true
        total_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_shipping_price_set:
          $ref: '#/components/schemas/PriceSet'
        total_tax:
          type: number
          description: The sum of all the taxes applied to the order in the shop currency. Must be positive.
          format: decimal
          nullable: true
        total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        total_tip_received:
          type: number
          description: The sum of all the tips in the order in the shop currency.
          format: decimal
          nullable: true
        total_weight:
          type: number
          description: The sum of all line item weights in grams. The sum is not adjusted as items are removed from the order.
          format: decimal
          nullable: true
        user_id:
          type: integer
          description: 'The ID of the user logged into Shopify POS who processed the order, if applicable.'
          format: int64
          nullable: true
        order_status_url:
          type: string
          description: 'The URL pointing to the [order status web page](https://help.shopify.com/manual/orders/status-tracking), if applicable.'
          nullable: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: "An array of OpenShopify.Admin.Builder.Models.Transaction objects that detail all of the transactions in\r\nthis order."
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.OrderBase. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.OrderBase response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.OrderBase metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        checkout_id:
          type: integer
          format: int64
          nullable: true
        confirmed:
          type: boolean
          nullable: true
        contact_email:
          type: string
          nullable: true
        total_price_usd:
          type: number
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    OrderCancelReason:
      enum:
        - customer
        - fraud
        - inventory
        - declined
        - other
      type: string
      additionalProperties: { }
    OrderFinancialStatus:
      enum:
        - pending
        - authorized
        - partially_paid
        - paid
        - partially_refunded
        - refunded
        - voided
      type: string
      additionalProperties: { }
    OrderFulfillmentStatus:
      enum:
        - fulfilled
        - 'null'
        - partial
        - restocked
      type: string
      additionalProperties: { }
    OrderList:
      required:
        - orders
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      additionalProperties: { }
    OrderProcessingMethod:
      enum:
        - checkout
        - direct
        - manual
        - offsite
        - express
        - free
        - ''
      type: string
      additionalProperties: { }
    PaymentDetails:
      type: object
      properties:
        avs_result_code:
          type: string
          nullable: true
        credit_card_bin:
          type: string
          nullable: true
        cvv_result_code:
          type: string
          nullable: true
        credit_card_number:
          type: string
          nullable: true
        credit_card_company:
          type: string
          nullable: true
      additionalProperties: { }
    PaymentsRefundAttributeStatus:
      enum:
        - pending
        - failure
        - success
        - error
      type: string
      additionalProperties: { }
    PaymentsRefundAttributes:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PaymentsRefundAttributeStatus'
        acquirer_reference_number:
          type: string
          description: A unique number associated with the transaction that can be used to track the refund. This property has a value only for transactions completed with Visa or Mastercard.
          nullable: true
      additionalProperties: { }
    PerformBulkOperationsForMultipleCustomerAddressesRequest:
      type: object
      additionalProperties: false
    Price:
      type: object
      properties:
        currency_code:
          type: string
          description: The three-letter code (ISO 4217 format) for currency.
          nullable: true
        amount:
          type: number
          description: The amount in the currency.
          format: decimal
          nullable: true
      additionalProperties: { }
    PriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      additionalProperties: { }
    Receipt:
      type: object
      properties:
        testcase:
          type: boolean
          nullable: true
        authorization:
          type: string
          nullable: true
      additionalProperties: { }
    Refund:
      required:
        - id
      type: object
      properties:
        duties:
          type: array
          items:
            $ref: '#/components/schemas/RefundDuty'
          nullable: true
        note:
          type: string
          description: An optional note attached to a refund.
          nullable: true
        order_adjustments:
          type: array
          items:
            $ref: '#/components/schemas/RefundOrderAdjustment'
          nullable: true
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the refund was imported. This value can be set to a date in the past when importing from other systems. If no value is provided, then it will be auto-generated as the current time in Shopify. Public apps need to be granted permission by Shopify to import orders with the `processed_at` timestamp set to a value earlier the `created_at` timestamp. Private apps can''t be granted permission by Shopify.'
          format: date-time
          nullable: true
        refund_duties:
          type: array
          items:
            $ref: '#/components/schemas/RefundDutyType'
          nullable: true
        refund_line_items:
          type: array
          items:
            $ref: '#/components/schemas/RefundLineItem'
          nullable: true
        restock:
          type: string
          description: Whether to add the line items back to the store's inventory.
          nullable: true
          deprecated: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          nullable: true
        user_id:
          type: integer
          description: The unique identifier of the user who performed the refund.
          format: int64
          nullable: true
        order_id:
          type: integer
          description: The unique identifier of the order.
          format: int64
          nullable: true
        notify:
          type: boolean
          description: Whether to send a refund notification to the customer
          nullable: true
        shipping:
          $ref: '#/components/schemas/Shipping'
        currency:
          type: string
          description: 'The three-letter code (ISO 4217 format) for the currency used for the refund. Note: Required whenever the shipping amount property is provided.'
          nullable: true
        total_duties_set:
          $ref: '#/components/schemas/PriceSet'
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    RefundDuty:
      type: object
      properties:
        duty_id:
          type: integer
          format: int64
          nullable: true
        amount_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    RefundDutyType:
      type: object
      properties:
        duty_id:
          type: integer
          format: int64
          nullable: true
        refund_type:
          type: string
          nullable: true
      additionalProperties: { }
    RefundLineItem:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        line_item:
          $ref: '#/components/schemas/LineItem'
        line_item_id:
          type: integer
          description: The unique identifier of the refund line item.
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The quantity of the associated line item that was returned.
          format: int32
          nullable: true
        total_tax:
          type: number
          description: Tax amount refunded
          format: decimal
          nullable: true
        subtotal:
          type: number
          description: Item subtotal
          format: decimal
          nullable: true
        subtotal_set:
          $ref: '#/components/schemas/PriceSet'
        total_tax_set:
          $ref: '#/components/schemas/PriceSet'
        restock_type:
          $ref: '#/components/schemas/RestockType'
        location_id:
          type: integer
          description: "The unique identifier of the location where the items will be restocked.\r\nRequired when restock_type has the value return or cancel."
          format: int64
          nullable: true
      additionalProperties: { }
    RefundOrderAdjustment:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        order_id:
          type: integer
          description: The unique identifier of the order
          format: int64
          nullable: true
        refund_id:
          type: integer
          description: The unique identifier of the refund
          format: int64
          nullable: true
        amount:
          type: number
          description: The amount refunded (it is negative and does not include tax).
          format: decimal
          nullable: true
        tax_amount:
          type: number
          description: The tax amount refunded (negative).
          format: decimal
          nullable: true
        kind:
          type: string
          description: 'The type of adjustment. Values include "refund_discrepancy", "shipping_refund"'
          nullable: true
        reason:
          type: string
          description: Reason for the refund
          nullable: true
        amount_set:
          $ref: '#/components/schemas/PriceSet'
        tax_amount_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    RestockType:
      enum:
        - no_restock
        - cancel
        - return
        - legacy_restock
      type: string
      additionalProperties: { }
    SendAccountInviteToCustomerRequest:
      type: object
      additionalProperties: false
    SetDefaultAddressForCustomerRequest:
      type: object
      additionalProperties: false
    Shipping:
      type: object
      properties:
        full_refund:
          type: boolean
          description: Whether to refund all remaining shipping.
          nullable: true
        amount:
          type: number
          description: Set a specific amount to refund for shipping. Takes precedence over full_refund.
          format: decimal
          nullable: true
        maximum_refundable:
          type: number
          description: The maximum amount that can be refunded
          format: decimal
          nullable: true
        tax:
          type: number
          format: decimal
          nullable: true
      additionalProperties: { }
    ShippingLine:
      type: object
      properties:
        handle:
          type: string
          description: The carrier provided identifier.
          nullable: true
        carrier_identifier:
          type: string
          description: The carrier provided identifier.
          nullable: true
        code:
          type: string
          description: A reference to the shipping method.
          nullable: true
        phone:
          type: string
          description: The phone number used for the shipment.
          nullable: true
        price:
          type: number
          description: The price of this shipping method.
          format: decimal
          nullable: true
        discounted_price:
          type: number
          description: The discounted price of this shipping method.
          format: decimal
          nullable: true
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocation'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
          nullable: true
        source:
          type: string
          description: The source of the shipping method.
          nullable: true
        title:
          type: string
          description: The title of the shipping method.
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'A list of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.ShippingLine.'
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
        discounted_price_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    SmsMarketingConsent:
      type: object
      properties:
        state:
          type: string
          description: The current SMS marketing state for the customer.
          nullable: true
        opt_in_level:
          type: string
          description: 'The marketing subscription opt-in level, as described in the M3AAWG Sender Best Common Practices, that the customer gave when they consented to receive marketing material by SMS.'
          nullable: true
        consent_updated_at:
          type: string
          description: 'The date and time when the customer consented to receive marketing material by SMS. If no date is provided, then the date and time when the consent information was sent is used.'
          format: date-time
          nullable: true
        consent_collected_from:
          type: string
          description: The source for whether the customer has consented to receive marketing material by SMS.
          nullable: true
      additionalProperties: { }
    TaxLine:
      type: object
      properties:
        price:
          type: number
          description: The amount of tax to be charged.
          format: decimal
          nullable: true
        rate:
          type: number
          description: The rate of tax to be applied.
          format: decimal
          nullable: true
        title:
          type: string
          description: The name of the tax.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    Transaction:
      required:
        - id
      type: object
      properties:
        amount:
          type: number
          description: 'The amount of money included in the transaction. If you don''t provide a value for `amount`, then it defaults to the total cost of the order (even if a previous transaction has been made towards it).'
          format: decimal
          nullable: true
        authorization:
          type: string
          description: The authorization code associated with the transaction.
          nullable: true
        authorization_expires_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the Shopify Payments authorization expires.'
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency used for the payment.'
          nullable: true
        device_id:
          type: integer
          description: The ID for the device.
          format: int64
          nullable: true
        error_code:
          $ref: '#/components/schemas/TransactionErrorCode'
        extended_authorization_attributes:
          $ref: '#/components/schemas/ExtendedAuthorizationAttributes'
        gateway:
          type: string
          description: 'The name of the gateway the transaction was issued through. A list of gateways can be found on Shopify''s [payment gateways page](//www.shopify.com/payment-gateways).'
          nullable: true
        kind:
          $ref: '#/components/schemas/TransactionKind'
        location_id:
          type: integer
          description: The ID of the physical location where the transaction was processed.
          format: int64
          nullable: true
        message:
          type: string
          description: A string generated by the payment provider with additional information about why the transaction succeeded or failed.
          nullable: true
        order_id:
          type: integer
          description: The ID for the order that the transaction is associated with.
          format: int64
          nullable: true
        payment_details:
          $ref: '#/components/schemas/PaymentDetails'
        parent_id:
          type: integer
          description: "The ID of an associated transaction. \r\n\r\n*   For `capture` transactions, the parent needs to be an `authorization` transaction. \r\n*   For `void` transactions, the parent needs to be an `authorization` transaction. \r\n*   For `refund` transactions, the parent needs to be a `capture` or `sale` transaction."
          format: int64
          nullable: true
        payments_refund_attributes:
          $ref: '#/components/schemas/PaymentsRefundAttributes'
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when a transaction was processed. This value is the date that''s used in the analytic reports. By default, it matches the `created_at` value. If you''re importing transactions from an app or another platform, then you can set `processed_at` to a date and time in the past to match when the original transaction was processed.'
          format: date-time
          nullable: true
        receipt:
          type: string
          description: A transaction receipt attached to the transaction by the gateway. The value of this field depends on which gateway the shop is using.
          nullable: true
        source_name:
          type: string
          description: 'The origin of the transaction. This is set by Shopify and can''t be overridden. Example values (not an exhaustive list): `web`, `pos`, `iphone`, and `android`.'
          nullable: true
        status:
          type: string
          description: 'The status of the transaction. Valid values: `pending`, `failure`, `success`, and `error`.'
          nullable: true
        total_unsettled_set:
          type: string
          description: Specifies the available amount with currency to capture on the gateway in shop and presentment currencies. Only available when an amount is capturable or manually mark as paid.
          nullable: true
        test:
          type: boolean
          description: Whether the transaction is a test transaction.
          nullable: true
        user_id:
          type: integer
          description: 'The ID for the user who was logged into the Shopify POS device when the order was processed, if applicable.'
          format: int64
          nullable: true
        currency_exchange_adjustment:
          $ref: '#/components/schemas/CurrencyExchangeAdjustment'
        maximum_refundable:
          type: number
          description: The maximum amount that can be refunded
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    TransactionErrorCode:
      enum:
        - incorrect_number
        - invalid_number
        - invalid_expiry_date
        - invalid_cvc
        - expired_card
        - incorrect_cvc
        - incorrect_zip
        - incorrect_address
        - card_declined
        - processing_error
        - call_issuer
        - pick_up_card
      type: string
      additionalProperties: { }
    TransactionKind:
      enum:
        - authorization
        - capture
        - sale
        - void
        - refund
      type: string
      additionalProperties: { }
    UpdateCustomer:
      required:
        - id
      type: object
      properties:
        accepts_marketing:
          type: boolean
          description: 'As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.Whether the customer has consented to receive marketing material by email.'
          nullable: true
          deprecated: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAddress'
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency that the customer used when they paid for their last order. Defaults to the shop currency. Returns the shop currency for test orders.'
          nullable: true
        default_address:
          $ref: '#/components/schemas/CustomerAddress'
        email:
          type: string
          description: The unique email address of the customer. Attempting to assign the same email address to multiple customers returns an error.
          nullable: true
        email_marketing_consent:
          $ref: '#/components/schemas/EmailMarketingConsent'
        first_name:
          type: string
          description: The customer's first name.
          nullable: true
        last_name:
          type: string
          description: The customer's last name.
          nullable: true
        last_order_id:
          type: integer
          description: The ID of the customer's last order.
          format: int64
          nullable: true
        last_order_name:
          type: string
          description: The name of the customer's last order. This is directly related to the `name` field on the Order resource.
          nullable: true
        metafield:
          type: string
          description: 'Attaches additional metadata to a shop''s resources: * **key** (required): An identifier for the metafield (maximum of 30 characters). * **namespace**(required): A container for a set of metadata (maximum of 20 characters). Namespaces help distinguish between metadata that you created and metadata created by another individual with a similar namespace. * **value** (required): Information to be stored as metadata. * **type** (required): The type. Refer to the [full list of types](/apps/metafields/types). * **description** (optional): Additional information about the metafield.'
          nullable: true
        marketing_opt_in_level:
          type: string
          description: "As of API version 2022-04, this property is deprecated. Use `email_marketing_consent` instead.The marketing subscription opt-in level, as described in the [M3AAWG Sender Best Common Practices](https://www.m3aawg.org/sites/default/files/document/M3AAWG_Senders_BCP_Ver3-2015-02.pdf), that the customer gave when they consented to receive marketing material by email.If the customer does not accept email marketing, then this property will be set to `null`.Valid values:\r\n\r\n*   `single_opt_in` \r\n*   `confirmed_opt_in` \r\n*   `unknown`"
          nullable: true
          deprecated: true
        multipass_identifier:
          type: string
          description: 'A unique identifier for the customer that''s used with [Multipass login](/api/multipass).'
          nullable: true
        note:
          type: string
          description: A note about the customer.
          nullable: true
        orders_count:
          type: integer
          description: The number of orders associated with this customer. Test and archived orders aren't counted.
          format: int32
          nullable: true
        password:
          type: string
          description: The customer's password.
          nullable: true
        password_confirmation:
          type: string
          description: The customer's password that's confirmed.
          nullable: true
        phone:
          type: string
          description: "The unique phone number ([E.164 format](https://en.wikipedia.org/wiki/E.164)) for this customer. Attempting to assign the same phone number to multiple customers returns an error. The property can be set using different formats, but each format must represent a number that can be dialed from anywhere in the world. The following formats are all valid:\r\n\r\n*   6135551212 \r\n*   +16135551212 \r\n*   (613)555-1212 \r\n*   +1 613-555-1212"
          nullable: true
        sms_marketing_consent:
          $ref: '#/components/schemas/SmsMarketingConsent'
        state:
          $ref: '#/components/schemas/CustomerState'
        tags:
          type: string
          description: 'Tags that the shop owner has attached to the customer, formatted as a string of comma-separated values. A customer can have up to 250 tags. Each tag can have up to 255 characters.'
          nullable: true
        tax_exempt:
          type: boolean
          description: 'Whether the customer is exempt from paying taxes on their order. If `true`, then taxes won''t be applied to an order at checkout. If `false`, then taxes will be applied at checkout.'
          nullable: true
        tax_exemptions:
          type: array
          items:
            $ref: '#/components/schemas/CustomerTaxExemptions'
          nullable: true
        total_spent:
          type: number
          description: The total amount of money that the customer has spent across their order history.
          format: decimal
          nullable: true
        verified_email:
          type: boolean
          description: Whether the customer has verified their email address.
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
          description: "Additional metadata about the OpenShopify.Admin.Builder.Models.Customer. Note: This is not naturally returned with a OpenShopify.Admin.Builder.Models.Customer response, as\r\nShopify will not return OpenShopify.Admin.Builder.Models.Customer metafields unless specified. Instead, you need to query metafields with !:MetafieldService. \r\nUses include: Creating, updating, and deserializing webhook bodies that include them."
          nullable: true
        accepts_marketing_updated_at:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: false
    UpdateCustomerAddress:
      required:
        - id
      type: object
      properties:
        address1:
          type: string
          description: The customer's mailing address
          nullable: true
        address2:
          type: string
          description: An additional field for the customer's mailing address.
          nullable: true
        city:
          type: string
          description: 'The customer''s city, town, or village.'
          nullable: true
        country:
          type: string
          description: The customer's country.
          nullable: true
        country_code:
          type: string
          description: The two-letter country code corresponding to the customer's country.
          nullable: true
        country_name:
          type: string
          description: The customer’s normalized country name.
          nullable: true
        company:
          type: string
          description: The customer’s company.
          nullable: true
        customer_id:
          type: integer
          description: The unique identifier for the customer.
          format: int64
          nullable: true
        first_name:
          type: string
          description: The customer’s first name.
          nullable: true
        last_name:
          type: string
          description: The customer’s last name.
          nullable: true
        name:
          type: string
          description: The customer’s first and last names.
          nullable: true
        phone:
          type: string
          description: The customer’s phone number at this address.
          nullable: true
        province:
          type: string
          description: 'The customer’s region name. Typically a province, a state, or a prefecture.'
          nullable: true
        province_code:
          type: string
          description: The two-letter code for the customer’s region.
          nullable: true
        zip:
          type: string
          description: 'The customer’s postal code, also known as zip, postcode, Eircode, etc.'
          nullable: true
        default:
          type: boolean
          description: Indicates whether this address is the default address.
          nullable: true
        latitude:
          type: number
          format: decimal
          nullable: true
        longitude:
          type: number
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
      additionalProperties: false
    UpdateCustomerAddressRequest:
      required:
        - customer_address
      type: object
      properties:
        customer_address:
          $ref: '#/components/schemas/UpdateCustomerAddress'
      additionalProperties: false
    UpdateCustomerRequest:
      required:
        - customer
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/UpdateCustomer'
      additionalProperties: false
    UpdateCustomerSavedSearch:
      required:
        - id
      type: object
      properties:
        name:
          type: string
          description: The name given by the shop owner to the customer saved search.
          nullable: true
        query:
          type: string
          description: 'The set of conditions that determines which customers are returned by the saved search. For more information, see [*Customer saved search queries*](#customer-saved-search-queries).'
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: false
    UpdateCustomerSavedSearchRequest:
      required:
        - customer_saved_search
      type: object
      properties:
        customer_saved_search:
          $ref: '#/components/schemas/UpdateCustomerSavedSearch'
      additionalProperties: false
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
security:
  - ApiKey: [ ]
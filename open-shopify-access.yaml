openapi: 3.0.1
info:
  title: Access
  description: Authentication and Authorization
  version: '2022-04'
servers:
  - url: 'https://{store_name}.myshopify.com/admin/api/{api_version}'
    variables:
      store_name:
        default: sample_store
        description: The sub-domain of the storefront.
      api_version:
        default: '2022-04'
        description: The api version.
paths:
  /admin/oauth/access_scopes.json:
    get:
      tags:
        - AccessScope
      summary: Get a list of access scopes
      operationId: GetListOfAccessScopes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessScopeList'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /storefront_access_tokens.json:
    post:
      tags:
        - StorefrontAccessToken
      summary: Creates a new StorefrontAccessToken
      operationId: CreateNewStorefrontAccessToken
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorefrontAccessTokenItem'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - StorefrontAccessToken
      summary: Retrieves a list of storefront access tokens that have been issued
      operationId: RetrieveListOfStorefrontAccessTokensThatHaveBeenIssued
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorefrontAccessTokenList'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/storefront_access_tokens/{storefront_access_token_id}.json':
    delete:
      tags:
        - StorefrontAccessToken
      summary: Deletes an existing storefront access token
      operationId: DeleteExistingStorefrontAccessToken
      parameters:
        - name: storefront_access_token_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    AccessScope:
      type: object
      properties:
        handle:
          $ref: '#/components/schemas/AuthorizationScope'
      additionalProperties: { }
      description: An object representing an access scope
    AccessScopeList:
      type: object
      properties:
        access_scopes:
          type: array
          items:
            $ref: '#/components/schemas/AccessScope'
          nullable: true
      additionalProperties: { }
    AuthorizationScope:
      enum:
        - read_content
        - write_content
        - read_themes
        - write_themes
        - read_products
        - write_products
        - read_customers
        - write_customers
        - read_orders
        - read_all_orders
        - write_orders
        - read_script_tags
        - write_script_tags
        - read_fulfillments
        - write_fulfillments
        - read_shipping
        - write_shipping
        - read_analytics
        - read_users
        - write_users
        - read_checkouts
        - write_checkouts
        - read_reports
        - write_reports
        - read_price_rules
        - write_price_rules
        - read_inventory
        - write_inventory
        - read_product_listings
        - read_collection_listings
        - read_draft_orders
        - write_draft_orders
        - write_merchant_managed_fulfillment_orders
        - read_merchant_managed_fulfillment_orders
        - read_marketing_events
        - write_marketing_events
        - read_resource_feedbacks
        - write_resource_feedbacks
        - unauthenticated_read_checkouts
        - unauthenticated_read_collection_listings
        - unauthenticated_read_customer_tags
        - unauthenticated_read_customers
        - unauthenticated_read_product_listings
        - unauthenticated_read_product_tags
        - unauthenticated_write_checkouts
        - unauthenticated_write_customers
        - unauthenticated_read_content
        - read_locations
        - write_locations
        - read_order_edits
        - write_order_edits
        - read_assigned_fulfillment_orders
        - write_assigned_fulfillment_orders
        - read_third_party_fulfillment_orders
        - write_third_party_fulfillment_orders
        - read_gift_cards
        - write_gift_cards
        - read_discounts
        - write_discounts
        - read_shopify_payments_payouts
        - read_shopify_payments_disputes
        - read_translations
        - write_translations
        - read_locales
        - write_locales
      type: string
      additionalProperties: { }
    ErrorResponse:
      type: object
      properties:
        errors:
          type: string
          nullable: true
      additionalProperties: false
    StorefrontAccessToken:
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
          nullable: true
        admin_graphql_api_id:
          type: string
          nullable: true
        access_token:
          type: string
          description: The issued public access token.
          nullable: true
        access_scope:
          type: string
          description: 'An application-dependant, comma separated list of permissions associated with the token.'
          nullable: true
        created_at:
          type: string
          description: The date and time when the public access token was created. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        title:
          type: string
          description: "An arbitrary title for each token determined by the developer/application, used for reference purposes.\r\nNo constraint on uniqueness."
          nullable: true
      additionalProperties: { }
    StorefrontAccessTokenItem:
      type: object
      properties:
        storefront_access_token:
          $ref: '#/components/schemas/StorefrontAccessToken'
      additionalProperties: { }
    StorefrontAccessTokenList:
      type: object
      properties:
        storefront_access_tokens:
          type: array
          items:
            $ref: '#/components/schemas/StorefrontAccessToken'
          nullable: true
      additionalProperties: { }
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
security:
  - ApiKey: [ ]
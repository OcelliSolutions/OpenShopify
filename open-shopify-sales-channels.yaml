openapi: 3.0.1
info:
  title: Sales Channels
  description: Sales Channels
  version: '2022-04'
servers:
  - url: 'https://{store_name}.myshopify.com/admin/api/{api_version}'
    variables:
      store_name:
        default: sample_store
        description: The sub-domain of the storefront.
      api_version:
        default: '2022-04'
        description: The api version.
paths:
  /checkouts.json:
    post:
      tags:
        - Checkout
      summary: Creates a checkout
      operationId: CreateCheckout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckoutRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCheckoutRequest'
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/checkouts/{token}/complete.json':
    post:
      tags:
        - Checkout
      summary: Completes a checkout
      operationId: CompleteCheckout
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: integer
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/checkouts/{token}.json':
    get:
      tags:
        - Checkout
      summary: Retrieves a checkout
      operationId: GetCheckout
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: integer
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Checkout
      summary: Modifies an existing checkout
      operationId: UpdateCheckout
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCheckoutRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCheckoutRequest'
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/checkouts/{token}/shipping_rates.json':
    get:
      tags:
        - Checkout
      summary: Retrieves a list of shipping rates
      operationId: ListShippingRates
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: integer
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collection_listings.json:
    get:
      tags:
        - CollectionListing
      summary: Retrieve collection listings that are published to your app
      operationId: GetCollectionListingsThatArePublishedToYourApp
      parameters:
        - name: limit
          in: query
          description: Amount of results
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/collection_listings/{collection_listing_id}/product_ids.json':
    get:
      tags:
        - CollectionListing
      summary: Retrieve <code>product_ids</code> that are published to a <code>collection_id</code>
      operationId: GetProductIdsThatArePublishedToCollectionId
      parameters:
        - name: collection_listing_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Amount of results
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/collection_listings/{collection_listing_id}.json':
    get:
      tags:
        - CollectionListing
      summary: Retrieve a specific collection listing that is published to your app
      operationId: GetSpecificCollectionListingThatIsPublishedToYourApp
      parameters:
        - name: collection_listing_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - CollectionListing
      summary: Create a collection listing to publish a collection to your app
      operationId: CreateCollectionListingToPublishCollectionToYourApp
      parameters:
        - name: collection_listing_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollectionListingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCollectionListingRequest'
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - CollectionListing
      summary: Delete a collection listing to unpublish a collection from your app
      operationId: DeleteCollectionListingToUnpublishCollectionFromYourApp
      parameters:
        - name: collection_listing_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /mobile_platform_applications.json:
    get:
      tags:
        - MobilePlatformApplication
      summary: List all of the mobile platform applications associated with the app
      operationId: ListAllOfMobilePlatformApplicationsAssociatedWithApp
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - MobilePlatformApplication
      summary: Create a mobile platform application
      operationId: CreateMobilePlatformApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMobilePlatformApplicationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateMobilePlatformApplicationRequest'
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/mobile_platform_applications/{mobile_platform_application_id}.json':
    get:
      tags:
        - MobilePlatformApplication
      summary: Get a mobile platform application
      operationId: GetMobilePlatformApplication
      parameters:
        - name: mobile_platform_application_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - MobilePlatformApplication
      summary: Update a mobile platform application
      operationId: UpdateMobilePlatformApplication
      parameters:
        - name: mobile_platform_application_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMobilePlatformApplicationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateMobilePlatformApplicationRequest'
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - MobilePlatformApplication
      summary: Delete a mobile platform application
      operationId: DeleteMobilePlatformApplication
      parameters:
        - name: mobile_platform_application_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/checkouts/{token}/payments.json':
    post:
      tags:
        - Payment
      summary: Creates a new payment
      operationId: CreatePayment
      parameters:
        - name: amount
          in: query
          description: The amount of the payment.
          schema:
            type: string
        - name: request_details
          in: query
          description: 'The details of the request, including the following attributes:'
          schema:
            type: string
        - name: session_id
          in: query
          description: A session ID provided by the card vault when creating a payment session.
          schema:
            type: string
        - name: token
          in: path
          required: true
          schema:
            type: integer
        - name: unique_token
          in: query
          description: 'A unique idempotency token generated by your app. This can be any value, but must be unique across all payment requests.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Payment
      summary: Retrieves a list of payments on a particular checkout
      operationId: ListPaymentsOnParticularCheckout
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: integer
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/checkouts/{token}/payments/{payment_id}.json':
    get:
      tags:
        - Payment
      summary: Retrieves a single payment
      operationId: GetPayment
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: token
          in: path
          required: true
          schema:
            type: integer
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/checkouts/{token}/payments/count.json':
    get:
      tags:
        - Payment
      summary: Counts the number of payments attempted on a checkout
      operationId: CountNumberOfPaymentsAttemptedOnCheckout
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /product_listings.json:
    get:
      tags:
        - ProductListing
      summary: Retrieve product listings that are published to your app
      operationId: GetProductListingsThatArePublishedToYourApp
      parameters:
        - name: collection_id
          in: query
          description: Filter by products belonging to a particular collection
          schema:
            type: integer
            format: int64
        - name: handle
          in: query
          description: Filter by product handle
          schema:
            type: string
        - name: limit
          in: query
          description: Amount of results
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
        - name: product_ids
          in: query
          description: A comma-separated list of product ids
          schema:
            type: integer
            format: int64
        - name: updated_at_min
          in: query
          description: Filter by product listings last updated after a certain date and time (formatted in ISO 8601)
          schema:
            type: string
            format: date-time
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /product_listings/product_ids.json:
    get:
      tags:
        - ProductListing
      summary: Retrieve <code>product_ids</code> that are published to your app
      operationId: GetProductIdsThatArePublishedToYourApp
      parameters:
        - name: limit
          in: query
          description: Amount of results
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          schema:
            type: string
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /product_listings/count.json:
    get:
      tags:
        - ProductListing
      summary: Retrieve a count of products that are published to your app
      operationId: GetCountOfProductsThatArePublishedToYourApp
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/product_listings/{product_listing_id}.json':
    get:
      tags:
        - ProductListing
      summary: Retrieve a specific product listing that is published to your app
      operationId: GetSpecificProductListingThatIsPublishedToYourApp
      parameters:
        - name: product_listing_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ProductListing
      summary: Create a product listing to publish a product to your app
      operationId: CreateProductListingToPublishProductToYourApp
      parameters:
        - name: product_listing_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductListingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProductListingRequest'
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ProductListing
      summary: Delete a product listing to unpublish a product from your app
      operationId: DeleteProductListingToUnpublishProductFromYourApp
      parameters:
        - name: product_listing_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/products/{product_id}/resource_feedback.json':
    post:
      tags:
        - ProductResourceFeedback
      summary: Create a new Product ResourceFeedback
      operationId: CreateProductResourceFeedback
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: state
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductResourceFeedbackRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProductResourceFeedbackRequest'
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ProductResourceFeedback
      summary: Receive a list of all Product ResourceFeedbacks
      operationId: ListProductResourceFeedbacks
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /resource_feedback.json:
    post:
      tags:
        - ResourceFeedback
      summary: Create a new ResourceFeedback
      operationId: CreateResourceFeedback
      parameters:
        - name: feedback_generated_at
          in: query
          description: An ISO 8601 date and time indicating when the feedback was generated by your app.
          schema:
            type: string
        - name: messages
          in: query
          description: "An array containing a single message.\r\n            <br />See <a href=\"#formatting-the-resource-feedback-field-{{ current_version }}\">\r\n            <br /><em>Formatting the resource feedback message field</em></a> for formatting requirements."
          schema:
            type: string
        - name: state
          in: query
          description: 'Must be one of the following values:'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceFeedbackRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateResourceFeedbackRequest'
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ResourceFeedback
      summary: Receive a list of all ResourceFeedbacks
      operationId: ListResourceFeedbacks
      responses:
        '401':
          description: Unauthorized
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Address:
      required:
        - id
      type: object
      properties:
        customer_id:
          type: integer
          format: int64
        address1:
          type: string
          description: The mailing address.
          nullable: true
        address2:
          type: string
          description: An additional field for the mailing address.
          nullable: true
        city:
          type: string
          description: The city.
          nullable: true
        company:
          type: string
          description: The company.
          nullable: true
        country:
          type: string
          description: The country.
          nullable: true
        country_code:
          type: string
          description: The two-letter country code corresponding to the country.
          nullable: true
        country_name:
          type: string
          description: The normalized country name.
          nullable: true
        default:
          type: boolean
          description: Indicates whether this address is the default address.
          nullable: true
        first_name:
          type: string
          description: The first name.
          nullable: true
        last_name:
          type: string
          description: The last name.
          nullable: true
        latitude:
          type: number
          description: The latitude. Auto-populated by Shopify on the order's Billing/Shipping address.
          format: decimal
          nullable: true
        longitude:
          type: number
          description: The longitude. Auto-populated by Shopify on the order's Billing/Shipping address.
          format: decimal
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
        phone:
          type: string
          description: The phone number.
          nullable: true
        province:
          type: string
          description: The province or state name
          nullable: true
        province_code:
          type: string
          description: The two-letter province or state code.
          nullable: true
        zip:
          type: string
          description: The ZIP or postal code.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: { }
    CheckoutLineItem:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        fulfillable_quantity:
          type: integer
          description: 'The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity.'
          format: int32
          nullable: true
        fulfillment_service:
          type: string
          description: 'Service provider who is doing the fulfillment. Valid values are either "manual" or the name of the provider. eg: "amazon", "shipwire", etc.'
          nullable: true
        fulfillment_status:
          type: string
          description: 'The fulfillment status of this line item. Known values are ''fulfilled'', ''null'' and ''partial''.'
          nullable: true
        grams:
          type: integer
          description: The weight of the item in grams.
          format: int64
          nullable: true
        price:
          type: number
          description: The price of the item before discounts have been applied.
          format: decimal
          nullable: true
        product_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
          format: int64
          nullable: true
        quantity:
          type: integer
          description: The number of products that were purchased.
          format: int32
          nullable: true
        requires_shipping:
          type: boolean
          description: States whether or not the fulfillment requires shipping.
          nullable: true
        sku:
          type: string
          description: A unique identifier of the item in the fulfillment.
          nullable: true
        title:
          type: string
          description: The title of the product.
          nullable: true
        variant_id:
          type: integer
          description: The id of the product variant. Can be null if the product purchased is not a variant.
          format: int64
          nullable: true
        variant_title:
          type: string
          description: The title of the product variant. Can be null if the product purchased is not a variant.
          nullable: true
        name:
          type: string
          description: The name of the product variant.
          nullable: true
        vendor:
          type: string
          description: The name of the supplier of the item.
          nullable: true
        gift_card:
          type: boolean
          description: States whether the order used a gift card.
          nullable: true
        taxable:
          type: boolean
          description: States whether or not the product was taxable.
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'An array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem.'
        tip_payment_gateway:
          type: string
          description: 'The payment gateway used to tender the tip, such as shopify_payments. Present only on tips.'
          nullable: true
        tip_payment_method:
          type: string
          description: 'The payment method used to tender the tip, such as Visa. Present only on tips.'
          nullable: true
        total_discount:
          type: number
          description: The total discount amount applied to this line item. This value is not subtracted in the line item price.
          format: decimal
          nullable: true
        total_discount_set:
          $ref: '#/components/schemas/PriceSet'
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocation'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
        properties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemProperty'
          description: "An array of custom information for an item that has been added to the cart.\r\nOften used to provide product customization options.\r\nAn array of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.LineItem."
        variant_inventory_management:
          type: string
          description: This property is undocumented by Shopify.
          nullable: true
        product_exists:
          type: boolean
          description: This property is undocumented by Shopify.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/LineItemDuty'
          description: 'A list of duty objects, each containing information about a duty on the line item'
        origin_location:
          $ref: '#/components/schemas/LineItemOriginLocation'
        key:
          type: string
          description: The key for the line item.
          nullable: true
        origin_location_id:
          type: integer
          description: The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
          format: int64
          nullable: true
      additionalProperties: { }
    CountItem:
      type: object
      properties:
        count:
          type: integer
          format: int32
      additionalProperties: { }
    CreateCheckout:
      type: object
      properties:
        abandoned_checkout_url:
          type: string
          description: The full recovery URL to be sent to a customer to recover their abandoned checkout.
          nullable: true
        billing_address:
          $ref: '#/components/schemas/Address'
        buyer_accepts_marketing:
          type: boolean
          description: "Indicates whether or not the person who placed the order would like to receive email \r\nupdates from the shop. This is set when checking the \"I want to receive occasional \r\nemails about new products, promotions and other news\" checkbox during checkout."
          nullable: true
        cart_token:
          type: string
          description: Unique identifier for a particular cart that is attached to a particular order.
          nullable: true
        closed_at:
          type: string
          description: The date and time when the abandoned cart was completed. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        completed_at:
          type: string
          description: The date and time when the abandoned cart was last modified. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        created_at:
          type: string
          description: The date and time when the abandoned cart was created. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        currency:
          type: string
          description: The three letter code (ISO 4217) for the currency used for the payment.
          nullable: true
        customer:
          $ref: '#/components/schemas/Customer'
        customer_locale:
          type: string
          description: 'The two or three-letter language code, optionally followed by a region modifier. Example values: en, en-CA.'
          nullable: true
        device_id:
          type: integer
          description: The ID of the Shopify POS device that created the checkout.
          format: int64
          nullable: true
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode'
          description: Applicable discount codes that can be applied to the order. If no codes exist the value will default to blank.
        email:
          type: string
          description: The customer's email address.
          nullable: true
        gateway:
          type: string
          description: The payment gateway used.
          nullable: true
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when entering the shop.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutLineItem'
          description: 'A list of line item objects, each one containing information about an item in the order.'
        location_id:
          type: integer
          description: The ID of the physical location where the checkout was processed.
          format: int64
          nullable: true
        note:
          type: string
          description: The text of an optional note that a shop owner can attach to the order.
          nullable: true
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications.
          nullable: true
        presentment_currency:
          type: string
          description: The three-letter code (ISO 4217 format) of the currency that the customer used at checkout.
          nullable: true
        referring_site:
          type: string
          description: The website that the customer clicked on to come to the shop.
          nullable: true
        shipping_address:
          $ref: '#/components/schemas/Address'
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          description: 'An array of shipping line objects, each of which details the shipping methods used.'
        source_name:
          type: string
          description: 'Where the checkout originated. Known values are: "web", "pos", "iphone", and "android"'
          nullable: true
        subtotal_price:
          type: number
          description: Price of the order before shipping and taxes
          format: decimal
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'An array of tax line objects, each of which details the taxes applicable to the order.'
        taxes_included:
          type: boolean
          description: Whether taxes are included in the price.
          nullable: true
        token:
          type: string
          description: Unique identifier for a particular order.
          nullable: true
        total_discounts:
          type: number
          description: The total amount of the discounts to be applied to the price of the order.
          format: decimal
          nullable: true
        total_duties:
          type: number
          description: The total duties of the checkout in presentment currency.
          format: decimal
          nullable: true
        total_line_items_price:
          type: number
          description: The sum of all the prices of all the items in the order.
          format: decimal
          nullable: true
        total_price:
          type: number
          description: 'The sum of all the prices of all the items in the order, taxes and discounts included.'
          format: decimal
          nullable: true
        total_tax:
          type: number
          description: The sum of all the taxes applied to the line items in the order.
          format: decimal
          nullable: true
        total_weight:
          type: number
          description: 'The sum of all the weights of the line items in the order, in grams.'
          format: decimal
          nullable: true
        updated_at:
          type: string
          description: The date and time when the abandoned cart was last modified. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        user_id:
          type: integer
          description: The ID of the user who created the checkout.
          format: int64
          nullable: true
      additionalProperties: { }
    CreateCheckoutRequest:
      type: object
      properties:
        checkout:
          $ref: '#/components/schemas/CreateCheckout'
      additionalProperties: { }
    CreateCollectionListing:
      type: object
      additionalProperties: { }
    CreateCollectionListingRequest:
      type: object
      properties:
        collection_listing:
          $ref: '#/components/schemas/CreateCollectionListing'
      additionalProperties: { }
    CreateMobilePlatformApplication:
      type: object
      additionalProperties: { }
    CreateMobilePlatformApplicationRequest:
      type: object
      properties:
        mobile_platform_application:
          $ref: '#/components/schemas/CreateMobilePlatformApplication'
      additionalProperties: { }
    CreatePayment:
      type: object
      additionalProperties: { }
    CreatePaymentRequest:
      type: object
      properties:
        payment:
          $ref: '#/components/schemas/CreatePayment'
      additionalProperties: { }
    CreateProductListing:
      type: object
      additionalProperties: { }
    CreateProductListingRequest:
      type: object
      properties:
        product_listing:
          $ref: '#/components/schemas/CreateProductListing'
      additionalProperties: { }
    CreateProductResourceFeedback:
      type: object
      additionalProperties: { }
    CreateProductResourceFeedbackRequest:
      type: object
      properties:
        product_resource_feedback:
          $ref: '#/components/schemas/CreateProductResourceFeedback'
      additionalProperties: { }
    CreateResourceFeedback:
      type: object
      additionalProperties: { }
    CreateResourceFeedbackRequest:
      type: object
      properties:
        resource_feedback:
          $ref: '#/components/schemas/CreateResourceFeedback'
      additionalProperties: { }
    Customer:
      required:
        - id
      type: object
      properties:
        accepts_marketing:
          type: boolean
          description: Indicates whether the customer has consented to be sent marketing material via email.
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAddress'
          description: A list of addresses for the customer.
          nullable: true
        created_at:
          type: string
          description: The date and time when the customer was created.
          format: date-time
          nullable: true
        currency:
          type: string
          description: Currency used for customer's last order
          nullable: true
        default_address:
          $ref: '#/components/schemas/CustomerAddress'
        email:
          type: string
          description: The email address of the customer.
          nullable: true
        first_name:
          type: string
          description: The customer's first name.
          nullable: true
        multipass_identifier:
          type: string
          description: The customer's identifier used with Multipass login
          nullable: true
        last_name:
          type: string
          description: The customer's last name.
          nullable: true
        last_order_id:
          type: integer
          description: The id of the customer's last order.
          format: int64
          nullable: true
        last_order_name:
          type: string
          description: The name of the customer's last order. This is directly related to the Order's name field.
          nullable: true
        note:
          type: string
          description: A note about the customer.
          nullable: true
        orders_count:
          type: integer
          description: The number of orders associated with this customer.
          format: int32
          nullable: true
        phone:
          type: string
          description: "The phone number for the customer. Valid formats can be of different types, for example:\r\n\r\n6135551212\r\n\r\n+16135551212\r\n\r\n555-1212\r\n\r\n(613)555-1212\r\n\r\n+1 613-555-1212"
          nullable: true
        state:
          type: string
          description: 'The state of the customer in a shop. Valid values are ''disabled'', ''decline'', ''invited'' and ''enabled''.'
          nullable: true
        tags:
          type: string
          description: Tags are additional short descriptors formatted as a string of comma-separated values.
          nullable: true
        tax_exempt:
          type: boolean
          description: Indicates whether the customer should be charged taxes when placing orders.
          nullable: true
        tax_exemptions:
          type: array
          items:
            type: string
          description: Whether the customer is exempt from paying specific taxes on their order. Canadian taxes only.
          nullable: true
        total_spent:
          type: number
          description: The total amount of money that the customer has spent at the shop.
          format: decimal
          nullable: true
        updated_at:
          type: string
          description: The date and time when the customer information was updated.
          format: date-time
          nullable: true
        verified_email:
          type: boolean
          description: States whether or not the email address has been verified.
          nullable: true
        metafields:
          type: array
          items:
            $ref: '#/components/schemas/CustomerMetafield'
          nullable: true
        accepts_marketing_updated_at:
          type: string
          description: 'As of API version 2022-04, this field is deprecated. Use email_marketing_consent instead. The date and time (ISO 8601 format) when the customer consented or objected to receiving marketing material by email. Set this value whenever the customer consents or objects to marketing materials.'
          format: date-time
          nullable: true
          deprecated: true
        email_marketing_consent:
          $ref: '#/components/schemas/EmailMarketingConsent'
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: { }
    CustomerAddress:
      required:
        - id
      type: object
      properties:
        customer_id:
          type: integer
          format: int64
        address1:
          type: string
          description: The mailing address.
          nullable: true
        address2:
          type: string
          description: An additional field for the mailing address.
          nullable: true
        city:
          type: string
          description: The city.
          nullable: true
        company:
          type: string
          description: The company.
          nullable: true
        country:
          type: string
          description: The country.
          nullable: true
        country_code:
          type: string
          description: The two-letter country code corresponding to the country.
          nullable: true
        country_name:
          type: string
          description: The normalized country name.
          nullable: true
        default:
          type: boolean
          description: Indicates whether this address is the default address.
          nullable: true
        first_name:
          type: string
          description: The first name.
          nullable: true
        last_name:
          type: string
          description: The last name.
          nullable: true
        latitude:
          type: number
          description: The latitude. Auto-populated by Shopify on the order's Billing/Shipping address.
          format: decimal
          nullable: true
        longitude:
          type: number
          description: The longitude. Auto-populated by Shopify on the order's Billing/Shipping address.
          format: decimal
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
        phone:
          type: string
          description: The phone number.
          nullable: true
        province:
          type: string
          description: The province or state name
          nullable: true
        province_code:
          type: string
          description: The two-letter province or state code.
          nullable: true
        zip:
          type: string
          description: The ZIP or postal code.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: { }
    CustomerMetafield:
      required:
        - id
      type: object
      properties:
        created_at:
          type: string
          description: The date and time when the metafield was created.
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: The date and time when the metafield was last updated.
          format: date-time
          nullable: true
        key:
          type: string
          description: Identifier for the metafield (maximum of 30 characters).
          nullable: true
        value:
          description: Information to be stored as metadata. Must be either a string or an int.
        value_type:
          type: string
          description: States whether the information in the value is stored as a 'string' or 'integer.'
          nullable: true
        namespace:
          type: string
          description: Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters).
          nullable: true
        description:
          type: string
          description: Additional information about the metafield.
          nullable: true
        owner_id:
          type: integer
          description: 'The Id of the Shopify Resource that the metafield is associated with. This value could be the id of things like product, order, variant, collection.'
          format: int64
          nullable: true
        owner_resource:
          type: string
          description: 'The name of the Shopify Resource that the metafield is associated with. This could be things like product, order, variant, collection.'
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: { }
    DiscountAllocation:
      type: object
      properties:
        amount:
          type: string
          description: The discount amount allocated to the line (not sure why it is a string)
          nullable: true
        discount_application_index:
          type: integer
          description: The index of the associated discount application in the order's discount_applications list.
          format: int64
        amount_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    DiscountCode:
      required:
        - id
      type: object
      properties:
        amount:
          type: string
          description: The amount of the discount.
          nullable: true
        code:
          type: string
          description: The discount code.
          nullable: true
        type:
          type: string
          description: 'The type of discount. Known values are ''percentage'', ''shipping'', ''fixed_amount'' and ''none''.'
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: { }
    EmailMarketingConsent:
      type: object
      properties:
        state:
          type: string
          description: The current email marketing state for the customer.
          nullable: true
        opt_in_level:
          type: string
          description: 'The marketing subscription opt-in level, as described in the M3AAWG Sender Best Common Practices, that the customer gave when they consented to receive marketing material by email.'
          nullable: true
        consent_updated_at:
          type: string
          description: 'The date and time when the customer consented to receive marketing material by email. If no date is provided, then the date and time when the consent information was sent is used.'
          format: date-time
          nullable: true
      additionalProperties: { }
    ErrorResponse:
      type: object
      properties:
        errors:
          type: string
          nullable: true
      additionalProperties: false
    LineItemDuty:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        harmonized_system_code:
          type: string
          nullable: true
        country_code_of_origin:
          type: string
          nullable: true
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
      additionalProperties: { }
    LineItemOriginLocation:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        country_code:
          type: string
          description: The two-letter code (ISO 3166-1 format) for the country of the item's supplier.
          nullable: true
        province_code:
          type: string
          description: The two-letter abbreviation for the region of the item's supplier.
          nullable: true
        name:
          type: string
          description: The two-letter abbreviation for the region of the item's supplier.
          nullable: true
        address1:
          type: string
          description: The name of the item's supplier.
          nullable: true
        address2:
          type: string
          description: The suite number of the item's supplier.
          nullable: true
        city:
          type: string
          description: The suite number of the item's supplier.
          nullable: true
        zip:
          type: string
          description: The city of the item's supplier.
          nullable: true
      additionalProperties: { }
    LineItemProperty:
      type: object
      properties:
        name:
          description: The name of the note attribute.
        value:
          description: The value of the note attribute.
      additionalProperties: { }
      description: An object representing a properties for OpenShopify.Admin.Builder.Models.LineItem.Properties
    Price:
      type: object
      properties:
        currency_code:
          type: string
          description: The three-letter code (ISO 4217 format) for currency.
          nullable: true
        amount:
          type: number
          description: The amount in the currency.
          format: decimal
          nullable: true
      additionalProperties: { }
    PriceSet:
      type: object
      properties:
        shop_money:
          $ref: '#/components/schemas/Price'
        presentment_money:
          $ref: '#/components/schemas/Price'
      additionalProperties: { }
    ShippingLine:
      type: object
      properties:
        carrier_identifier:
          type: string
          description: The carrier provided identifier.
          nullable: true
        code:
          type: string
          description: A reference to the shipping method.
          nullable: true
        phone:
          type: string
          description: The phone number used for the shipment.
          nullable: true
        price:
          type: number
          description: The price of this shipping method.
          format: decimal
          nullable: true
        discounted_price:
          type: number
          description: The discounted price of this shipping method.
          format: decimal
          nullable: true
        discount_allocations:
          type: array
          items:
            $ref: '#/components/schemas/DiscountAllocation'
          description: An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
        source:
          type: string
          description: The source of the shipping method.
          nullable: true
        title:
          type: string
          description: The title of the shipping method.
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'A list of OpenShopify.Admin.Builder.Models.TaxLine objects, each of which details the taxes applicable to this OpenShopify.Admin.Builder.Models.ShippingLine.'
        price_set:
          $ref: '#/components/schemas/PriceSet'
        discounted_price_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    TaxLine:
      type: object
      properties:
        price:
          type: number
          description: The amount of tax to be charged.
          format: decimal
          nullable: true
        rate:
          type: number
          description: The rate of tax to be applied.
          format: decimal
          nullable: true
        title:
          type: string
          description: The name of the tax.
          nullable: true
        price_set:
          $ref: '#/components/schemas/PriceSet'
      additionalProperties: { }
    UpdateCheckout:
      required:
        - id
      type: object
      properties:
        abandoned_checkout_url:
          type: string
          description: The full recovery URL to be sent to a customer to recover their abandoned checkout.
          nullable: true
        billing_address:
          $ref: '#/components/schemas/Address'
        buyer_accepts_marketing:
          type: boolean
          description: "Indicates whether or not the person who placed the order would like to receive email \r\nupdates from the shop. This is set when checking the \"I want to receive occasional \r\nemails about new products, promotions and other news\" checkbox during checkout."
          nullable: true
        cart_token:
          type: string
          description: Unique identifier for a particular cart that is attached to a particular order.
          nullable: true
        closed_at:
          type: string
          description: The date and time when the abandoned cart was completed. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        completed_at:
          type: string
          description: The date and time when the abandoned cart was last modified. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        created_at:
          type: string
          description: The date and time when the abandoned cart was created. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        currency:
          type: string
          description: The three letter code (ISO 4217) for the currency used for the payment.
          nullable: true
        customer:
          $ref: '#/components/schemas/Customer'
        customer_locale:
          type: string
          description: 'The two or three-letter language code, optionally followed by a region modifier. Example values: en, en-CA.'
          nullable: true
        device_id:
          type: integer
          description: The ID of the Shopify POS device that created the checkout.
          format: int64
          nullable: true
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode'
          description: Applicable discount codes that can be applied to the order. If no codes exist the value will default to blank.
        email:
          type: string
          description: The customer's email address.
          nullable: true
        gateway:
          type: string
          description: The payment gateway used.
          nullable: true
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when entering the shop.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutLineItem'
          description: 'A list of line item objects, each one containing information about an item in the order.'
        location_id:
          type: integer
          description: The ID of the physical location where the checkout was processed.
          format: int64
          nullable: true
        note:
          type: string
          description: The text of an optional note that a shop owner can attach to the order.
          nullable: true
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications.
          nullable: true
        presentment_currency:
          type: string
          description: The three-letter code (ISO 4217 format) of the currency that the customer used at checkout.
          nullable: true
        referring_site:
          type: string
          description: The website that the customer clicked on to come to the shop.
          nullable: true
        shipping_address:
          $ref: '#/components/schemas/Address'
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          description: 'An array of shipping line objects, each of which details the shipping methods used.'
        source_name:
          type: string
          description: 'Where the checkout originated. Known values are: "web", "pos", "iphone", and "android"'
          nullable: true
        subtotal_price:
          type: number
          description: Price of the order before shipping and taxes
          format: decimal
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'An array of tax line objects, each of which details the taxes applicable to the order.'
        taxes_included:
          type: boolean
          description: Whether taxes are included in the price.
          nullable: true
        token:
          type: string
          description: Unique identifier for a particular order.
          nullable: true
        total_discounts:
          type: number
          description: The total amount of the discounts to be applied to the price of the order.
          format: decimal
          nullable: true
        total_duties:
          type: number
          description: The total duties of the checkout in presentment currency.
          format: decimal
          nullable: true
        total_line_items_price:
          type: number
          description: The sum of all the prices of all the items in the order.
          format: decimal
          nullable: true
        total_price:
          type: number
          description: 'The sum of all the prices of all the items in the order, taxes and discounts included.'
          format: decimal
          nullable: true
        total_tax:
          type: number
          description: The sum of all the taxes applied to the line items in the order.
          format: decimal
          nullable: true
        total_weight:
          type: number
          description: 'The sum of all the weights of the line items in the order, in grams.'
          format: decimal
          nullable: true
        updated_at:
          type: string
          description: The date and time when the abandoned cart was last modified. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        user_id:
          type: integer
          description: The ID of the user who created the checkout.
          format: int64
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: { }
    UpdateCheckoutRequest:
      required:
        - id
      type: object
      properties:
        abandoned_checkout_url:
          type: string
          description: The full recovery URL to be sent to a customer to recover their abandoned checkout.
          nullable: true
        billing_address:
          $ref: '#/components/schemas/Address'
        buyer_accepts_marketing:
          type: boolean
          description: "Indicates whether or not the person who placed the order would like to receive email \r\nupdates from the shop. This is set when checking the \"I want to receive occasional \r\nemails about new products, promotions and other news\" checkbox during checkout."
          nullable: true
        cart_token:
          type: string
          description: Unique identifier for a particular cart that is attached to a particular order.
          nullable: true
        closed_at:
          type: string
          description: The date and time when the abandoned cart was completed. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        completed_at:
          type: string
          description: The date and time when the abandoned cart was last modified. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        created_at:
          type: string
          description: The date and time when the abandoned cart was created. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        currency:
          type: string
          description: The three letter code (ISO 4217) for the currency used for the payment.
          nullable: true
        customer:
          $ref: '#/components/schemas/Customer'
        customer_locale:
          type: string
          description: 'The two or three-letter language code, optionally followed by a region modifier. Example values: en, en-CA.'
          nullable: true
        device_id:
          type: integer
          description: The ID of the Shopify POS device that created the checkout.
          format: int64
          nullable: true
        discount_codes:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCode'
          description: Applicable discount codes that can be applied to the order. If no codes exist the value will default to blank.
        email:
          type: string
          description: The customer's email address.
          nullable: true
        gateway:
          type: string
          description: The payment gateway used.
          nullable: true
        landing_site:
          type: string
          description: The URL for the page where the buyer landed when entering the shop.
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutLineItem'
          description: 'A list of line item objects, each one containing information about an item in the order.'
        location_id:
          type: integer
          description: The ID of the physical location where the checkout was processed.
          format: int64
          nullable: true
        note:
          type: string
          description: The text of an optional note that a shop owner can attach to the order.
          nullable: true
        phone:
          type: string
          description: The customer's phone number for receiving SMS notifications.
          nullable: true
        presentment_currency:
          type: string
          description: The three-letter code (ISO 4217 format) of the currency that the customer used at checkout.
          nullable: true
        referring_site:
          type: string
          description: The website that the customer clicked on to come to the shop.
          nullable: true
        shipping_address:
          $ref: '#/components/schemas/Address'
        shipping_lines:
          type: array
          items:
            $ref: '#/components/schemas/ShippingLine'
          description: 'An array of shipping line objects, each of which details the shipping methods used.'
        source_name:
          type: string
          description: 'Where the checkout originated. Known values are: "web", "pos", "iphone", and "android"'
          nullable: true
        subtotal_price:
          type: number
          description: Price of the order before shipping and taxes
          format: decimal
          nullable: true
        tax_lines:
          type: array
          items:
            $ref: '#/components/schemas/TaxLine'
          description: 'An array of tax line objects, each of which details the taxes applicable to the order.'
        taxes_included:
          type: boolean
          description: Whether taxes are included in the price.
          nullable: true
        token:
          type: string
          description: Unique identifier for a particular order.
          nullable: true
        total_discounts:
          type: number
          description: The total amount of the discounts to be applied to the price of the order.
          format: decimal
          nullable: true
        total_duties:
          type: number
          description: The total duties of the checkout in presentment currency.
          format: decimal
          nullable: true
        total_line_items_price:
          type: number
          description: The sum of all the prices of all the items in the order.
          format: decimal
          nullable: true
        total_price:
          type: number
          description: 'The sum of all the prices of all the items in the order, taxes and discounts included.'
          format: decimal
          nullable: true
        total_tax:
          type: number
          description: The sum of all the taxes applied to the line items in the order.
          format: decimal
          nullable: true
        total_weight:
          type: number
          description: 'The sum of all the weights of the line items in the order, in grams.'
          format: decimal
          nullable: true
        updated_at:
          type: string
          description: The date and time when the abandoned cart was last modified. The API returns this value in ISO 8601 format.
          format: date-time
          nullable: true
        user_id:
          type: integer
          description: The ID of the user who created the checkout.
          format: int64
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        checkout:
          $ref: '#/components/schemas/UpdateCheckout'
      additionalProperties: { }
    UpdateMobilePlatformApplication:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: { }
    UpdateMobilePlatformApplicationRequest:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        mobile_platform_application:
          $ref: '#/components/schemas/UpdateMobilePlatformApplication'
      additionalProperties: { }
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
security:
  - ApiKey: [ ]
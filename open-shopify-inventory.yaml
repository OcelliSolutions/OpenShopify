openapi: 3.0.1
info:
  title: Inventory
  description: Inventory
  version: '2022-07'
servers:
  - url: 'https://{store_name}.myshopify.com/admin/api/{api_version}'
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
      api_version:
        default: '2022-07'
        description: The api version.
  - url: 'https://{store_name}.myshopify.com/admin'
    description: Some endpoints do not use the standard routing. This is an alternate.
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
paths:
  /inventory_items.json:
    get:
      tags:
        - InventoryItem
      summary: Retrieves a list of inventory items
      operationId: ListInventoryItems
      parameters:
        - name: ids
          in: query
          description: Show only inventory items specified by a comma-separated list of IDs.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: limit
          in: query
          description: The maximum number of results to show.
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          description: A unique ID used to access a certain page of results.
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemList'
  '/inventory_items/{inventory_item_id}.json':
    get:
      tags:
        - InventoryItem
      summary: Retrieves a single inventory item by ID
      operationId: GetInventoryItem
      parameters:
        - name: inventory_item_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemItem'
    put:
      tags:
        - InventoryItem
      summary: Updates an existing inventory item
      operationId: UpdateInventoryItem
      parameters:
        - name: inventory_item_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInventoryItemRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateInventoryItemRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemItem'
  /inventory_levels.json:
    get:
      tags:
        - InventoryLevel
      summary: Retrieves a list of inventory levels
      operationId: ListInventoryLevels
      parameters:
        - name: inventory_item_ids
          in: query
          description: 'A comma-separated list of inventory item IDs. To find the ID of an inventory item, use the [Inventory Item resource](/api/admin-rest/latest/resources/inventoryitem)'
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: limit
          in: query
          description: The maximum number of results to show.
          schema:
            type: integer
            format: int32
        - name: page_info
          in: query
          description: A unique ID used to access a certain page of results.
          schema:
            type: string
        - name: location_ids
          in: query
          description: 'A comma-separated list of location IDs. To find the ID of a location, use the [Location resource](/api/admin-rest/latest/resources/location)'
          schema:
            type: string
        - name: updated_at_min
          in: query
          description: 'Show inventory levels updated at or after date (format: 2019-03-19T01:21:44-04:00).'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryLevelList'
    delete:
      tags:
        - InventoryLevel
      summary: Deletes an inventory level from a location
      operationId: DeleteInventoryLevelFromLocation
      parameters:
        - name: inventory_item_id
          in: query
          description: The ID for the inventory item.
          required: true
          schema:
            type: integer
            format: int64
        - name: location_id
          in: query
          description: 'The ID of the location that the inventory level belongs to. To find the ID of the location, use the [Location resource](/api/admin-rest/latest/resources/location)'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
  /inventory_levels/adjust.json:
    post:
      tags:
        - InventoryLevel
      summary: Adjusts the inventory level of an inventory item at a location
      operationId: AdjustInventoryLevelOfInventoryItemAtLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustInventoryLevelOfInventoryItemAtLocationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdjustInventoryLevelOfInventoryItemAtLocationRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryLevelItem'
  /inventory_levels/connect.json:
    post:
      tags:
        - InventoryLevel
      summary: Connects an inventory item to a location
      operationId: ConnectInventoryItemToLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectInventoryItemToLocationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConnectInventoryItemToLocationRequest'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryLevelItem'
  /inventory_levels/set.json:
    post:
      tags:
        - InventoryLevel
      summary: Sets the inventory level for an inventory item at a location
      operationId: SetInventoryLevelForInventoryItemAtLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInventoryLevelForInventoryItemAtLocationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetInventoryLevelForInventoryItemAtLocationRequest'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryLevelItem'
  /locations.json:
    get:
      tags:
        - Location
      summary: Retrieve a list of locations
      operationId: ListLocations
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationList'
  '/locations/{location_id}.json':
    get:
      tags:
        - Location
      summary: Retrieve a single location by its ID
      operationId: GetLocation
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationItem'
  /locations/count.json:
    get:
      tags:
        - Location
      summary: Retrieve a count of locations
      operationId: CountLocations
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountItem'
  '/locations/{location_id}/inventory_levels.json':
    get:
      tags:
        - Location
      summary: Retrieve a list of inventory levels for a location
      operationId: ListInventoryLevelsForLocation
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationList'
components:
  schemas:
    AdjustInventoryLevelOfInventoryItemAtLocationRequest:
      required:
        - available_adjustment
        - inventory_item_id
        - location_id
      type: object
      properties:
        inventory_item_id:
          type: integer
          description: The unique identifier of the inventory item that the inventory level belongs to.
          format: int64
        location_id:
          type: integer
          description: The unique identifier of the location that the inventory level belongs to.
          format: int64
        available_adjustment:
          type: integer
          description: The quantity adjust of inventory items.
          format: int32
      additionalProperties: false
    ConnectInventoryItemToLocationRequest:
      required:
        - inventory_item_id
        - location_id
      type: object
      properties:
        inventory_item_id:
          type: integer
          description: The ID of the inventory item.
          format: int64
        location_id:
          type: integer
          description: 'The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource.'
          format: int64
        relocate_if_necessary:
          type: boolean
          description: 'Whether inventory for any previously connected locations will be relocated. This property is ignored when no fulfillment service location is involved. For more information, refer to Inventory levels and fulfillment service locations.'
          nullable: true
      additionalProperties: false
    CountItem:
      type: object
      properties:
        count:
          type: integer
          format: int32
      additionalProperties: { }
    HsCode:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        country_code:
          type: string
          description: The two-digit code for the country where the inventory item was made.
          nullable: true
        harmonized_system_code:
          type: string
          description: The general Harmonized System (HS) code for the inventory item. Used if a country-specific HS code is not available.
          nullable: true
      additionalProperties: { }
    InventoryItem:
      required:
        - id
      type: object
      properties:
        cost:
          type: number
          description: The unit cost of the inventory item. The shop's default currency is used.
          format: decimal
          nullable: true
        country_code_of_origin:
          type: string
          description: 'The country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)) of where the item came from.'
          nullable: true
        country_harmonized_system_codes:
          type: array
          items:
            $ref: '#/components/schemas/HsCode'
          description: 'An array of country-specific [Harmonized System](https://en.wikipedia.org/wiki/Harmonized_System) (HS) codes for the item. Used to determine duties when shipping the inventory item to certain countries.'
          nullable: true
        harmonized_system_code:
          type: string
          description: 'The general [Harmonized System](https://en.wikipedia.org/wiki/Harmonized_System) (HS) code for the inventory item. Used if a country-specific HS code (`countryHarmonizedSystemCode`) is not available.'
          nullable: true
        province_code_of_origin:
          type: string
          description: 'The province code ([ISO 3166-2 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-2)) of where the item came from. The province code is only used if the shipping provider for the inventory item is Canada Post.'
          nullable: true
        sku:
          type: string
          description: The unique SKU (stock keeping unit) of the inventory item.
          nullable: true
        tracked:
          type: boolean
          description: 'Whether inventory levels are tracked for the item. If true, then the inventory quantity changes are tracked by Shopify.'
          nullable: true
        requires_shipping:
          type: boolean
          description: Whether a customer needs to provide a shipping address when placing an order containing the inventory item.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    InventoryItemItem:
      required:
        - inventory_item
      type: object
      properties:
        inventory_item:
          $ref: '#/components/schemas/InventoryItem'
      additionalProperties: { }
    InventoryItemList:
      required:
        - inventory_items
      type: object
      properties:
        inventory_items:
          type: array
          items:
            $ref: '#/components/schemas/InventoryItem'
      additionalProperties: { }
    InventoryLevel:
      required:
        - id
        - inventory_item_id
      type: object
      properties:
        available:
          type: integer
          description: The available quantity of an inventory item at the inventory level's associated location. Returns `null` if the inventory item is not tracked.
          format: int64
          nullable: true
        inventory_item_id:
          type: integer
          description: 'The ID of the inventory item associated with the inventory level. To find the ID of an inventory item, use the [Inventory Item resource](/api/admin-rest/latest/resources/inventoryitem)'
          format: int64
        location_id:
          type: integer
          description: 'The ID of the location that the inventory level belongs to. To find the ID of the location, use the [Location resource](/api/admin-rest/latest/resources/location)'
          format: int64
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    InventoryLevelItem:
      required:
        - inventory_level
      type: object
      properties:
        inventory_level:
          $ref: '#/components/schemas/InventoryLevel'
      additionalProperties: { }
    InventoryLevelList:
      required:
        - inventory_levels
      type: object
      properties:
        inventory_levels:
          type: array
          items:
            $ref: '#/components/schemas/InventoryLevel'
      additionalProperties: { }
    Location:
      required:
        - id
      type: object
      properties:
        active:
          type: boolean
          description: 'Whether the location is active. If `true`, then the location can be used to sell products,stock inventory, and fulfill orders. Merchants can deactivate locations from the Shopify admin.Deactivated locations don''t contribute to the shop''s[location limit](https://help.shopify.com/manual/locations/setting-up-your-locations).'
          nullable: true
        address1:
          type: string
          description: The location's street address.
          nullable: true
        address2:
          type: string
          description: The optional second line of the location's street address.
          nullable: true
        city:
          type: string
          description: The city the location is in.
          nullable: true
        country:
          type: string
          description: The country the location is in.
          nullable: true
        country_code:
          type: string
          description: 'The two-letter code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format) corresponding to country the location is in.'
          nullable: true
        legacy:
          type: boolean
          description: 'Whether this is a fulfillment service location. If `true`, then the location is a fulfillment service location. If `false`, then the location was created by the merchant and isn''t tied to a fulfillment service.'
          nullable: true
        name:
          type: string
          description: The name of the location.
          nullable: true
        phone:
          type: string
          description: 'The phone number of the location. This value can contain special characters, such as `-` or `+`.'
          nullable: true
        province:
          type: string
          description: 'The province, state, or district of the location.'
          nullable: true
        province_code:
          type: string
          description: 'The province, state, or district code ([ISO 3166-2 alpha-2 format](https://en.wikipedia.org/wiki/ISO_3166-2)) of the location.'
          nullable: true
        zip:
          type: string
          description: The zip or postal code.
          nullable: true
        localized_country_name:
          type: string
          description: The localized name of the location's country.
          nullable: true
        localized_province_name:
          type: string
          description: 'The localized name of the location''s region. Typically a province, state, or district.'
          nullable: true
        country_name:
          type: string
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    LocationItem:
      required:
        - location
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Location'
      additionalProperties: { }
    LocationList:
      required:
        - locations
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
      additionalProperties: { }
    SetInventoryLevelForInventoryItemAtLocationRequest:
      required:
        - available
        - inventory_item_id
        - location_id
      type: object
      properties:
        inventory_item_id:
          type: integer
          description: The ID of the inventory item.
          format: int64
        location_id:
          type: integer
          description: 'The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource.'
          format: int64
        available:
          type: number
          description: Sets the available inventory quantity.
          format: decimal
        disconnect_if_necessary:
          type: boolean
          description: 'Whether inventory for any previously connected locations will be set to 0 and the locations disconnected. This property is ignored when no fulfillment service is involved. For more information, refer to Inventory levels and fulfillment service locations.'
          nullable: true
      additionalProperties: false
    UpdateInventoryItem:
      required:
        - id
      type: object
      properties:
        cost:
          type: number
          description: The unit cost of the inventory item. The shop's default currency is used.
          format: decimal
          nullable: true
        country_code_of_origin:
          type: string
          description: 'The country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)) of where the item came from.'
          nullable: true
        country_harmonized_system_codes:
          type: array
          items:
            $ref: '#/components/schemas/HsCode'
          description: 'An array of country-specific [Harmonized System](https://en.wikipedia.org/wiki/Harmonized_System) (HS) codes for the item. Used to determine duties when shipping the inventory item to certain countries.'
          nullable: true
        harmonized_system_code:
          type: string
          description: 'The general [Harmonized System](https://en.wikipedia.org/wiki/Harmonized_System) (HS) code for the inventory item. Used if a country-specific HS code (`countryHarmonizedSystemCode`) is not available.'
          nullable: true
        province_code_of_origin:
          type: string
          description: 'The province code ([ISO 3166-2 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-2)) of where the item came from. The province code is only used if the shipping provider for the inventory item is Canada Post.'
          nullable: true
        sku:
          type: string
          description: The unique SKU (stock keeping unit) of the inventory item.
          nullable: true
        tracked:
          type: boolean
          description: 'Whether inventory levels are tracked for the item. If true, then the inventory quantity changes are tracked by Shopify.'
          nullable: true
        requires_shipping:
          type: boolean
          description: Whether a customer needs to provide a shipping address when placing an order containing the inventory item.
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
      additionalProperties: false
    UpdateInventoryItemRequest:
      required:
        - inventory_item
      type: object
      properties:
        inventory_item:
          $ref: '#/components/schemas/UpdateInventoryItem'
      additionalProperties: false
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
security:
  - ApiKey: [ ]
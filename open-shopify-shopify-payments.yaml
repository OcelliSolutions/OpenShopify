openapi: 3.0.1
info:
  title: Shopify Payments
  description: Shopify Payments
  version: '2022-04'
servers:
  - url: 'https://{store_name}.myshopify.com/admin/api/{api_version}'
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
      api_version:
        default: '2022-04'
        description: The api version.
  - url: 'https://{store_name}.myshopify.com/admin'
    description: Some endpoints do not use the standard routing. This is an alternate.
    variables:
      store_name:
        default: '{{store_name}}'
        description: The sub-domain of the storefront.
paths:
  /shopify_payments/balance.json:
    get:
      tags:
        - Balance
      summary: Return the current balance
      operationId: GetCurrentBalance
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceItem'
  /shopify_payments/disputes.json:
    get:
      tags:
        - Dispute
      summary: Return a list of all disputes
      operationId: ListDisputes
      parameters:
        - name: initiated_at
          in: query
          description: 'Return only disputes with the specified `initiated_at` date ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).'
          schema:
            type: string
        - name: last_id
          in: query
          description: Return only disputes before the specified ID.
          schema:
            type: integer
            format: int64
        - name: since_id
          in: query
          description: Return only disputes after the specified ID.
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: Return only disputes with the specified status.
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeList'
  '/shopify_payments/disputes/{dispute_id}.json':
    get:
      tags:
        - Dispute
      summary: Return a single dispute
      operationId: GetDispute
      parameters:
        - name: dispute_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeItem'
  /shopify_payments/payouts.json:
    get:
      tags:
        - Payouts
      summary: Return a list of all payouts
      operationId: ListPayouts
      parameters:
        - name: date
          in: query
          description: Filter the response to payouts made on the specified date.
          schema:
            type: string
            format: date-time
        - name: date_max
          in: query
          description: Filter the response to payouts made inclusively before the specified date.
          schema:
            type: string
            format: date-time
        - name: date_min
          in: query
          description: Filter the response to payouts made inclusively after the specified date.
          schema:
            type: string
            format: date-time
        - name: last_id
          in: query
          description: Filter the response to payouts made before the specified ID.
          schema:
            type: integer
            format: int64
        - name: since_id
          in: query
          description: Filter the response to payouts made after the specified ID.
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: Filter the response to payouts made with the specified status.
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutList'
  '/shopify_payments/payouts/{payout_id}.json':
    get:
      tags:
        - Payouts
      summary: Return a single payout
      operationId: GetPayout
      parameters:
        - name: payout_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutItem'
  /shopify_payments/balance/transactions.json:
    get:
      tags:
        - Transactions
      summary: Return a list of all balance transactions
      operationId: ListBalanceTransactions
      parameters:
        - name: payout_id
          in: query
          description: Filter response to transactions paid out in the specified payout.
          schema:
            type: integer
            format: int64
        - name: last_id
          in: query
          description: Filter response to transactions exclusively before the specified ID
          schema:
            type: integer
            format: int64
        - name: payout_status
          in: query
          description: Filter response to transactions with the specified payout status
          schema:
            type: string
        - name: since_id
          in: query
          description: Filter response to transactions exclusively after the specified ID.
          schema:
            type: integer
            format: int64
        - name: test
          in: query
          description: Filter response to transactions placed in test mode.
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          headers:
            Link:
              description: 'The link header includes a `rel` parameter, where `relation-types` describes the relation of the linked page to the current page of results. The value can either be `previous` or `next`. If your initial request doesn''t return enough records to generate an additional page of results, then the response won''t have a link header.'
              schema:
                type: string
            X-Shopify-Shop-Api-Call-Limit:
              description: How many requests you’ve made for a particular store
              schema:
                type: string
            Retry-After:
              description: Contains the number of seconds to wait until you can make a request again.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
components:
  schemas:
    Balance:
      type: object
      properties:
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    BalanceItem:
      required:
        - balance
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/Balance'
      additionalProperties: { }
    CurrencyExchangeAdjustment:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: The object's unique id.
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        adjustment:
          type: number
          description: The difference between the amounts on the associated transaction and the parent transaction.
          format: decimal
          nullable: true
        original_amount:
          type: number
          description: The amount of the parent transaction in the shop currency.
          format: decimal
          nullable: true
        final_amount:
          type: number
          description: The amount of the associated transaction in the shop currency.
          format: decimal
          nullable: true
        currency:
          type: string
          description: The shop currency.
          nullable: true
      additionalProperties: { }
    Dispute:
      required:
        - id
      type: object
      properties:
        order_id:
          type: integer
          description: The ID of the order that the dispute belongs to.
          format: int64
          nullable: true
        type:
          type: string
          description: "Whether the dispute is still in the inquiry phase or has turned into a chargeback. Valid values: \r\n\r\n*   **inquiry**: The dispute is in the inquiry phase. \r\n*   **chargeback**: The dispute has turned into a chargeback."
          nullable: true
        currency:
          type: string
          description: 'The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code of the dispute amount.'
          nullable: true
        amount:
          type: number
          description: The total amount disputed by the cardholder.
          format: decimal
          nullable: true
        reason:
          type: string
          description: "The reason of the dispute provided by the cardholder's bank. Valid values: \r\n\r\n*   **bank_not_process**: The customer's bank cannot process the charge. \r\n*   **credit_not_processed**: The customer claims that the purchased product was returned or the transaction was otherwise canceled, but the merchant have not yet provided a refund or credit.  \r\n*   **customer_initiated**: The customer initiated the dispute, so the merchant should contact the customer for additional details to find out why the payment was disputed.  \r\n*   **debit_not_authorized**: The customer's bank cannot proceed with the debit since it has not been authorized.  \r\n*   **duplicate**: The customer claims they were charged multiple times for the same product or service.  \r\n*   **fraudulent**: The cardholder claims that they didn't authorize the payment. \r\n*   **general**: The dispute is uncategorized, so the merchant should contact the customer for additional details to find out why the payment was disputed.  \r\n*   **incorrect_account_details**: The customer account associated with the purchase is incorrect.  \r\n*   **insufficient_funds**: The customer's bank account has insufficient funds. \r\n*   **product_not_received**: The customer claims they did not receive the products or services purchased.  \r\n*   **product_unacceptable**: The product or service was received but was defective, damaged, or not as described.  \r\n*   **subscription_canceled**: The customer claims that the merchant continued to charge them after a subscription was canceled.  \r\n*   **unrecognized**: The customer doesn't recognize the payment appearing on their card statement."
          nullable: true
        network_reason_code:
          type: string
          description: The reason for the dispute provided by the cardholder's bank.
          nullable: true
        status:
          type: string
          description: "The current state of the dispute. Valid values: \r\n\r\n*   **needs_response**: The dispute has been open and needs an evidence submission. \r\n*   **under_review**: The evidence has been submitted and is being reviewed by the cardholder's bank.  \r\n*   **charge_refunded**: The merchant refunded the inquiry amount. \r\n*   **accepted**: The merchant has accepted the dispute as being valid. \r\n*   **won**: The cardholder's bank reached a final decision in the merchant's favor. \r\n*   **lost**: The cardholder's bank reached a final decision in the buyer's favor."
          nullable: true
        evidence_due_by:
          type: string
          description: The deadline for evidence submission.
          nullable: true
        evidence_sent_on:
          type: string
          description: '"The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when evidence was sent. Returns `null` if evidence has not yet been sent.'
          nullable: true
        finalized_on:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when this dispute was resolved. Returns `null` if the dispute is not yet resolved.'
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    DisputeItem:
      required:
        - dispute
      type: object
      properties:
        dispute:
          $ref: '#/components/schemas/Dispute'
      additionalProperties: { }
    DisputeList:
      required:
        - disputes
      type: object
      properties:
        disputes:
          type: array
          items:
            $ref: '#/components/schemas/Dispute'
      additionalProperties: { }
    ExtendedAuthorizationAttributes:
      type: object
      properties:
        standard_authorization_expires_at:
          type: string
          description: 'The date and time (ISO 8601 format) when the standard authorization period expires. After expiry, an extended authorization fee is applied upon capturing the payment.'
          format: date-time
          nullable: true
        extended_authorization_expires_at:
          type: string
          description: 'The date and time (ISO 8601 format) when the extended authorization period expires. After expiry, the merchant can''t capture the payment.'
          format: date-time
          nullable: true
      additionalProperties: { }
    PaymentDetails:
      type: object
      properties:
        avs_result_code:
          type: string
          nullable: true
        credit_card_bin:
          type: string
          nullable: true
        cvv_result_code:
          type: string
          nullable: true
        credit_card_number:
          type: string
          nullable: true
        credit_card_company:
          type: string
          nullable: true
      additionalProperties: { }
    PaymentsRefundAttributeStatus:
      enum:
        - pending
        - failure
        - success
        - error
      type: string
      additionalProperties: { }
    PaymentsRefundAttributes:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PaymentsRefundAttributeStatus'
        acquirer_reference_number:
          type: string
          description: A unique number associated with the transaction that can be used to track the refund. This property has a value only for transactions completed with Visa or Mastercard.
          nullable: true
      additionalProperties: { }
    Payout:
      required:
        - id
      type: object
      properties:
        status:
          type: string
          description: "The transfer status of the payout. The value will be one of the following: \r\n\r\n*   **scheduled**: The payout has been created and had transactions assigned to it, but it has not yet been submitted to the bank.  \r\n*   **in_transit**: The payout has been submitted to the bank for processing. \r\n*   **paid**: The payout has been successfully deposited into the bank. \r\n*   **failed**: The payout has been declined by the bank. \r\n*   **canceled**: The payout has been canceled by Shopify."
          nullable: true
        date:
          type: string
          description: 'The date ([ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601)) when the payout was issued.'
          format: date-time
          nullable: true
        currency:
          type: string
          description: The ISO 4217 currency code of the payout.
          nullable: true
        amount:
          type: number
          description: 'The total amount of the payout, in a decimal formatted string.'
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    PayoutItem:
      required:
        - payout
      type: object
      properties:
        payout:
          $ref: '#/components/schemas/Payout'
      additionalProperties: { }
    PayoutList:
      required:
        - payouts
      type: object
      properties:
        payouts:
          type: array
          items:
            $ref: '#/components/schemas/Payout'
      additionalProperties: { }
    Transaction:
      required:
        - id
      type: object
      properties:
        amount:
          type: number
          description: 'The amount of money included in the transaction. If you don''t provide a value for `amount`, then it defaults to the total cost of the order (even if a previous transaction has been made towards it).'
          format: decimal
          nullable: true
        authorization:
          type: string
          description: The authorization code associated with the transaction.
          nullable: true
        authorization_expires_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the Shopify Payments authorization expires.'
          nullable: true
        currency:
          type: string
          description: 'The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for the currency used for the payment.'
          nullable: true
        device_id:
          type: integer
          description: The ID for the device.
          format: int64
          nullable: true
        error_code:
          $ref: '#/components/schemas/TransactionErrorCode'
        extended_authorization_attributes:
          $ref: '#/components/schemas/ExtendedAuthorizationAttributes'
        gateway:
          type: string
          description: 'The name of the gateway the transaction was issued through. A list of gateways can be found on Shopify''s [payment gateways page](//www.shopify.com/payment-gateways).'
          nullable: true
        kind:
          $ref: '#/components/schemas/TransactionKind'
        location_id:
          type: integer
          description: The ID of the physical location where the transaction was processed.
          format: int64
          nullable: true
        message:
          type: string
          description: A string generated by the payment provider with additional information about why the transaction succeeded or failed.
          nullable: true
        order_id:
          type: integer
          description: The ID for the order that the transaction is associated with.
          format: int64
          nullable: true
        payment_details:
          $ref: '#/components/schemas/PaymentDetails'
        parent_id:
          type: integer
          description: "The ID of an associated transaction. \r\n\r\n*   For `capture` transactions, the parent needs to be an `authorization` transaction. \r\n*   For `void` transactions, the parent needs to be an `authorization` transaction. \r\n*   For `refund` transactions, the parent needs to be a `capture` or `sale` transaction."
          format: int64
          nullable: true
        payments_refund_attributes:
          $ref: '#/components/schemas/PaymentsRefundAttributes'
        processed_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when a transaction was processed. This value is the date that''s used in the analytic reports. By default, it matches the `created_at` value. If you''re importing transactions from an app or another platform, then you can set `processed_at` to a date and time in the past to match when the original transaction was processed.'
          format: date-time
          nullable: true
        receipt:
          type: string
          description: A transaction receipt attached to the transaction by the gateway. The value of this field depends on which gateway the shop is using.
          nullable: true
        source_name:
          type: string
          description: 'The origin of the transaction. This is set by Shopify and can''t be overridden. Example values: `web`, `pos`, `iphone`, and `android`.'
          nullable: true
        status:
          type: string
          description: 'The status of the transaction. Valid values: `pending`, `failure`, `success`, and `error`.'
          nullable: true
        test:
          type: boolean
          description: Whether the transaction is a test transaction.
          nullable: true
        user_id:
          type: integer
          description: 'The ID for the user who was logged into the Shopify POS device when the order was processed, if applicable.'
          format: int64
          nullable: true
        currency_exchange_adjustment:
          $ref: '#/components/schemas/CurrencyExchangeAdjustment'
        maximum_refundable:
          type: number
          description: The maximum amount that can be refunded
          format: decimal
          nullable: true
        id:
          type: integer
          format: int64
        admin_graphql_api_id:
          type: string
          nullable: true
        created_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the asset was created.'
          format: date-time
          nullable: true
        updated_at:
          type: string
          description: 'The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when an asset was last updated.'
          format: date-time
          nullable: true
      additionalProperties: { }
    TransactionErrorCode:
      enum:
        - incorrect_number
        - invalid_number
        - invalid_expiry_date
        - invalid_cvc
        - expired_card
        - incorrect_cvc
        - incorrect_zip
        - incorrect_address
        - card_declined
        - processing_error
        - call_issuer
        - pick_up_card
      type: string
      additionalProperties: { }
    TransactionKind:
      enum:
        - authorization
        - capture
        - sale
        - void
        - refund
      type: string
      additionalProperties: { }
    TransactionList:
      required:
        - transactions
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
      additionalProperties: { }
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-Shopify-Access-Token
      in: header
security:
  - ApiKey: [ ]
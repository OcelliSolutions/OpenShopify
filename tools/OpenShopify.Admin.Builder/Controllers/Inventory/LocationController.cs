//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class LocationControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieve a list of locations
        /// </summary>
        /// <returns>Retrieve a list of locations</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/locations.json")]
        public abstract System.Threading.Tasks.Task RetrieveListOfLocations();

        /// <summary>
        /// Retrieve a single location by its ID
        /// </summary>
        /// <returns>Retrieve a single location by its ID</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/locations/{location_id}.json")]
        public abstract System.Threading.Tasks.Task RetrieveSingleLocationByItsID(string location_id);

        /// <summary>
        /// Retrieve a count of locations
        /// </summary>
        /// <returns>Retrieve a count of locations</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/locations/count.json")]
        public abstract System.Threading.Tasks.Task RetrieveCountOfLocations();

        /// <summary>
        /// Retrieve a list of inventory levels for a location
        /// </summary>
        /// <returns>Retrieve a list of inventory levels for a location</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/locations/{location_id}/inventory_levels.json")]
        public abstract System.Threading.Tasks.Task RetrieveListOfInventoryLevelsForLocation(string location_id);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Location
    {
        /// <summary>
        /// Whether the location is active. If true, then the location can be used to sell products,
        /// <br/>stock inventory, and fulfill orders. Merchants can deactivate locations from the Shopify admin.
        /// <br/>Deactivated locations don't contribute to the shop's
        /// <br/>location limit.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("active")]
        public string? Active { get; set; } = default!;

        /// <summary>
        /// The location's street address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("address1")]
        public string? Address1 { get; set; } = default!;

        /// <summary>
        /// The optional second line of the location's street address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("address2")]
        public string? Address2 { get; set; } = default!;

        /// <summary>
        /// The city the location is in.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]
        public string? City { get; set; } = default!;

        /// <summary>
        /// The country the location is in.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("country")]
        public string? Country { get; set; } = default!;

        /// <summary>
        /// The two-letter code (ISO 3166-1 alpha-2 format) corresponding to country the location is in.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("country_code")]
        public string? Country_code { get; set; } = default!;

        /// <summary>
        /// The date and time (ISO 8601 format) when the location was created.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("created_at")]
        public string? Created_at { get; set; } = default!;

        /// <summary>
        /// The ID of the location.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; } = default!;

        /// <summary>
        /// Whether this is a fulfillment service location. If true, then the location is a
        /// <br/> fulfillment service location. If false, then the location was created by the
        /// <br/> merchant and isn't tied to a fulfillment service.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("legacy")]
        public string? Legacy { get; set; } = default!;

        /// <summary>
        /// The name of the location.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; set; } = default!;

        /// <summary>
        /// The phone number of the location. This value can contain special characters, such as - or +.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("phone")]
        public string? Phone { get; set; } = default!;

        /// <summary>
        /// The province, state, or district of the location.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("province")]
        public string? Province { get; set; } = default!;

        /// <summary>
        /// The province, state, or district code (ISO 3166-2 alpha-2 format) of the location.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("province_code")]
        public string? Province_code { get; set; } = default!;

        /// <summary>
        /// The date and time (ISO 8601 format) when the location was last updated.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("updated_at")]
        public string? Updated_at { get; set; } = default!;

        /// <summary>
        /// The zip or postal code.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("zip")]
        public string? Zip { get; set; } = default!;

        /// <summary>
        /// The localized name of the location's country.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("localized_country_name")]
        public string? Localized_country_name { get; set; } = default!;

        /// <summary>
        /// The localized name of the location's region. Typically a province, state, or district.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("localized_province_name")]
        public string? Localized_province_name { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class PaymentControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Creates a new payment
        /// </summary>
        /// <param name="amount">The amount of the payment.</param>
        /// <param name="request_details">The details of the request, including the following attributes:</param>
        /// <param name="session_id">A session ID provided by the card vault when creating a payment session.</param>
        /// <param name="unique_token">A unique idempotency token generated by your app. This can be any value, but must be unique across all payment requests.</param>
        /// <returns>Creates a new payment</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/checkouts/{token}/payments.json")]
        public abstract System.Threading.Tasks.Task CreateNewPayment([Microsoft.AspNetCore.Mvc.FromQuery] string amount, [Microsoft.AspNetCore.Mvc.FromQuery] string request_details, [Microsoft.AspNetCore.Mvc.FromQuery] string session_id, string token, [Microsoft.AspNetCore.Mvc.FromQuery] string unique_token);

        /// <summary>
        /// Retrieves a list of payments on a particular checkout
        /// </summary>
        /// <returns>Retrieves a list of payments on a particular checkout</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/checkouts/{token}/payments.json")]
        public abstract System.Threading.Tasks.Task RetrieveListOfPaymentsOnParticularCheckout(string token);

        /// <summary>
        /// Retrieves a single payment
        /// </summary>
        /// <returns>Retrieves a single payment</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/checkouts/{token}/payments/{payment_id}.json")]
        public abstract System.Threading.Tasks.Task RetrieveSinglePayment(string payment_id, string token);

        /// <summary>
        /// Counts the number of payments attempted on a checkout
        /// </summary>
        /// <returns>Counts the number of payments attempted on a checkout</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/checkouts/{token}/payments/count.json")]
        public abstract System.Threading.Tasks.Task CountTheNumberOfPaymentsAttemptedOnCheckout(string token);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payment
    {
        /// <summary>
        /// The details of the credit card used for payment. The following attributes are available:
        /// <br/> 
        /// <br/> first_name: The first name of the cardholder.
        /// <br/> last_name: The last name of the cardholder.
        /// <br/> first_digits: The first six digits of the credit card.
        /// <br/> last_digits: The last four digits of the credit card.
        /// <br/> brand: The credit card brand.
        /// <br/> expiry_month: The expiry month of the credit card.
        /// <br/> expiry_year: The expiry year of the credit card.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("credit_card")]
        public string? Credit_card { get; set; } = default!;

        /// <summary>
        /// A unique identifer for the payment generated by Shopify.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; } = default!;

        /// <summary>
        /// A message describing the error that occured when attempting to process payment, if any.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("payment_processing_error_message")]
        public string? Payment_processing_error_message { get; set; } = default!;

        /// <summary>
        /// Specifies the URL that your app or sales channel needs to send the customer to so that they can authenticate their payment. To learn more about how to use this property, refer to Authenticating payments with 3D Secure.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("next_action")]
        public string? Next_action { get; set; } = default!;

        /// <summary>
        /// The details of the transaction, including the following attributes:
        /// <br/> 
        /// <br/> amount: The amount of the transaction.
        /// <br/> amount_in: The amount in before rounding is applied. Not applicable to credit card payments.
        /// <br/> amount_out: The amount out after rounding is applied. Not applicable to credit card payments. 
        /// <br/> amount_rounding: The amount of rounding applied. Not applicable to credit card payments. 
        /// <br/> authorization: The authorization code returned by the payment provider.
        /// <br/> created_at: The date and time when the transaction was created.
        /// <br/> currency: The currency of the transaction.
        /// <br/> error_code: The error code returned by the payment provider, if any.
        /// <br/> gateway: The name of the payment provider which processed the transaction.
        /// <br/> id: The unique identifier of the transaction.
        /// <br/> kind: The kind of transaction processed, either authorization or sale.
        /// <br/> message: The message returned by the payment provider, if any.
        /// <br/> status: The status of the transaction, either success or failure.
        /// <br/> test: Whether or not the transaction was a test.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("transaction")]
        public string? Transaction { get; set; } = default!;

        /// <summary>
        /// A unique idempotency token generated by the app that created the payment request.
        /// <br/> For more information, refer to Idempotent requests.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("unique_token")]
        public string? Unique_token { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
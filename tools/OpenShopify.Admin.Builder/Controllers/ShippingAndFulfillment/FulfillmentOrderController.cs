//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class FulfillmentOrderControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieves a list of fulfillment orders for a specific order
        /// </summary>
        /// <returns>Retrieves a list of fulfillment orders for a specific order</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("orders/{order_id}/fulfillment_orders.json")]
        public abstract System.Threading.Tasks.Task RetrieveListOfFulfillmentOrdersForSpecificOrder(string order_id);

        /// <summary>
        /// Retrieves a specific fulfillment order
        /// </summary>
        /// <returns>Retrieves a specific fulfillment order</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("fulfillment_orders/{fulfillment_order_id}.json")]
        public abstract System.Threading.Tasks.Task RetrieveSpecificFulfillmentOrder(string fulfillment_order_id);

        /// <summary>
        /// Cancel a fulfillment order
        /// </summary>
        /// <returns>Cancel a fulfillment order</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("fulfillment_orders/{fulfillment_order_id}/cancel.json")]
        public abstract System.Threading.Tasks.Task CancelFulfillmentOrder(string fulfillment_order_id);

        /// <summary>
        /// Marks a fulfillment order as incomplete
        /// </summary>
        /// <param name="message">An optional reason for marking the fulfillment order as incomplete.</param>
        /// <returns>Marks a fulfillment order as incomplete</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("fulfillment_orders/{fulfillment_order_id}/close.json")]
        public abstract System.Threading.Tasks.Task MarkFulfillmentOrderAsIncomplete(string fulfillment_order_id, [Microsoft.AspNetCore.Mvc.FromQuery] string? message = null);

        /// <summary>
        /// Moves a fulfillment order to a new location
        /// </summary>
        /// <param name="new_location_id">The id of the location to which the fulfillment order will be moved.</param>
        /// <returns>Moves a fulfillment order to a new location</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("fulfillment_orders/{fulfillment_order_id}/move.json")]
        public abstract System.Threading.Tasks.Task MoveFulfillmentOrderToNewLocation(string fulfillment_order_id, [Microsoft.AspNetCore.Mvc.FromQuery] string? new_location_id = null);

        /// <summary>
        /// Marks the fulfillment order as open
        /// </summary>
        /// <returns>Marks the fulfillment order as open</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("fulfillment_orders/{fulfillment_order_id}/open.json")]
        public abstract System.Threading.Tasks.Task MarkTheFulfillmentOrderAsOpen(string fulfillment_order_id);

        /// <summary>
        /// Reschedules the fulfill_at time of a scheduled fulfillment order
        /// </summary>
        /// <returns>Reschedules the fulfill_at time of a scheduled fulfillment order</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("fulfillment_orders/{fulfillment_order_id}/reschedule.json")]
        public abstract System.Threading.Tasks.Task RescheduleTheFulfillAtTimeOfScheduledFulfillmentOrder(string fulfillment_order_id);

        /// <summary>
        /// Applies a fulfillment hold on a fulfillment order with status &lt;code&gt;OPEN&lt;/code&gt;
        /// </summary>
        /// <param name="notify_merchant">Whether the merchant should receive a notification about the fulfillment hold. If set to true, then the merchant will be notified on the Shopify mobile app (if they use it to manage their store). The default value is false.</param>
        /// <param name="reason">A mandatory reason for the fulfillment hold.</param>
        /// <param name="reason_notes">Optional additional information about the fulfillment hold reason.</param>
        /// <returns>Applies a fulfillment hold on a fulfillment order with status &lt;code&gt;OPEN&lt;/code&gt;</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("fulfillment_orders/{fulfillment_order_id}/hold.json")]
        public abstract System.Threading.Tasks.Task ApplyFulfillmentHoldOnFulfillmentOrderWithStatusOPEN(string fulfillment_order_id, [Microsoft.AspNetCore.Mvc.FromQuery] string? notify_merchant = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? reason = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? reason_notes = null);

        /// <summary>
        /// Releases the fulfillment hold on a fulfillment order
        /// </summary>
        /// <returns>Releases the fulfillment hold on a fulfillment order</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("fulfillment_orders/{fulfillment_order_id}/release_hold.json")]
        public abstract System.Threading.Tasks.Task ReleaseTheFulfillmentHoldOnFulfillmentOrder(string fulfillment_order_id);

    }

    


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class FulfillmentOrderControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieves a list of fulfillment orders for a specific order
        /// </summary>
        /// <param name="order_idQuery">The ID of the order that is associated with the fulfillment orders.</param>
        /// <returns>Retrieves a list of fulfillment orders for a specific order</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/orders/{order_id}/fulfillment_orders.json")]
        public abstract System.Threading.Tasks.Task RetrieveListOfFulfillmentOrdersForSpecificOrder(string order_idPath, [Microsoft.AspNetCore.Mvc.FromQuery(Name = "order_id")] string? order_idQuery = null);

        /// <summary>
        /// Retrieves a specific fulfillment order
        /// </summary>
        /// <returns>Retrieves a specific fulfillment order</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}.json")]
        public abstract System.Threading.Tasks.Task RetrieveSpecificFulfillmentOrder(string fulfillment_order_id);

        /// <summary>
        /// Cancel a fulfillment order
        /// </summary>
        /// <returns>Cancel a fulfillment order</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/cancel.json")]
        public abstract System.Threading.Tasks.Task CancelFulfillmentOrder(string fulfillment_order_id);

        /// <summary>
        /// Marks a fulfillment order as incomplete
        /// </summary>
        /// <param name="message">An optional reason for marking the fulfillment order as incomplete.</param>
        /// <returns>Marks a fulfillment order as incomplete</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/close.json")]
        public abstract System.Threading.Tasks.Task MarkFulfillmentOrderAsIncomplete(string fulfillment_order_id, [Microsoft.AspNetCore.Mvc.FromQuery] string? message = null);

        /// <summary>
        /// Moves a fulfillment order to a new location
        /// </summary>
        /// <param name="new_location_id">The id of the location to which the fulfillment order will be moved.</param>
        /// <returns>Moves a fulfillment order to a new location</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/move.json")]
        public abstract System.Threading.Tasks.Task MoveFulfillmentOrderToNewLocation(string fulfillment_order_id, [Microsoft.AspNetCore.Mvc.FromQuery] string? new_location_id = null);

        /// <summary>
        /// Marks the fulfillment order as open
        /// </summary>
        /// <returns>Marks the fulfillment order as open</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/open.json")]
        public abstract System.Threading.Tasks.Task MarkTheFulfillmentOrderAsOpen(string fulfillment_order_id);

        /// <summary>
        /// Reschedules the fulfill_at time of a scheduled fulfillment order
        /// </summary>
        /// <returns>Reschedules the fulfill_at time of a scheduled fulfillment order</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/reschedule.json")]
        public abstract System.Threading.Tasks.Task RescheduleTheFulfillAtTimeOfScheduledFulfillmentOrder(string fulfillment_order_id);

        /// <summary>
        /// Applies a fulfillment hold on a fulfillment order with status &lt;code&gt;OPEN&lt;/code&gt;
        /// </summary>
        /// <param name="notify_merchant">Whether the merchant should receive a notification about the fulfillment hold. If set to true, then the merchant will be notified on the Shopify mobile app (if they use it to manage their store). The default value is false.</param>
        /// <param name="reason">A mandatory reason for the fulfillment hold.</param>
        /// <param name="reason_notes">Optional additional information about the fulfillment hold reason.</param>
        /// <returns>Applies a fulfillment hold on a fulfillment order with status &lt;code&gt;OPEN&lt;/code&gt;</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/hold.json")]
        public abstract System.Threading.Tasks.Task ApplyFulfillmentHoldOnFulfillmentOrderWithStatusCodeOPENCode(string fulfillment_order_id, [Microsoft.AspNetCore.Mvc.FromQuery] string? notify_merchant = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? reason = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? reason_notes = null);

        /// <summary>
        /// Releases the fulfillment hold on a fulfillment order
        /// </summary>
        /// <returns>Releases the fulfillment hold on a fulfillment order</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/release_hold.json")]
        public abstract System.Threading.Tasks.Task ReleaseTheFulfillmentHoldOnFulfillmentOrder(string fulfillment_order_id);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FulfillmentOrder
    {
        /// <summary>
        /// The ID of the location that has been assigned to do the work.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("assigned_location_id")]
        public string? Assigned_location_id { get; set; } = default!;

        /// <summary>
        /// The destination where the items should be sent.
        /// <br/> 
        /// <br/> id: The ID of the fulfillment order destination.
        /// <br/> address1: The street address of the assigned location.
        /// <br/> address2: An optional additional field for the street address of the assigned location.
        /// <br/> city: The city of the destination.
        /// <br/> company: The company of the destination.
        /// <br/> country: The country of the destination.
        /// <br/> email: The email of the customer at the destination.
        /// <br/> first_name: The first name of the customer at the destination.
        /// <br/> last_name: The last name of the customer at the destination.
        /// <br/> phone: The phone number of the customer at the destination.
        /// <br/> province: The province of the destination.
        /// <br/> zip: The ZIP code of the destination.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("destination")]
        public string? Destination { get; set; } = default!;

        /// <summary>
        /// The type of method used to transfer a product or service to a customer.
        /// <br/> 
        /// <br/> id: The ID of the delivery method.
        /// <br/> method_type: The type of delivery method. Valid values:
        /// <br/> 
        /// <br/> local: A delivery to a customer's doorstep.
        /// <br/> none: No delivery method.
        /// <br/> pick_up: A delivery that a customer picks up at your retail store, curbside, or any location that you choose.
        /// <br/> retail: Items delivered immediately in a retail store.
        /// <br/> shipping: A delivery to a customer using a shipping carrier.
        /// <br/> 
        /// <br/> 
        /// <br/> min_delivery_date_time: The minimum date and time by which the delivery is expected to be completed.
        /// <br/> max_delivery_date_time: The maximum date and time by which the delivery is expected to be completed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("delivery_method")]
        public string? Delivery_method { get; set; } = default!;

        /// <summary>
        /// The date and time at which the fulfillment order will be fulfillable.
        /// <br/> When this date and time is reached, a scheduled fulfillment order is automatically transitioned to open.
        /// <br/> For more information about fulfillment statuses, refer to the status property.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fulfill_at")]
        public string? Fulfill_at { get; set; } = default!;

        /// <summary>
        /// The latest date and time by which all items in the fulfillment order need to be fulfilled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fulfill_by")]
        public string? Fulfill_by { get; set; } = default!;

        /// <summary>
        /// Represents the fulfillment holds applied on the fulfillment order.
        /// <br/>
        /// <br/> reason: The reason for the fulfillment hold.
        /// <br/> reason_notes: Additional information about the fulfillment hold reason.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fulfillment_holds")]
        public string? Fulfillment_holds { get; set; } = default!;

        /// <summary>
        /// An ID for the fulfillment order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; } = default!;

        /// <summary>
        /// The international duties relevant to the fulfillment order.
        /// <br/>
        /// <br/> incoterm: The method of duties payment. Valid values:
        /// <br/> 
        /// <br/> DAP: Delivered at place.
        /// <br/> DDP: Delivered duty paid.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("international_duties")]
        public string? International_duties { get; set; } = default!;

        /// <summary>
        /// Represents line items belonging to a fulfillment order:
        /// <br/>
        /// <br/> id: The ID of the fulfillment order line item.
        /// <br/> shop_id: The ID of the shop associated with the fulfillment order line item.
        /// <br/> fulfillment_order_id: The ID of the fulfillment order associated with this line item.
        /// <br/> line_item_id: The ID of the line item associated with this fulfillment order line item.
        /// <br/> inventory_item_id: The ID of the inventory item associated with this fulfillment order line item.
        /// <br/> quantity: The total number of units to be fulfilled.
        /// <br/> fulfillable_quantity: The number of units remaining to be fulfilled.
        /// <br/> variant_id: The ID of the variant associated with this fulfillment order line item.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("line_items")]
        public string? Line_items { get; set; } = default!;

        /// <summary>
        /// The ID of the order that's associated with the fulfillment order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("order_id")]
        public string? Order_id { get; set; } = default!;

        /// <summary>
        /// The request status of the fulfillment order. Valid values:
        /// <br/> 
        /// <br/> 
        /// <br/> unsubmitted:
        /// <br/> The initial request status for newly-created fulfillment orders. This is the only valid request
        /// <br/> status for fulfillment orders that aren't assigned to a fulfillment service.
        /// <br/> 
        /// <br/> 
        /// <br/> submitted: The merchant requested fulfillment for this fulfillment order.
        /// <br/> 
        /// <br/> 
        /// <br/> accepted: The fulfillment service accepted the merchant's fulfillment request.
        /// <br/> 
        /// <br/> 
        /// <br/> rejected: The fulfillment service rejected the merchant's fulfillment request.
        /// <br/> 
        /// <br/> 
        /// <br/> cancellation_requested: The merchant requested a cancellation of the fulfillment request for this fulfillment order.
        /// <br/> 
        /// <br/> 
        /// <br/> cancellation_accepted: The fulfillment service accepted the merchant's fulfillment cancellation request.
        /// <br/> 
        /// <br/> 
        /// <br/> cancellation_rejected: The fulfillment service rejected the merchant's fulfillment cancellation request.
        /// <br/> 
        /// <br/> 
        /// <br/> closed: The fulfillment service closed the fulfillment order without completing it.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("request_status")]
        public string? Request_status { get; set; } = default!;

        /// <summary>
        /// The ID of the shop that's associated with the fulfillment order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("shop_id")]
        public string? Shop_id { get; set; } = default!;

        /// <summary>
        /// The status of the fulfillment order. Valid values:
        /// <br/> 
        /// <br/> 
        /// <br/> open: The fulfillment order is ready for fulfillment.
        /// <br/> 
        /// <br/> 
        /// <br/> in_progress: The fulfillment order is being processed.
        /// <br/> 
        /// <br/> 
        /// <br/> scheduled: The fulfillment order is deferred and will be ready for fulfillment
        /// <br/> after the datetime specified in fulfill_at.
        /// <br/> 
        /// <br/> 
        /// <br/> cancelled: The fulfillment order has been cancelled by the merchant.
        /// <br/> 
        /// <br/> 
        /// <br/> on_hold: The fulfillment order is on hold. The fulfillment process can't be initiated until the hold on the fulfillment order is released.
        /// <br/> 
        /// <br/> 
        /// <br/> incomplete: The fulfillment order cannot be completed as requested.
        /// <br/> 
        /// <br/> 
        /// <br/> closed: The fulfillment order has been completed and closed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; } = default!;

        /// <summary>
        /// The actions that can be performed on this fulfillment order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("supported_actions")]
        public string? Supported_actions { get; set; } = default!;

        /// <summary>
        /// A list of requests sent by the merchant to the fulfillment service for this fulfillment order.
        /// <br/> 
        /// <br/> message: The message returned by the merchant, if any.
        /// <br/> request_options: The request options returned by the merchant, if any.
        /// <br/> kind: The kind of request. Valid values: fulfillment_request, cancellation_request, or legacy_fulfill_request.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("merchant_requests")]
        public string? Merchant_requests { get; set; } = default!;

        /// <summary>
        /// The fulfillment order's assigned location. This is the location expected to perform fulfillment.
        /// <br/> 
        /// <br/> address1: The street address of the assigned location.
        /// <br/> address2: An optional additional field for the street address of the assigned location.
        /// <br/> city: The city of the assigned location.
        /// <br/> country_code: The two-letter code for the country of the assigned location.
        /// <br/> location_id: The ID of the assigned location.
        /// <br/> name: The name of the assigned location.
        /// <br/> phone: The phone number of the assigned location.
        /// <br/> province: The province of the assigned location.
        /// <br/> zip: The ZIP code of the assigned location.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("assigned_location")]
        public string? Assigned_location { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class AssignedFulfillmentOrderControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieves a list of fulfillment orders on a shop for a specific app
        /// </summary>
        /// <param name="assignment_status">The assigment status of the fulfillment orders that should be returned:</param>
        /// <param name="location_ids">The IDs of the assigned locations of the fulfillment orders that should be returned.</param>
        /// <returns>Retrieves a list of fulfillment orders on a shop for a specific app</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/assigned_fulfillment_orders.json")]
        public abstract System.Threading.Tasks.Task RetrieveListOfFulfillmentOrdersOnShopForSpecificApp([Microsoft.AspNetCore.Mvc.FromQuery] string? assignment_status = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? location_ids = null);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AssignedFulfillmentOrder
    {
        /// <summary>
        /// The ID of the fulfillment order's assigned location. This is the location from which the order is expected to be fulfilled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("assigned_location_id")]
        public string? Assigned_location_id { get; set; } = default!;

        /// <summary>
        /// The destination where the items should be sent upon fulfillment.
        /// <br/> 
        /// <br/> id: The ID of the fulfillment order destination.
        /// <br/> address1: The first line of the address of the destination.
        /// <br/> address2: The second line of the address of the destination.
        /// <br/> city: The city of the destination.
        /// <br/> company: The company of the destination.
        /// <br/> country: The country of the destination.
        /// <br/> email: The email of the customer at the destination.
        /// <br/> first_name: The first name of the customer at the destination.
        /// <br/> last_name: The last name of the customer at the destination.
        /// <br/> phone: The phone number of the customer at the destination.
        /// <br/> province: The province of the destination.
        /// <br/> zip: The ZIP code of the destination.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("destination")]
        public string? Destination { get; set; } = default!;

        /// <summary>
        /// The ID of the fulfillment order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; } = default!;

        /// <summary>
        /// Represents line items belonging to a fulfillment order:
        /// <br/>
        /// <br/> id: The ID of the fulfillment order line item.
        /// <br/> shop_id: The ID of the shop associated with the fulfillment order line item.
        /// <br/> fulfillment_order_id: The ID of the fulfillment order associated with this line item.
        /// <br/> line_item_id: The ID of the line item associated with this fulfillment order line item.
        /// <br/> inventory_item_id: The ID of the inventory item associated with this fulfillment order line item.
        /// <br/> quantity: The total number of units to be fulfilled.
        /// <br/> fulfillable_quantity: The number of units remaining to be fulfilled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("line_items")]
        public string? Line_items { get; set; } = default!;

        /// <summary>
        /// The ID of the order that's associated with the fulfillment order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("order_id")]
        public string? Order_id { get; set; } = default!;

        /// <summary>
        /// The request status of the fulfillment order. Valid values:
        /// <br/> 
        /// <br/> 
        /// <br/> unsubmitted:
        /// <br/> The initial request status for the newly-created fulfillment orders. This is the only valid
        /// <br/> request status for fulfillment orders that aren't assigned to a fulfillment service.
        /// <br/> 
        /// <br/> 
        /// <br/> submitted: The merchant requested fulfillment for this fulfillment order.
        /// <br/> 
        /// <br/> 
        /// <br/> accepted: The fulfillment service accepted the merchant's fulfillment request.
        /// <br/> 
        /// <br/> 
        /// <br/> rejected: The fulfillment service rejected the merchant's fulfillment request.
        /// <br/> 
        /// <br/> 
        /// <br/> cancellation_requested: The merchant requested a cancellation of the fulfillment request for this fulfillment order.
        /// <br/> 
        /// <br/> 
        /// <br/> cancellation_accepted: The fulfillment service accepted the merchant's fulfillment cancellation request.
        /// <br/> 
        /// <br/> 
        /// <br/> cancellation_rejected: The fulfillment service rejected the merchant's fulfillment cancellation request.
        /// <br/> 
        /// <br/> 
        /// <br/> closed: The fulfillment service closed the fulfillment order without completing it.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("request_status")]
        public string? Request_status { get; set; } = default!;

        /// <summary>
        /// The ID of the shop that's associated with the fulfillment order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("shop_id")]
        public string? Shop_id { get; set; } = default!;

        /// <summary>
        /// The status of the fulfillment order. Valid values:
        /// <br/> 
        /// <br/> 
        /// <br/> open: Default state for newly created fulfillment orders.
        /// <br/> 
        /// <br/> 
        /// <br/> in_progress: The fulfillment order is being processed.
        /// <br/> 
        /// <br/> 
        /// <br/> cancelled: The fulfillment order has been cancelled by the merchant.
        /// <br/> 
        /// <br/> 
        /// <br/> incomplete: The fulfillment order cannot be completed as requested.
        /// <br/> 
        /// <br/> 
        /// <br/> closed: The fulfillment order has been completed and closed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder.Controllers
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class ProductControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieve a list of products
        /// </summary>
        /// <param name="collection_id">Return products by product collection ID.</param>
        /// <param name="created_at_max">Return products created before a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="created_at_min">Return products created after a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="fields">Return only certain fields specified by a comma-separated list of field names.</param>
        /// <param name="handle">Return only products specified by a comma-separated list of product handles.</param>
        /// <param name="ids">Return only products specified by a comma-separated list of product IDs.</param>
        /// <param name="limit">Return up to this many results per page.</param>
        /// <param name="presentment_currencies">Return presentment prices in only certain currencies, specified by a comma-separated list of &lt;a href="https://en.wikipedia.org/wiki/ISO_4217"&gt;ISO 4217&lt;/a&gt; currency codes.</param>
        /// <param name="product_type">Return products by product type.</param>
        /// <param name="published_at_max">Return products published before a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="published_at_min">Return products published after a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="published_status">Return products by their published status.</param>
        /// <param name="since_id">Return only products after the specified ID.</param>
        /// <param name="status">Return only products specified by a comma-separated list of statuses.</param>
        /// <param name="title">Return products by product title.</param>
        /// <param name="updated_at_max">Return products last updated before a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="updated_at_min">Return products last updated after a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="vendor">Return products by product vendor.</param>
        /// <returns>Retrieve a list of products</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("products.json")]
        public abstract System.Threading.Tasks.Task ListProducts([Microsoft.AspNetCore.Mvc.FromQuery] long? collection_id, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? created_at_max, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? created_at_min, [Microsoft.AspNetCore.Mvc.FromQuery] string? fields, [Microsoft.AspNetCore.Mvc.FromQuery] string? handle, [Microsoft.AspNetCore.Mvc.FromQuery] string? ids, [Microsoft.AspNetCore.Mvc.FromQuery] int? limit, string? page_info, [Microsoft.AspNetCore.Mvc.FromQuery] string? presentment_currencies, [Microsoft.AspNetCore.Mvc.FromQuery] string? product_type, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? published_at_max, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? published_at_min, [Microsoft.AspNetCore.Mvc.FromQuery] string? published_status, [Microsoft.AspNetCore.Mvc.FromQuery] int? since_id, [Microsoft.AspNetCore.Mvc.FromQuery] string? status, [Microsoft.AspNetCore.Mvc.FromQuery] string? title, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? updated_at_max, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? updated_at_min, [Microsoft.AspNetCore.Mvc.FromQuery] string? vendor);

        /// <summary>
        /// Create a new product
        /// </summary>
        /// <returns>Create a new product</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("products.json")]
        public abstract System.Threading.Tasks.Task CreateProduct([System.ComponentModel.DataAnnotations.Required] OpenShopify.Admin.Builder.Models.CreateProductRequest request);

        /// <summary>
        /// Retrieve a count of products
        /// </summary>
        /// <param name="collection_id">Return products by product collection ID.</param>
        /// <param name="created_at_max">Return products created before a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="created_at_min">Return products created after a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="product_type">Return products by product type.</param>
        /// <param name="published_at_max">Return products published before a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="published_at_min">Return products published after a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="published_status">Return products by their published status.</param>
        /// <param name="updated_at_max">Return products last updated before a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="updated_at_min">Return products last updated after a specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="vendor">Return products by product vendor.</param>
        /// <returns>Retrieve a count of products</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("products/count.json")]
        public abstract System.Threading.Tasks.Task GetCountOfProducts([Microsoft.AspNetCore.Mvc.FromQuery] long? collection_id, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? created_at_max, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? created_at_min, [Microsoft.AspNetCore.Mvc.FromQuery] string? product_type, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? published_at_max, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? published_at_min, [Microsoft.AspNetCore.Mvc.FromQuery] string? published_status, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? updated_at_max, [Microsoft.AspNetCore.Mvc.FromQuery] DateTime? updated_at_min, [Microsoft.AspNetCore.Mvc.FromQuery] string? vendor);

        /// <summary>
        /// Retrieve a single product
        /// </summary>
        /// <param name="fields">A comma-separated list of fields to include in the response.</param>
        /// <returns>Retrieve a single product</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("products/{product_id}.json")]
        public abstract System.Threading.Tasks.Task GetProduct(long product_id, [Microsoft.AspNetCore.Mvc.FromQuery] string? fields);

        /// <summary>
        /// Updates a product
        /// </summary>
        /// <returns>Updates a product</returns>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("products/{product_id}.json")]
        public abstract System.Threading.Tasks.Task UpdateProduct([System.ComponentModel.DataAnnotations.Required] OpenShopify.Admin.Builder.Models.UpdateProductRequest request, long product_id);

        /// <summary>
        /// Delete a product
        /// </summary>
        /// <returns>Delete a product</returns>
        [Microsoft.AspNetCore.Mvc.HttpDelete, Microsoft.AspNetCore.Mvc.Route("products/{product_id}.json")]
        public abstract System.Threading.Tasks.Task DeleteProduct(long product_id);

    }

    


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
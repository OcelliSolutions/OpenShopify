//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder.Models
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class ProductVariantControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieves a list of product variants
        /// </summary>
        /// <param name="fields">A comma-separated list of fields to include in the response</param>
        /// <param name="limit">Return up to this many results per page</param>
        /// <param name="page_info">A unique ID used to access a certain page of results.</param>
        /// <param name="presentment_currencies">Return presentment prices in only certain currencies, specified by a comma-separated list of [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency codes.</param>
        /// <param name="since_id">Restrict results to after the specified ID</param>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("products/{product_id}/variants.json")]
        public abstract System.Threading.Tasks.Task ListProductVariants(long product_id, string? fields = null, int? limit = null, string? page_info = null, string? presentment_currencies = null, long? since_id = null);

        /// <summary>
        /// Create a new Product Variant
        /// </summary>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("products/{product_id}/variants.json")]
        public abstract System.Threading.Tasks.Task CreateProductVariant([System.ComponentModel.DataAnnotations.Required] OpenShopify.Admin.Builder.Models.CreateProductVariantRequest request, long product_id);

        /// <summary>
        /// Receive a count of all Product Variants
        /// </summary>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("products/{product_id}/variants/count.json")]
        public abstract System.Threading.Tasks.Task CountProductVariants(long? product_id = null);

        /// <summary>
        /// Receive a single Product Variant
        /// </summary>
        /// <param name="fields">A comma-separated list of fields to include in the response</param>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("variants/{variant_id}.json")]
        public abstract System.Threading.Tasks.Task GetProductVariant(long variant_id, string? fields = null);

        /// <summary>
        /// Modify an existing Product Variant
        /// </summary>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("variants/{variant_id}.json")]
        public abstract System.Threading.Tasks.Task UpdateProductVariant([System.ComponentModel.DataAnnotations.Required] OpenShopify.Admin.Builder.Models.UpdateProductVariantRequest request, long variant_id);

        /// <summary>
        /// Remove an existing Product Variant
        /// </summary>
        [Microsoft.AspNetCore.Mvc.HttpDelete, Microsoft.AspNetCore.Mvc.Route("products/{product_id}/variants/{variant_id}.json")]
        public abstract System.Threading.Tasks.Task DeleteProductVariant(long product_id, long variant_id);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ProductVariantOrig
    {
        /// <summary>
        /// The barcode, UPC, or ISBN number for the product.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("barcode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? Barcode { get; set; } = default!;

        /// <summary>
        /// The original price of the item before an adjustment or a sale.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("compare_at_price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? CompareAtPrice { get; set; } = default!;

        /// <summary>
        /// The date and time ([ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601)) when the product variant was created.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("created_at")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTimeOffset? CreatedAt { get; set; } = default!;

        /// <summary>
        /// The fulfillment service associated with the product variant. Valid values: `manual` or the handle of a [fulfillment service](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fulfillment_service")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? FulfillmentService { get; set; } = default!;

        /// <summary>
        /// The weight of the product variant in grams.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("grams")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Grams { get; set; } = default!;

        /// <summary>
        /// The unique numeric identifier for a product's image. The image must be associated to the same product as the variant.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("image_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? ImageId { get; set; } = default!;

        /// <summary>
        /// The unique identifier for the inventory item, which is used in the Inventory API to query for inventory information.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("inventory_item_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? InventoryItemId { get; set; } = default!;

        /// <summary>
        /// The fulfillment service that tracks the number of items in stock for the product variant. Valid values: 
        /// 
        /// *   `shopify`: You are tracking inventory yourself using the admin. 
        /// *   `null`: You aren't tracking inventory on the variant. 
        /// *   the handle of a [fulfillment service](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice) that has inventory management enabled: This must be the same fulfillment service referenced by the `fulfillment_service` property. 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("inventory_management")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? InventoryManagement { get; set; } = default!;

        /// <summary>
        /// Whether customers are allowed to place an order for the product variant when it's out of stock. Valid values: 
        /// 
        /// *   `deny`: Customers are not allowed to place orders for the product variant if it's out of stock. 
        /// *   `continue`: Customers are allowed to place orders for the product variant if it's out of stock.  Default value: `deny`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("inventory_policy")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? InventoryPolicy { get; set; } = default!;

        /// <summary>
        /// An aggregate of inventory across all locations. To adjust inventory at a specific location, use the [InventoryLevel](/docs/admin-api/rest/reference/inventory/inventorylevel) resource.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("inventory_quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? InventoryQuantity { get; set; } = default!;

        /// <summary>
        /// This property is deprecated. Use the [InventoryLevel](/docs/admin-api/rest/reference/inventory/inventorylevel) resource instead.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("old_inventory_quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Obsolete]
        public decimal? OldInventoryQuantity { get; set; } = default!;

        /// <summary>
        /// This property is deprecated. Use the [InventoryLevel](/docs/admin-api/rest/reference/inventory/inventorylevel) resource instead.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("inventory_quantity_adjustment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Obsolete]
        public string? InventoryQuantityAdjustment { get; set; } = default!;

        /// <summary>
        /// The custom properties that a shop owner uses to define product variants. You can define three options for a product variant: `option1`, `option2`, `option3`. Default value: `Default Title`. The `title` field is a concatenation of the `option1`, `option2`, and `option3` fields. Updating the `option` fields updates the `title` field.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("option")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? Option { get; set; } = default!;

        /// <summary>
        /// A list of the variant's presentment prices and compare-at prices in each of the shop's enabled presentment currencies. Each price object has the following properties:
        /// 
        /// *   `currency_code`: The three-letter code ([ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format) for one of the shop's enabled presentment currencies. 
        /// *   `amount`: The variant's price or compare-at price in the presentment currency.Requires the header `'X-Shopify-Api-Features': 'include-presentment-prices'`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("presentment_prices")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? PresentmentPrices { get; set; } = default!;

        /// <summary>
        /// The order of the product variant in the list of product variants. The first position in the list is `1`. The position of variants is indicated by the order in which they are listed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("position")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public int? Position { get; set; } = default!;

        /// <summary>
        /// The price of the product variant.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Price { get; set; } = default!;

        /// <summary>
        /// The unique numeric identifier for the product.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("product_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? ProductId { get; set; } = default!;

        /// <summary>
        /// This property is deprecated. Use the `requires_shipping` property on the [InventoryItem](/docs/admin-api/rest/reference/inventory/inventoryitem) resource instead.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("requires_shipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        [System.Obsolete]
        public bool? RequiresShipping { get; set; } = default!;

        /// <summary>
        /// A unique identifier for the product variant in the shop. Required in order to connect to a [FulfillmentService.](/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sku")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? Sku { get; set; } = default!;

        /// <summary>
        /// Whether a tax is charged when the product variant is sold.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("taxable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public bool? Taxable { get; set; } = default!;

        /// <summary>
        /// This parameter applies only to the stores that have the [Avalara AvaTax](https://help.shopify.com/manual/taxes/tax-services/taxation) app installed. Specifies the Avalara tax code for the product variant.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("tax_code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? TaxCode { get; set; } = default!;

        /// <summary>
        /// The title of the product variant. The `title` field is a concatenation of the `option1`, `option2`, and `option3` fields. You can only update `title` indirectly using the `option` fields.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("title")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? Title { get; set; } = default!;

        /// <summary>
        /// The date and time when the product variant was last modified. Gets returned in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("updated_at")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public System.DateTimeOffset? UpdatedAt { get; set; } = default!;

        /// <summary>
        /// The weight of the product variant in the unit system specified with `weight_unit`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("weight")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public decimal? Weight { get; set; } = default!;

        /// <summary>
        /// The unit of measurement that applies to the product variant's weight. If you don't specify a value for `weight_unit`, then the shop's default unit of measurement is applied. Valid values: `g`, `kg`, `oz`, and `lb`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("weight_unit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? WeightUnit { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
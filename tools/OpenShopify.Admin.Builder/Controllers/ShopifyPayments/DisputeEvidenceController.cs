//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder.Models
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class DisputeEvidenceControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Returns evidence associated with the dispute
        /// </summary>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("shopify_payments/disputes/{dispute_id}/dispute_evidences.json")]
        public abstract System.Threading.Tasks.Task GetEvidenceAssociatedWithDispute(long dispute_id);

        /// <summary>
        /// Updates dispute evidence
        /// </summary>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("shopify_payments/disputes/{dispute_id}/dispute_evidences.json")]
        public abstract System.Threading.Tasks.Task UpdateDisputeEvidence([System.ComponentModel.DataAnnotations.Required] OpenShopify.Admin.Builder.Models.UpdateDisputeEvidenceRequest request, long dispute_id);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record DisputeEvidenceOrig
    {
        /// <summary>
        /// The ID of the dispute that the dispute evidence belongs to.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("payments_dispute_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public long? PaymentsDisputeId { get; set; } = default!;

        /// <summary>
        /// The activity logs associated with the dispute evidence.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("access_activity_log")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? AccessActivityLog { get; set; } = default!;

        /// <summary>
        /// The customer's email address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customer_email_address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? CustomerEmailAddress { get; set; } = default!;

        /// <summary>
        /// The customer's first name.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customer_first_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? CustomerFirstName { get; set; } = default!;

        /// <summary>
        /// The customer's last name.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customer_last_name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? CustomerLastName { get; set; } = default!;

        /// <summary>
        /// The uncategorized text for the dispute evidence.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("uncategorized_text")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? UncategorizedText { get; set; } = default!;

        /// <summary>
        /// The mailing address for shipping that is provided by the customer.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("shipping_address_attributes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? ShippingAddressAttributes { get; set; } = default!;

        /// <summary>
        /// The cancellation policy disclosure associated with the dispute evidence.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cancellation_policy_disclosure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? CancellationPolicyDisclosure { get; set; } = default!;

        /// <summary>
        /// The cancellation rebuttal associated with the dispute evidence.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cancellation_rebuttal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? CancellationRebuttal { get; set; } = default!;

        /// <summary>
        /// The refund policy disclosure associated with the dispute evidence.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("refund_policy_disclosure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? RefundPolicyDisclosure { get; set; } = default!;

        /// <summary>
        /// The refund refusal explanation associated with the dispute evidence.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("refund_refusal_explanation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? RefundRefusalExplanation { get; set; } = default!;

        /// <summary>
        /// The product description for this dispute evidence.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("product_description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? ProductDescription { get; set; } = default!;

        /// <summary>
        /// Whether the dispute evidence is submitted.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("submitted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? Submitted { get; set; } = default!;

        /// <summary>
        /// "The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when dispute evidence was updated. Returns `null` if evidence has not yet been updated.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("updated_on")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? UpdatedOn { get; set; } = default!;

        /// <summary>
        /// Dispute files associated with dispute evidence.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dispute_evidence_files")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? DisputeEvidenceFiles { get; set; } = default!;

        /// <summary>
        /// The billing address that is provided by the customer.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("billing_address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? BillingAddress { get; set; } = default!;

        /// <summary>
        /// The fulfillments associated with the dispute evidence.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("fulfillments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull)]   
        public string? Fulfillments { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
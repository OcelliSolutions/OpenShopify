//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class MarketingEventControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieves a list of all marketing events
        /// </summary>
        /// <param name="limit">The amount of results to return.</param>
        /// <param name="offset">The number of marketing events to skip.</param>
        /// <returns>Retrieves a list of all marketing events</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/marketing_events.json")]
        public abstract System.Threading.Tasks.Task RetrieveListOfAllMarketingEvents([Microsoft.AspNetCore.Mvc.FromQuery] string? limit = "50", [Microsoft.AspNetCore.Mvc.FromQuery] string? offset = null);

        /// <summary>
        /// Creates a marketing event
        /// </summary>
        /// <returns>Creates a marketing event</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/marketing_events.json")]
        public abstract System.Threading.Tasks.Task CreateMarketingEvent();

        /// <summary>
        /// Retrieves a count of all marketing events
        /// </summary>
        /// <returns>Retrieves a count of all marketing events</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/marketing_events/count.json")]
        public abstract System.Threading.Tasks.Task RetrieveCountOfAllMarketingEvents();

        /// <summary>
        /// Retrieves a single marketing event
        /// </summary>
        /// <returns>Retrieves a single marketing event</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/marketing_events/{marketing_event_id}.json")]
        public abstract System.Threading.Tasks.Task RetrieveSingleMarketingEvent(string marketing_event_id);

        /// <summary>
        /// Updates a marketing event
        /// </summary>
        /// <returns>Updates a marketing event</returns>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/marketing_events/{marketing_event_id}.json")]
        public abstract System.Threading.Tasks.Task UpdateMarketingEvent(string marketing_event_id);

        /// <summary>
        /// Deletes a marketing event
        /// </summary>
        /// <returns>Deletes a marketing event</returns>
        [Microsoft.AspNetCore.Mvc.HttpDelete, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/marketing_events/{marketing_event_id}.json")]
        public abstract System.Threading.Tasks.Task DeleteMarketingEvent(string marketing_event_id);

        /// <summary>
        /// Creates marketing engagements on a marketing event
        /// </summary>
        /// <param name="occurred_on">The date that these engagements occurred on, in the format “YYYY-MM-DD”.</param>
        /// <param name="ad_spend">The total ad spend for the day, if the marketing event is a paid ad with a daily spend.</param>
        /// <param name="clicks_count">The total number of clicks on the marketing event for the day.</param>
        /// <param name="comments_count">The total number of comments for the day.</param>
        /// <param name="favorites_count">The total number of favorites for the day.</param>
        /// <param name="impressions_count">The total number of impressions for the day. An impression occurs when the marketing event is served to a customer, either as a email or through a marketing channel.</param>
        /// <param name="is_cumulative">Whether the engagements are reported as lifetime values rather than daily totals.</param>
        /// <param name="shares_count">The total number of shares for the day.</param>
        /// <param name="views_count">The total number of views for the day. A view occurs when a customer reads the marketing event that was served to them, for example, if the customer opens the email or spends time looking at a Facebook post.</param>
        /// <returns>Creates marketing engagements on a marketing event</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/marketing_events/{marketing_event_id}/engagements.json")]
        public abstract System.Threading.Tasks.Task CreateMarketingEngagementsOnMarketingEvent(string marketing_event_id, [Microsoft.AspNetCore.Mvc.FromQuery] string occurred_on, [Microsoft.AspNetCore.Mvc.FromQuery] string? ad_spend = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? clicks_count = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? comments_count = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? favorites_count = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? impressions_count = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? is_cumulative = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? shares_count = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? views_count = null);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MarketingEvent
    {
        /// <summary>
        /// An optional remote identifier for a marketing event. The remote identifier lets Shopify validate engagement data.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("remote_id")]
        public string? Remote_id { get; set; } = default!;

        /// <summary>
        /// The type of marketing event. Valid values: ad, post, message, retargeting, transactional, affiliate, loyalty, newsletter, abandoned_cart.
        /// <br/> 
        /// <br/> Note
        /// <br/> If there are values that you’d like to use for event_type that are not in the list above, then please post your request here. Our approach is to be more structured than using freeform text, but to still allow for categorization of most types of marketing actions.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("event_type")]
        public string? Event_type { get; set; } = default!;

        /// <summary>
        /// The channel that your marketing event will use. Valid values: search, display, social, email, referral.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("marketing_channel")]
        public string? Marketing_channel { get; set; } = default!;

        /// <summary>
        /// Whether the event is paid or organic.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("paid")]
        public string? Paid { get; set; } = default!;

        /// <summary>
        /// The destination domain of the marketing event. Required if the marketing_channel is set to search or social.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("referring_domain")]
        public string? Referring_domain { get; set; } = default!;

        /// <summary>
        /// The budget of the ad campaign.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("budget")]
        public string? Budget { get; set; } = default!;

        /// <summary>
        /// The currency for the budget. Required if budget is specified.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        public string? Currency { get; set; } = default!;

        /// <summary>
        /// The type of the budget. Required if budget is specified. Valid values: daily, lifetime.'
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("budget_type")]
        public string? Budget_type { get; set; } = default!;

        /// <summary>
        /// The time when the marketing action was started.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("started_at")]
        public string? Started_at { get; set; } = default!;

        /// <summary>
        /// For events with a duration, the time when the event was scheduled to end.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("scheduled_to_end_at")]
        public string? Scheduled_to_end_at { get; set; } = default!;

        /// <summary>
        /// For events with a duration, the time when the event actually ended.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("ended_at")]
        public string? Ended_at { get; set; } = default!;

        /// <summary>
        /// The UTM parameters used in the links provided in the marketing event. Values must be unique and should not be url-encoded.
        /// <br/> To do traffic or order attribution you must at least define utm_campaign, utm_source, and utm_medium.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("UTM parameters")]
        public string? UTM_parameters { get; set; } = default!;

        /// <summary>
        /// A description of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        /// <summary>
        /// A link to manage the marketing event. In most cases, this links to the app that created the event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("manage_url")]
        public string? Manage_url { get; set; } = default!;

        /// <summary>
        /// A link to the live version of the event, or to a rendered preview in the app that created it.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("preview_url")]
        public string? Preview_url { get; set; } = default!;

        /// <summary>
        /// A list of the items that were marketed in the marketing event. Includes the type and id of each item. Valid values for type are:
        /// <br/> 
        /// <br/> product
        /// <br/> collection
        /// <br/> price_rule
        /// <br/> discount (Will be replaced by price_rule after April 20, 2017.)
        /// <br/> page
        /// <br/> article
        /// <br/> homepage (Doesn't have an id.)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("marketed_resources")]
        public string? Marketed_resources { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
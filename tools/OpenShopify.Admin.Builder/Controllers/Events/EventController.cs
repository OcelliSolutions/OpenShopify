//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class EventControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieves a list of events
        /// </summary>
        /// <param name="created_at_max">Show events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="created_at_min">Show events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="fields">Show only certain fields, specified by a comma-separated list of field names.</param>
        /// <param name="filter">Show events specified in this filter.</param>
        /// <param name="limit">The number of results to show.</param>
        /// <param name="since_id">Show only results after the specified ID.</param>
        /// <param name="verb">Show events of a certain type.</param>
        /// <returns>Retrieves a list of events</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/events.json")]
        public abstract System.Threading.Tasks.Task RetrieveListOfEvents([Microsoft.AspNetCore.Mvc.FromQuery] string? created_at_max = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? created_at_min = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? fields = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? filter = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? limit = "50", [Microsoft.AspNetCore.Mvc.FromQuery] string? since_id = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? verb = null);

        /// <summary>
        /// Retrieves a single event
        /// </summary>
        /// <param name="fields">Show only certain fields, specified by a comma-separated list of field names.</param>
        /// <returns>Retrieves a single event</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/events/{event_id}.json")]
        public abstract System.Threading.Tasks.Task RetrieveSingleEvent(string event_id, [Microsoft.AspNetCore.Mvc.FromQuery] string? fields = null);

        /// <summary>
        /// Retrieves a count of events
        /// </summary>
        /// <param name="created_at_max">Count only events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="created_at_min">Count only events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <returns>Retrieves a count of events</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/events/count.json")]
        public abstract System.Threading.Tasks.Task RetrieveCountOfEvents([Microsoft.AspNetCore.Mvc.FromQuery] string? created_at_max = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? created_at_min = null);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Event
    {
        /// <summary>
        /// Refers to a certain event and its resources.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("arguments")]
        public string? Arguments { get; set; } = default!;

        /// <summary>
        /// A text field containing information about the event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public string? Body { get; set; } = default!;

        /// <summary>
        /// The date and time (ISO 8601 format) when the event was created.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("created_at")]
        public string? Created_at { get; set; } = default!;

        /// <summary>
        /// The ID of the event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; } = default!;

        /// <summary>
        /// A human readable description of the event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; } = default!;

        /// <summary>
        /// A relative URL to the resource the event is for, if applicable.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("path")]
        public string? Path { get; set; } = default!;

        /// <summary>
        /// A human readable description of the event. Can contain some HTML formatting.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; } = default!;

        /// <summary>
        /// The ID of the resource that generated the event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subject_id")]
        public string? Subject_id { get; set; } = default!;

        /// <summary>
        /// The type of the resource that generated the event. Valid values:
        /// <br/> 
        /// <br/> Article
        /// <br/> Blog
        /// <br/> Collection
        /// <br/> Comment
        /// <br/> Order
        /// <br/> Page
        /// <br/> PriceRule
        /// <br/> Product
        /// <br/> ApiPermission
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subject_type")]
        public string? Subject_type { get; set; } = default!;

        /// <summary>
        /// The type of event that occurred. Different resources generate different types of event.
        /// <br/> See the Resources section for a list of possible verbs.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("verb")]
        public string? Verb { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
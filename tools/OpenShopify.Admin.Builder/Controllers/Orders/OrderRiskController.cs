//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder.Models
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class OrderRiskControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Creates an order risk for an order
        /// </summary>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("orders/{order_id}/risks.json")]
        public abstract System.Threading.Tasks.Task CreateOrderRiskForOrder([System.ComponentModel.DataAnnotations.Required] OpenShopify.Admin.Builder.Models.CreateOrderRiskForOrderRequest request, long order_id);

        /// <summary>
        /// Retrieves a list of all order risks for an order
        /// </summary>
        /// <remarks>
        /// Retrieves a list of all order risks for an order. **Note:** As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the `page` parameter will return an error. To learn more, see [*Make paginated requests to the REST Admin API*](/api/usage/pagination-rest).
        /// </remarks>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("orders/{order_id}/risks.json")]
        public abstract System.Threading.Tasks.Task ListOrderRisksForOrder(long order_id);

        /// <summary>
        /// Retrieves a single order risk by its ID
        /// </summary>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("orders/{order_id}/risks/{risk_id}.json")]
        public abstract System.Threading.Tasks.Task GetOrderRisk(long order_id, long risk_id);

        /// <summary>
        /// Updates an order risk
        /// </summary>
        /// <remarks>
        /// Updates an order risk
        /// 
        ///  &lt;aside class="note"&gt; 
        /// 
        /// #### Note
        /// 
        /// You cannot modify an order risk that was created by another application.
        ///  &lt;/aside&gt;
        /// </remarks>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("orders/{order_id}/risks/{risk_id}.json")]
        public abstract System.Threading.Tasks.Task UpdateOrderRisk([System.ComponentModel.DataAnnotations.Required] OpenShopify.Admin.Builder.Models.UpdateOrderRiskRequest request, long order_id, long risk_id);

        /// <summary>
        /// Deletes an order risk for an order
        /// </summary>
        /// <remarks>
        /// Deletes an order risk for an order
        /// 
        ///  &lt;aside class="note"&gt; 
        /// 
        /// #### Note
        /// 
        /// You cannot delete an order risk that was created by another application.
        ///  &lt;/aside&gt;
        /// </remarks>
        [Microsoft.AspNetCore.Mvc.HttpDelete, Microsoft.AspNetCore.Mvc.Route("orders/{order_id}/risks/{risk_id}.json")]
        public abstract System.Threading.Tasks.Task DeleteOrderRiskForOrder(long order_id, long risk_id);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum OrderRiskRecommendation
    {

        [System.Runtime.Serialization.EnumMember(Value = @"cancel")]
        Cancel = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"investigate")]
        Investigate = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"accept")]
        Accept = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record OrderRiskOrig
    {
        /// <summary>
        /// Whether this order risk is severe enough to force the cancellation of the order. If `true`, then this order risk is included in the **Order canceled** message that's shown on the details page of the canceled order. 
        /// 
        /// **Note:** Setting this property to `true` does not cancel the order. Use this property only if your app automatically cancels the order using the [Order](/docs/admin-api/rest/reference/orders/order/#cancel-{{ current_version }}) resource. If your app doesn't automatically cancel orders based on order risks, then leave this property set to `false`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cause_cancel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? CauseCancel { get; set; } = default!;

        /// <summary>
        /// The ID of the checkout that the order risk belongs to.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("checkout_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? CheckoutId { get; set; } = default!;

        /// <summary>
        /// Whether the order risk is displayed on the order details page in the Shopify admin. If `false`, then this order risk is ignored when Shopify determines your app's overall risk level for the order.
        /// 
        /// It's not advised to create order risks with a display set to `false`. 
        /// &lt;aside class='note'&gt;
        /// 
        /// This property can't be changed after an order risk is created.
        /// &lt;/aside&gt;&lt;aside class='caution'&gt;This property might be removed in future API versions.&lt;/aside&gt;
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("display")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Display { get; set; } = default!;

        /// <summary>
        /// The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if `display` is set to`true`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("merchant_message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Obsolete]
        public string? MerchantMessage { get; set; } = default!;

        /// <summary>
        /// The message that's displayed to the merchant to indicate the results of the fraud check. The message is displayed only if `display` is set to`true`.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Message { get; set; } = default!;

        /// <summary>
        /// The ID of the order that the order risk belongs to.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("order_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? OrderId { get; set; } = default!;

        /// <summary>
        /// The recommended action given to the merchant. Valid values: 
        /// 
        /// *   **cancel**: There is a high level of risk that this order is fraudulent. The merchant should cancel the order. 
        /// *   **investigate**: There is a medium level of risk that this order is fraudulent. The merchant should investigate the order. 
        /// *   **accept**: There is a low level of risk that this order is fraudulent. The order risk found no indication of fraud.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("recommendation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Recommendation { get; set; } = default!;

        /// <summary>
        /// **For internal use only**. A number between 0 and 1 that's assigned to the order. The closer the score is to 1, the more likely it is that the order is fraudulent. &lt;aside class="note"&gt; 
        /// 
        /// #### Note
        /// 
        /// There is no guarantee of stability in risk scores. Scores are not probabilities. The relationship between scores and the probability of fraud can vary over time and between risk providers.
        ///  &lt;/aside&gt;
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("score")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public decimal? Score { get; set; } = default!;

        /// <summary>
        /// The source of the order risk.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("source")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Source { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class AbandonedCheckoutsControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieves a list of abandoned checkouts
        /// </summary>
        /// <param name="created_at_max">Show checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="created_at_min">Show checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="limit">The maximum number of results to show.</param>
        /// <param name="since_id">Restrict results to after the specified ID.</param>
        /// <param name="status">Show only checkouts with a given status.</param>
        /// <param name="updated_at_max">Show checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <param name="updated_at_min">Show checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)</param>
        /// <returns>Retrieves a list of abandoned checkouts</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("admin/api/{api_version}/checkouts.json")]
        public abstract System.Threading.Tasks.Task RetrieveListOfAbandonedCheckouts([Microsoft.AspNetCore.Mvc.FromQuery] string? created_at_max = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? created_at_min = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? limit = "50", [Microsoft.AspNetCore.Mvc.FromQuery] string? since_id = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? status = "open", [Microsoft.AspNetCore.Mvc.FromQuery] string? updated_at_max = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? updated_at_min = null);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Abandonedcheckouts
    {
        /// <summary>
        /// The recovery URL that's sent to a customer so they can recover their checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("abandoned_checkout_url")]
        public string? Abandoned_checkout_url { get; set; } = default!;

        /// <summary>
        /// The mailing address associated with the payment method. It has the following properties:
        /// <br/> 
        /// <br/> address1: The street address of the billing address.
        /// <br/> address2: An optional additional field for the street address of the billing address.
        /// <br/> city: The city of the billing address.
        /// <br/> company: The company of the person associated with the billing address.
        /// <br/> country: The name of the country of the billing address.
        /// <br/> country_code: The two-letter code (ISO 3166-1 alpha-2 format) for the country of the billing address.
        /// <br/> default: Whether this is the default address for the customer.
        /// <br/> first_name: The first name of the person associated with the payment method.
        /// <br/> last_name: The last name of the person associated with the payment method.
        /// <br/> latitude: The latitude of the billing address.
        /// <br/> longitude: The longitude of the billing address.
        /// <br/> name: The full name of the person associated with the payment method.
        /// <br/> phone: The phone number at the billing address.
        /// <br/> province: The name of the state or province of the billing address.
        /// <br/> province_code: The two-letter abbreviation of the state or province of the billing address.
        /// <br/> zip: The zip or postal code of the billing address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("billing_address")]
        public string? Billing_address { get; set; } = default!;

        /// <summary>
        /// Whether the customer would like to receive email updates from the shop. This is set by the I want to receive occasional emails about new products, promotions and other news checkbox during checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("buyer_accepts_marketing")]
        public string? Buyer_accepts_marketing { get; set; } = default!;

        /// <summary>
        /// Whether the customer would like to receive SMS updates from the shop. This is set by the Text me with news and offers checkbox during checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("buyer_accepts_sms_marketing")]
        public string? Buyer_accepts_sms_marketing { get; set; } = default!;

        /// <summary>
        /// The ID for the cart that's attached to the checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cart_token")]
        public string? Cart_token { get; set; } = default!;

        /// <summary>
        /// The date and time (ISO 8601 format) when the checkout was closed. If the checkout was not closed, then this value is null.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("closed_at")]
        public string? Closed_at { get; set; } = default!;

        /// <summary>
        /// The date and time (ISO 8601 format) when the checkout was completed. For abandoned checkouts, this value is null until a customer completes the checkout using the recovery URL.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("completed_at")]
        public string? Completed_at { get; set; } = default!;

        /// <summary>
        /// The date and time (ISO 8601 format) when the checkout was created.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("created_at")]
        public string? Created_at { get; set; } = default!;

        /// <summary>
        /// The three-letter code (ISO 4217 format) of the shop's default currency at the time of checkout. For the currency that the customer used at checkout, see presentment_currency.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        public string? Currency { get; set; } = default!;

        /// <summary>
        /// The customer details associated with the abandoned checkout. For more information, refer to the Customer resource.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customer")]
        public string? Customer { get; set; } = default!;

        /// <summary>
        /// The two or three-letter language code, optionally followed by a region modifier.
        /// <br/> Example values: en, en-CA.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customer_locale")]
        public string? Customer_locale { get; set; } = default!;

        /// <summary>
        /// The ID of the Shopify POS device that created the checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string? Device_id { get; set; } = default!;

        /// <summary>
        /// Discount codes applied to the checkout. Returns an empty array when no codes are applied.
        /// <br/> 
        /// <br/> Each discount code has the following fields:
        /// <br/> 
        /// <br/> amount: The amount of the discount in presentment currency.
        /// <br/> code: The discount code.
        /// <br/> type: The type of discount. Valid values: percentage, shipping, fixed_amount. (default: fixed_amount)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("discount_codes")]
        public string? Discount_codes { get; set; } = default!;

        /// <summary>
        /// The customer's email address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; set; } = default!;

        /// <summary>
        /// The payment gateway used by the checkout. For abandoned checkouts, this value is always null.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("gateway")]
        public string? Gateway { get; set; } = default!;

        /// <summary>
        /// The ID for the checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; } = default!;

        /// <summary>
        /// The URL for the page where the customer entered the shop.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("landing_site")]
        public string? Landing_site { get; set; } = default!;

        /// <summary>
        /// A list of line items, each containing information about an item in the checkout. Each object has the following properties:
        /// <br/> 
        /// <br/> fulfillment_service: The fulfillment service provider for the item.
        /// <br/> fulfillment_status: The status of the item's fulfillment. Valid values: fulfilled, null, partial.
        /// <br/> grams: The weight of the item in grams.
        /// <br/> price: The price of the item in presentment currency.
        /// <br/> product_id: The product ID od the item.
        /// <br/> quantity: The number of products that were purchased.
        /// <br/> requires_shipping: Whether the items requires shipping..
        /// <br/> sku: A unique identifier for the item in the shop.
        /// <br/> title: The title of the product.
        /// <br/> variant_id: The product variant ID of item.
        /// <br/> variant_title: The title of the product variant.
        /// <br/> vendor: The name of the item's supplier.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("line_items")]
        public string? Line_items { get; set; } = default!;

        /// <summary>
        /// The ID of the physical location where the checkout was processed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("location_id")]
        public string? Location_id { get; set; } = default!;

        /// <summary>
        /// The text of an optional note that a shop owner can attach to the order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("note")]
        public string? Note { get; set; } = default!;

        /// <summary>
        /// The customer's phone number for receiving SMS notifications.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("phone")]
        public string? Phone { get; set; } = default!;

        /// <summary>
        /// The three-letter code (ISO 4217 format) of the currency that the customer used at checkout. For the shop's default currency, see currency.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("presentment_currency")]
        public string? Presentment_currency { get; set; } = default!;

        /// <summary>
        /// The website that referred the customer to the shop.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("referring_site")]
        public string? Referring_site { get; set; } = default!;

        /// <summary>
        /// The mailing address where the order will be shipped to. It has the following properties:
        /// <br/> 
        /// <br/> address1: The street address of the shipping address.
        /// <br/> address2: An optional additional field for the street address of the shipping address.
        /// <br/> city: The city of the shipping address.
        /// <br/> company: The company of the person associated with the shipping address.
        /// <br/> country: The name of the country of the shipping address.
        /// <br/> country_code: The two-letter code (ISO 3166-1 alpha-2 format) for the country of the shipping address.
        /// <br/> first_name: The first name of the person associated with the shipping address.
        /// <br/> last_name: The last name of the person associated with the shipping address.
        /// <br/> latitude: The latitude of the shipping address.
        /// <br/> longitude: The longitude of the shipping address.
        /// <br/> name: The full name of the person associated with the shipping address.
        /// <br/> phone: The phone number at the shipping address.
        /// <br/> province: The name of the state or province of the shipping address.
        /// <br/> province_code: The two-letter abbreviation of the state or province of the shipping address.
        /// <br/> zip: The zip or postal code of the shipping address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("shipping_address")]
        public string? Shipping_address { get; set; } = default!;

        /// <summary>
        /// The phone number used to opt in to SMS marketing during checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sms_marketing_phone")]
        public string? Sms_marketing_phone { get; set; } = default!;

        /// <summary>
        /// Information about the chosen shipping method. It has the following properties:
        /// <br/> 
        /// <br/> code: A reference to the shipping method.
        /// <br/> price: The price of the shipping method in presentment currency.
        /// <br/> source: The channel where the checkout originated. Example value: shopify.
        /// <br/> title: The title of the shipping method. Example value: International Shipping.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("shipping_lines")]
        public string? Shipping_lines { get; set; } = default!;

        /// <summary>
        /// Where the checkout originated. Valid values: web, pos, iphone, android.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("source_name")]
        public string? Source_name { get; set; } = default!;

        /// <summary>
        /// The price of the checkout in presentment currency before shipping and taxes.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subtotal_price")]
        public string? Subtotal_price { get; set; } = default!;

        /// <summary>
        /// An array of tax line objects, each of which details a tax applicable to the checkout. Each object has the following properties:
        /// <br/> 
        /// <br/> price: The amount of tax to be charged in presentment currency.
        /// <br/> rate: The rate of tax to be applied.
        /// <br/> title: The name of the tax.
        /// <br/> channel_liable: Whether the channel that submitted the tax line is liable for remitting. A value of null indicates unknown liability for the tax line.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("tax_lines")]
        public string? Tax_lines { get; set; } = default!;

        /// <summary>
        /// Whether taxes are included in the price.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("taxes_included")]
        public string? Taxes_included { get; set; } = default!;

        /// <summary>
        /// A unique ID for a checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; } = default!;

        /// <summary>
        /// The total amount of discounts to be applied in presentment currency.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("total_discounts")]
        public string? Total_discounts { get; set; } = default!;

        /// <summary>
        /// The total duties of the checkout in presentment currency.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("total_duties")]
        public string? Total_duties { get; set; } = default!;

        /// <summary>
        /// The sum of the prices of all line items in the checkout in presentment currency.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("total_line_items_price")]
        public string? Total_line_items_price { get; set; } = default!;

        /// <summary>
        /// The sum of line item prices, all discounts, shipping costs, and taxes for the checkout in presentment currency.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("total_price")]
        public string? Total_price { get; set; } = default!;

        /// <summary>
        /// The sum of all the taxes applied to the checkout in presentment currency.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("total_tax")]
        public string? Total_tax { get; set; } = default!;

        /// <summary>
        /// The sum of all the weights in grams of the line items in the checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("total_weight")]
        public string? Total_weight { get; set; } = default!;

        /// <summary>
        /// The date and time (ISO 8601 format) when the checkout was last modified.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("updated_at")]
        public string? Updated_at { get; set; } = default!;

        /// <summary>
        /// The ID of the user who created the checkout.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("user_id")]
        public string? User_id { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
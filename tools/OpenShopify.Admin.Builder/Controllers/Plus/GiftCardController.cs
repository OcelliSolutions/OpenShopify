//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using System.Text.Json;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace OpenShopify.Admin.Builder.Models
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class GiftCardControllerBase : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        /// <summary>
        /// Retrieves a list of gift cards
        /// </summary>
        /// <remarks>
        /// Retrieves a list of gift cards. This endpoint implements pagination by using links that are provided in the response header. To learn more, see [*Make paginated requests to the REST Admin API*](/api/usage/pagination-rest).
        /// </remarks>
        /// <param name="fields">Show only certain fields, specified by a comma-separated list of field names.</param>
        /// <param name="limit">The maximum number of results to show.</param>
        /// <param name="page_info">A unique ID used to access a certain page of results.</param>
        /// <param name="since_id">Restrict results to after the specified ID.</param>
        /// <param name="status">Retrieve gift cards with a given status. Valid values:</param>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("gift_cards.json")]
        public abstract System.Threading.Tasks.Task ListGiftCards([Microsoft.AspNetCore.Mvc.FromQuery] string? fields = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? limit = null, string? page_info = null, [Microsoft.AspNetCore.Mvc.FromQuery] long? since_id = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? status = null);

        /// <summary>
        /// Creates a gift card
        /// </summary>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("gift_cards.json")]
        public abstract System.Threading.Tasks.Task CreateGiftCard([System.ComponentModel.DataAnnotations.Required] OpenShopify.Admin.Builder.Models.CreateGiftCardRequest request);

        /// <summary>
        /// Retrieves a single gift card
        /// </summary>
        /// <remarks>
        /// Retrieves a single gift card by its ID
        /// </remarks>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("gift_cards/{gift_card_id}.json")]
        public abstract System.Threading.Tasks.Task GetGiftCard(long gift_card_id);

        /// <summary>
        /// Updates an existing gift card
        /// </summary>
        /// <remarks>
        /// Updates an existing gift card.
        /// 
        /// Only the expiry date, note, and template suffix properties of a gift card can be changed via the API.
        /// </remarks>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("gift_cards/{gift_card_id}.json")]
        public abstract System.Threading.Tasks.Task UpdateGiftCard([System.ComponentModel.DataAnnotations.Required] OpenShopify.Admin.Builder.Models.UpdateGiftCardRequest request, long gift_card_id);

        /// <summary>
        /// Retrieves a count of gift cards
        /// </summary>
        /// <remarks>
        /// Retrieves a count of gift cards with a given status.
        /// </remarks>
        /// <param name="status">Count gift cards with a given status. Valid values:</param>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("gift_cards/count.json")]
        public abstract System.Threading.Tasks.Task CountGiftCards([Microsoft.AspNetCore.Mvc.FromQuery] string? status = null);

        /// <summary>
        /// Disables a gift card
        /// </summary>
        /// <remarks>
        /// Disables a gift card. This action can't be undone.
        /// </remarks>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("gift_cards/{gift_card_id}/disable.json")]
        public abstract System.Threading.Tasks.Task DisableGiftCard(long gift_card_id);

        /// <summary>
        /// Searches for gift cards
        /// </summary>
        /// <remarks>
        /// Searches for gift cards that match a supplied query. The following fields are indexed by search:
        /// 
        /// *   `created_at` 
        /// *   `updated_at` 
        /// *   `disabled_at` 
        /// *   `balance` 
        /// *   `initial_value` 
        /// *   `amount_spent` 
        /// *   `email` 
        /// *   `last_characters` 
        /// 
        /// This endpoint implements pagination by using links that are provided in the response header. To learn more, see [*Make paginated requests to the REST Admin API*](/api/usage/pagination-rest).
        /// </remarks>
        /// <param name="created_at_max">Show gift cards created at or before date.</param>
        /// <param name="created_at_min">Show gift cards created at or after date.</param>
        /// <param name="fields">Show only certain fields, specified by a comma-separated list of field names.</param>
        /// <param name="limit">The maximum number of results to retrieve.</param>
        /// <param name="page_info">A unique ID used to access a certain page of results.</param>
        /// <param name="order">The field and direction to order results by.</param>
        /// <param name="query">The text to search for.</param>
        /// <param name="updated_at_max">Show gift cards last updated at or before date.</param>
        /// <param name="updated_at_min">Show gift cards last updated at or after date.</param>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("gift_cards/search.json")]
        public abstract System.Threading.Tasks.Task SearchForGiftCards([Microsoft.AspNetCore.Mvc.FromQuery] System.DateTimeOffset? created_at_max = null, [Microsoft.AspNetCore.Mvc.FromQuery] System.DateTimeOffset? created_at_min = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? fields = null, [Microsoft.AspNetCore.Mvc.FromQuery] int? limit = null, string? page_info = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? order = null, [Microsoft.AspNetCore.Mvc.FromQuery] string? query = null, [Microsoft.AspNetCore.Mvc.FromQuery] System.DateTimeOffset? updated_at_max = null, [Microsoft.AspNetCore.Mvc.FromQuery] System.DateTimeOffset? updated_at_min = null);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record GiftCardOrig
    {
        /// <summary>
        /// The ID of the client that issued the gift card.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("api_client_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? ApiClientId { get; set; } = default!;

        /// <summary>
        /// The balance of the gift card.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public decimal? Balance { get; set; } = default!;

        /// <summary>
        /// The gift card code, which is a string of alphanumeric characters. For security reasons, this is available only upon creation of the gift card. (minimum: 8 characters, maximum: 20 characters)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Code { get; set; } = default!;

        /// <summary>
        /// The currency of the gift card.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Currency { get; set; } = default!;

        /// <summary>
        /// The ID of the customer associated with this gift card.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customer_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? CustomerId { get; set; } = default!;

        /// <summary>
        /// The date and time ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format) when the gift card was disabled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("disabled_at")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? DisabledAt { get; set; } = default!;

        /// <summary>
        /// The date (`YYYY-MM-DD` format) when the gift card expires. Returns `null` if the gift card doesn't have an expiration date.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("expires_on")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? ExpiresOn { get; set; } = default!;

        /// <summary>
        /// The initial value of the gift card when it was created.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("initial_value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public decimal? InitialValue { get; set; } = default!;

        /// <summary>
        /// The last four characters of the gift card code. Because gift cards are alternative payment methods, the full code cannot be retrieved.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("last_characters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? LastCharacters { get; set; } = default!;

        /// <summary>
        /// The ID of the line item that initiated the creation of this gift card, if it was created by an order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("line_item_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? LineItemId { get; set; } = default!;

        /// <summary>
        /// An optional note that a merchant can attach to the gift card that isn't visible to customers.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("note")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Note { get; set; } = default!;

        /// <summary>
        /// The ID of the order that initiated the creation of this gift card, if it was created by an order.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("order_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? OrderId { get; set; } = default!;

        /// <summary>
        /// The suffix of the Liquid template that's used to render the gift card online. For example, if the value is `birthday`, then the gift card is rendered using the template `gift_card.birthday.liquid`. When the value is `null`, the default `gift_card.liquid` template is used.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("template_suffix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? TemplateSuffix { get; set; } = default!;

        /// <summary>
        /// The ID of the user that issued the gift card, if it was issued by a user.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("user_id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long? UserId { get; set; } = default!;

        private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603
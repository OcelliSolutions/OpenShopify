{
  "openapi": "3.0.0",
  "info": {
    "title": "Page",
    "description": "        <p>In addition to an online storefront, Shopify stores come with a tool for creating basic HTML web pages. Store owners can create any number of pages to hold static content, such as an <strong>About us</strong> page, a <strong>Contact us</strong> page, or a page with customer testimonials.</p>\n        <p>These web pages are represented by the Page resource, and their HTML content is contained in the value of the <code>body_html</code> property. The Page resource lets you retrieve, create, update, and delete web pages for a store.</p>\n        <p>Pages are meant to be used for long-term, static content that rarely changes. For creating content on a regular basis, use the <a href=\"/docs/admin-api/rest/reference/online-store/blog\">Blog</a> resource instead.</p>\n",
    "x-owner": "https://vault.shopify.io/teams/469",
    "x-description-list": null,
    "version": "2022-07"
  },
  "paths": [
    {
      "description": "Retrieve a list of all pages. <strong>Note:</strong> As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the <code>page</code> parameter will return an error. To learn more, refer to <a href='/api/usage/pagination-rest'>Make paginated requests to the REST Admin API</a>.",
      "summary": "Retrieves a list of pages",
      "operationId": "Retrievesalistofpages",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "created_at_max",
          "description": "Show pages created before date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "created_at_min",
          "description": "Show pages created after date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fields",
          "description": "Show only certain fields, specified by a comma-separated list of field names.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "handle",
          "description": "Retrieve a page with a given handle.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "description": "The maximum number of results to show.",
          "in": "query",
          "schema": {
            "type": "string",
            "default": 50,
            "maximum": 250
          }
        },
        {
          "name": "published_at_max",
          "description": "Show pages published before date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "published_at_min",
          "description": "Show pages published after date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "published_status",
          "description": "Restrict results to pages with a given published status:",
          "in": "query",
          "schema": {
            "type": "string",
            "default": "any"
          },
          "examples": {
            "published": {
              "summary": "Show only published pages.",
              "value": "published"
            },
            "unpublished": {
              "summary": "Show only unpublished pages.",
              "value": "unpublished"
            },
            "any": {
              "summary": "Show published and unpublished pages.",
              "value": "any"
            }
          }
        },
        {
          "name": "since_id",
          "description": "Restrict results to after the specified ID.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "title",
          "description": "Retrieve pages with a given title.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "updated_at_max",
          "description": "Show pages last updated before date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "updated_at_min",
          "description": "Show pages last updated after date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieves a list of pages",
          "content": {
            "application/json": {
              "examples": {
                "Get all pages for a shop": {
                  "value": {
                    "pages": [
                      {
                        "id": 108828309,
                        "title": "Sample Page",
                        "shop_id": 548380009,
                        "handle": "sample",
                        "body_html": "<p>this is a <strong>sample</strong> page.</p>",
                        "author": "Dennis",
                        "created_at": "2008-07-15T18:00:00-06:00",
                        "updated_at": "2008-07-16T18:00:00-06:00",
                        "published_at": null,
                        "template_suffix": null,
                        "admin_graphql_api_id": "gid://shopify/OnlineStorePage/108828309"
                      },
                      {
                        "id": 169524623,
                        "title": "Store hours",
                        "shop_id": 548380009,
                        "handle": "store-hours",
                        "body_html": "<p>We never close.</p>",
                        "author": "Jobs",
                        "created_at": "2013-12-31T17:00:00-07:00",
                        "updated_at": "2013-12-31T17:00:00-07:00",
                        "published_at": "2014-02-01T17:00:00-07:00",
                        "template_suffix": null,
                        "admin_graphql_api_id": "gid://shopify/OnlineStorePage/169524623"
                      },
                      {
                        "id": 322471,
                        "title": "Support",
                        "shop_id": 548380009,
                        "handle": "support",
                        "body_html": "<p>Come in store for support.</p>",
                        "author": "Dennis",
                        "created_at": "2009-07-15T18:00:00-06:00",
                        "updated_at": "2009-07-16T18:00:00-06:00",
                        "published_at": null,
                        "template_suffix": null,
                        "admin_graphql_api_id": "gid://shopify/OnlineStorePage/322471"
                      },
                      {
                        "id": 131092082,
                        "title": "Terms of Services",
                        "shop_id": 548380009,
                        "handle": "tos",
                        "body_html": "<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>",
                        "author": "Dennis",
                        "created_at": "2008-07-15T18:00:00-06:00",
                        "updated_at": "2008-07-16T18:00:00-06:00",
                        "published_at": "2008-07-15T18:00:00-06:00",
                        "template_suffix": null,
                        "admin_graphql_api_id": "gid://shopify/OnlineStorePage/131092082"
                      }
                    ]
                  }
                },
                "Retrieve a list of all pages after the specified ID": {
                  "value": {
                    "pages": [
                      {
                        "id": 131092082,
                        "title": "Terms of Services",
                        "shop_id": 548380009,
                        "handle": "tos",
                        "body_html": "<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>",
                        "author": "Dennis",
                        "created_at": "2008-07-15T18:00:00-06:00",
                        "updated_at": "2008-07-16T18:00:00-06:00",
                        "published_at": "2008-07-15T18:00:00-06:00",
                        "template_suffix": null,
                        "admin_graphql_api_id": "gid://shopify/OnlineStorePage/131092082"
                      },
                      {
                        "id": 169524623,
                        "title": "Store hours",
                        "shop_id": 548380009,
                        "handle": "store-hours",
                        "body_html": "<p>We never close.</p>",
                        "author": "Jobs",
                        "created_at": "2013-12-31T17:00:00-07:00",
                        "updated_at": "2013-12-31T17:00:00-07:00",
                        "published_at": "2014-02-01T17:00:00-07:00",
                        "template_suffix": null,
                        "admin_graphql_api_id": "gid://shopify/OnlineStorePage/169524623"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2019-10/pages.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"pages\":[{\"id\":108828309,\"title\":\"Sample Page\",\"shop_id\":548380009,\"handle\":\"sample\",\"body_html\":\"<p>this is a <strong>sample</strong> page.</p>\",\"author\":\"Dennis\",\"created_at\":\"2008-07-15T20:00:00-04:00\",\"updated_at\":\"2008-07-16T20:00:00-04:00\",\"published_at\":null,\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/108828309\"},{\"id\":169524623,\"title\":\"Store hours\",\"shop_id\":548380009,\"handle\":\"store-hours\",\"body_html\":\"<p>We never close.</p>\",\"author\":\"Jobs\",\"created_at\":\"2013-12-31T19:00:00-05:00\",\"updated_at\":\"2013-12-31T19:00:00-05:00\",\"published_at\":\"2014-02-01T19:00:00-05:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/169524623\"},{\"id\":322471,\"title\":\"Support\",\"shop_id\":548380009,\"handle\":\"support\",\"body_html\":\"<p>Come in store for support.</p>\",\"author\":\"Dennis\",\"created_at\":\"2009-07-15T20:00:00-04:00\",\"updated_at\":\"2009-07-16T20:00:00-04:00\",\"published_at\":null,\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/322471\"},{\"id\":131092082,\"title\":\"Terms of Services\",\"shop_id\":548380009,\"handle\":\"tos\",\"body_html\":\"<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>\",\"author\":\"Dennis\",\"created_at\":\"2008-07-15T20:00:00-04:00\",\"updated_at\":\"2008-07-16T20:00:00-04:00\",\"published_at\":\"2008-07-15T20:00:00-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/131092082\"}]}"
          },
          "name": "Get all pages for a shop",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-07/pages.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Page.all(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Page.all({\n  session: test_session,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nPage::all(\n    $this->test_session, // Session\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "since_id=108828309",
          "request_path": "/admin/api/2022-07/pages.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2019-10/pages.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"pages\":[{\"id\":131092082,\"title\":\"Terms of Services\",\"shop_id\":548380009,\"handle\":\"tos\",\"body_html\":\"<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>\",\"author\":\"Dennis\",\"created_at\":\"2008-07-15T20:00:00-04:00\",\"updated_at\":\"2008-07-16T20:00:00-04:00\",\"published_at\":\"2008-07-15T20:00:00-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/131092082\"},{\"id\":169524623,\"title\":\"Store hours\",\"shop_id\":548380009,\"handle\":\"store-hours\",\"body_html\":\"<p>We never close.</p>\",\"author\":\"Jobs\",\"created_at\":\"2013-12-31T19:00:00-05:00\",\"updated_at\":\"2013-12-31T19:00:00-05:00\",\"published_at\":\"2014-02-01T19:00:00-05:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/169524623\"}]}"
          },
          "name": "Retrieve a list of all pages after the specified ID",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-07/pages.json?since_id=108828309\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Page.all(\n  session: test_session,\n  since_id: \"108828309\",\n)"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Page.all({\n  session: test_session,\n  since_id: \"108828309\",\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nPage::all(\n    $this->test_session, // Session\n    [], // Url Ids\n    [\"since_id\" => \"108828309\"], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/{api_version}/pages.json",
      "action": "get"
    },
    {
      "description": "Creates a page",
      "summary": "Creates a page",
      "operationId": "Createsapage",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "201": {
          "description": "Creates a page",
          "content": {
            "application/json": {
              "examples": {
                "Create a page with HTML markup": {
                  "value": {
                    "page": {
                      "id": 1025371371,
                      "title": "Warranty information",
                      "shop_id": 548380009,
                      "handle": "warranty-information",
                      "body_html": "<h2>Warranty</h2>\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>",
                      "author": "Shopify API",
                      "created_at": "2022-04-05T11:25:18-06:00",
                      "updated_at": "2022-04-05T11:25:18-06:00",
                      "published_at": "2022-04-05T11:25:18-06:00",
                      "template_suffix": null,
                      "admin_graphql_api_id": "gid://shopify/OnlineStorePage/1025371371"
                    }
                  }
                },
                "Create an unpublished page": {
                  "value": {
                    "page": {
                      "id": 1025371372,
                      "title": "Warranty information",
                      "shop_id": 548380009,
                      "handle": "warranty-information",
                      "body_html": "<h2>Warranty</h2>\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>",
                      "author": "Shopify API",
                      "created_at": "2022-04-05T11:25:20-06:00",
                      "updated_at": "2022-04-05T11:25:20-06:00",
                      "published_at": null,
                      "template_suffix": null,
                      "admin_graphql_api_id": "gid://shopify/OnlineStorePage/1025371372"
                    }
                  }
                },
                "Create a page with a metafield": {
                  "value": {
                    "page": {
                      "id": 1025371373,
                      "title": "Warranty information",
                      "shop_id": 548380009,
                      "handle": "warranty-information",
                      "body_html": "<h2>Warranty</h2>\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>",
                      "author": "Shopify API",
                      "created_at": "2022-04-05T11:25:22-06:00",
                      "updated_at": "2022-04-05T11:25:22-06:00",
                      "published_at": "2022-04-05T11:25:22-06:00",
                      "template_suffix": null,
                      "admin_graphql_api_id": "gid://shopify/OnlineStorePage/1025371373"
                    }
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Creates a page",
          "content": {
            "application/json": {
              "examples": {
                "Creating a page without a title fails and returns an error": {
                  "value": {
                    "errors": {
                      "title": [
                        "can't be blank"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "201",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-07/pages.json",
            "headers": {},
            "body": "{\"page\":{\"title\":\"Warranty information\",\"body_html\":\"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\"}}"
          },
          "response": {
            "action": "HTTP/1.1 201 Created",
            "headers": {},
            "body": "{\"page\":{\"id\":1025371371,\"title\":\"Warranty information\",\"shop_id\":548380009,\"handle\":\"warranty-information\",\"body_html\":\"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\",\"author\":\"Shopify API\",\"created_at\":\"2022-04-05T13:25:18-04:00\",\"updated_at\":\"2022-04-05T13:25:18-04:00\",\"published_at\":\"2022-04-05T13:25:18-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/1025371371\"}}"
          },
          "name": "Create a page with HTML markup",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"page\":{\"title\":\"Warranty information\",\"body_html\":\"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-07/pages.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\npage = ShopifyAPI::Page.new(session: test_session)\npage.title = \"Warranty information\"\npage.body_html = \"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\"\npage.save!"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst page = new Page({session: test_session});\npage.title = \"Warranty information\";\npage.body_html = \"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\";\nawait page.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$page = new Page($this->test_session);\n$page->title = \"Warranty information\";\n$page->body_html = \"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\";\n$page->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "201",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-07/pages.json",
            "headers": {},
            "body": "{\"page\":{\"title\":\"Warranty information\",\"body_html\":\"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\",\"published\":false}}"
          },
          "response": {
            "action": "HTTP/1.1 201 Created",
            "headers": {},
            "body": "{\"page\":{\"id\":1025371372,\"title\":\"Warranty information\",\"shop_id\":548380009,\"handle\":\"warranty-information\",\"body_html\":\"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\",\"author\":\"Shopify API\",\"created_at\":\"2022-04-05T13:25:20-04:00\",\"updated_at\":\"2022-04-05T13:25:20-04:00\",\"published_at\":null,\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/1025371372\"}}"
          },
          "name": "Create an unpublished page",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"page\":{\"title\":\"Warranty information\",\"body_html\":\"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\",\"published\":false}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-07/pages.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\npage = ShopifyAPI::Page.new(session: test_session)\npage.title = \"Warranty information\"\npage.body_html = \"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\"\npage.published = false\npage.save!"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst page = new Page({session: test_session});\npage.title = \"Warranty information\";\npage.body_html = \"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\";\npage.published = false;\nawait page.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$page = new Page($this->test_session);\n$page->title = \"Warranty information\";\n$page->body_html = \"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\";\n$page->published = false;\n$page->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "422",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-07/pages.json",
            "headers": {},
            "body": "{\"page\":{\"body\":\"foobar\"}}"
          },
          "response": {
            "action": "HTTP/1.1 422 Unprocessable Entity",
            "headers": {},
            "body": "{\"errors\":{\"title\":[\"can't be blank\"]}}"
          },
          "name": "Creating a page without a title fails and returns an error",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"page\":{\"body\":\"foobar\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-07/pages.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\npage = ShopifyAPI::Page.new(session: test_session)\npage.body = \"foobar\"\npage.save!"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst page = new Page({session: test_session});\npage.body = \"foobar\";\nawait page.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$page = new Page($this->test_session);\n$page->body = \"foobar\";\n$page->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "201",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-07/pages.json",
            "headers": {},
            "body": "{\"page\":{\"title\":\"Warranty information\",\"body_html\":\"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\",\"metafields\":[{\"key\":\"new\",\"value\":\"new value\",\"type\":\"single_line_text_field\",\"namespace\":\"global\"}]}}"
          },
          "response": {
            "action": "HTTP/1.1 201 Created",
            "headers": {},
            "body": "{\"page\":{\"id\":1025371373,\"title\":\"Warranty information\",\"shop_id\":548380009,\"handle\":\"warranty-information\",\"body_html\":\"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\",\"author\":\"Shopify API\",\"created_at\":\"2022-04-05T13:25:22-04:00\",\"updated_at\":\"2022-04-05T13:25:22-04:00\",\"published_at\":\"2022-04-05T13:25:22-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/1025371373\"}}"
          },
          "name": "Create a page with a metafield",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"page\":{\"title\":\"Warranty information\",\"body_html\":\"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\",\"metafields\":[{\"key\":\"new\",\"value\":\"new value\",\"type\":\"single_line_text_field\",\"namespace\":\"global\"}]}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-07/pages.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\npage = ShopifyAPI::Page.new(session: test_session)\npage.title = \"Warranty information\"\npage.body_html = \"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\"\npage.metafields = [\n  {\n    \"key\" => \"new\",\n    \"value\" => \"new value\",\n    \"type\" => \"single_line_text_field\",\n    \"namespace\" => \"global\"\n  }\n]\npage.save!"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst page = new Page({session: test_session});\npage.title = \"Warranty information\";\npage.body_html = \"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\";\npage.metafields = [\n  {\n    \"key\": \"new\",\n    \"value\": \"new value\",\n    \"type\": \"single_line_text_field\",\n    \"namespace\": \"global\"\n  }\n];\nawait page.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$page = new Page($this->test_session);\n$page->title = \"Warranty information\";\n$page->body_html = \"<h2>Warranty</h2>\\n<p>Returns accepted if we receive items <strong>30 days after purchase</strong>.</p>\";\n$page->metafields = [\n    [\n        \"key\" => \"new\",\n        \"value\" => \"new value\",\n        \"type\" => \"single_line_text_field\",\n        \"namespace\" => \"global\"\n    ]\n];\n$page->save(\n    true, // Update Object\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/{api_version}/pages.json",
      "action": "post"
    },
    {
      "description": "Retrieves a page count.",
      "summary": "Retrieves a page count",
      "operationId": "Retrievesapagecount",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "created_at_max",
          "description": "Count pages created before date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "created_at_min",
          "description": "Count pages created after date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "published_at_max",
          "description": "Show pages published before date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "published_at_min",
          "description": "Show pages published after date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "published_status",
          "description": "Count pages with a given published status:",
          "in": "query",
          "schema": {
            "type": "string",
            "default": "any"
          },
          "examples": {
            "published": {
              "summary": "Count published pages.",
              "value": "published"
            },
            "unpublished": {
              "summary": "Count unpublished pages.",
              "value": "unpublished"
            },
            "any": {
              "summary": "Count published and unpublished pages.",
              "value": "any"
            }
          }
        },
        {
          "name": "title",
          "description": "Count pages with a given title.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "updated_at_max",
          "description": "Count pages last updated before date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "updated_at_min",
          "description": "Count pages last updated after date (format: 2014-04-25T16:15:47-04:00).",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieves a page count",
          "content": {
            "application/json": {
              "examples": {
                "Retrieve a count of all pages": {
                  "value": {
                    "count": 4
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages/count.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/unstable/pages/count.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"count\":4}"
          },
          "name": "Retrieve a count of all pages",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-07/pages/count.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Page.count(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Page.count({\n  session: test_session,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nPage::count(\n    $this->test_session, // Session\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/{api_version}/pages/count.json",
      "action": "get"
    },
    {
      "description": "Retrieves a single page by its ID.",
      "summary": "Retrieves a single page by its ID",
      "operationId": "RetrievesasinglepagebyitsID",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "page_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fields",
          "description": "Show only certain fields, specified by a comma-separated list of field names.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieves a single page by its ID",
          "content": {
            "application/json": {
              "examples": {
                "Retrieve a single page": {
                  "value": {
                    "page": {
                      "id": 131092082,
                      "title": "Terms of Services",
                      "shop_id": 548380009,
                      "handle": "tos",
                      "body_html": "<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>",
                      "author": "Dennis",
                      "created_at": "2008-07-15T18:00:00-06:00",
                      "updated_at": "2008-07-16T18:00:00-06:00",
                      "published_at": "2008-07-15T18:00:00-06:00",
                      "template_suffix": null,
                      "admin_graphql_api_id": "gid://shopify/OnlineStorePage/131092082"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages/131092082.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/unstable/pages/131092082.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"page\":{\"id\":131092082,\"title\":\"Terms of Services\",\"shop_id\":548380009,\"handle\":\"tos\",\"body_html\":\"<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>\",\"author\":\"Dennis\",\"created_at\":\"2008-07-15T20:00:00-04:00\",\"updated_at\":\"2008-07-16T20:00:00-04:00\",\"published_at\":\"2008-07-15T20:00:00-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/131092082\"}}"
          },
          "name": "Retrieve a single page",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-07/pages/131092082.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Page.find(\n  session: test_session,\n  id: 131092082,\n)"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Page.find({\n  session: test_session,\n  id: 131092082,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nPage::find(\n    $this->test_session, // Session\n    131092082, // Id\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/{api_version}/pages/{page_id}.json",
      "action": "get"
    },
    {
      "description": "Updates a page",
      "summary": "Updates a page",
      "operationId": "Updatesapage",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "page_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Updates a page",
          "content": {
            "application/json": {
              "examples": {
                "Update the body HTML of an existing page": {
                  "value": {
                    "page": {
                      "shop_id": 548380009,
                      "body_html": "<p>Returns accepted if we receive the items 14 days after purchase.</p>",
                      "title": "Terms of Services",
                      "handle": "tos",
                      "id": 131092082,
                      "author": "Dennis",
                      "created_at": "2008-07-15T18:00:00-06:00",
                      "updated_at": "2022-04-05T11:25:29-06:00",
                      "published_at": "2008-07-15T18:00:00-06:00",
                      "template_suffix": null,
                      "admin_graphql_api_id": "gid://shopify/OnlineStorePage/131092082"
                    }
                  }
                },
                "Update an existing page completely": {
                  "value": {
                    "page": {
                      "shop_id": 548380009,
                      "author": "Christopher Gorski",
                      "body_html": "<p>Returns accepted if we receive the items <strong>14 days</strong> after purchase.</p>",
                      "handle": "new-warranty",
                      "title": "New warranty",
                      "id": 131092082,
                      "created_at": "2008-07-15T18:00:00-06:00",
                      "updated_at": "2022-04-05T11:25:30-06:00",
                      "published_at": "2008-07-15T18:00:00-06:00",
                      "template_suffix": null,
                      "admin_graphql_api_id": "gid://shopify/OnlineStorePage/131092082"
                    }
                  }
                },
                "Show a hidden page": {
                  "value": {
                    "page": {
                      "shop_id": 548380009,
                      "published_at": "2022-04-05T11:25:31-06:00",
                      "title": "Terms of Services",
                      "handle": "tos",
                      "body_html": "<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>",
                      "id": 131092082,
                      "author": "Dennis",
                      "created_at": "2008-07-15T18:00:00-06:00",
                      "updated_at": "2022-04-05T11:25:31-06:00",
                      "template_suffix": null,
                      "admin_graphql_api_id": "gid://shopify/OnlineStorePage/131092082"
                    }
                  }
                },
                "Hide a published page": {
                  "value": {
                    "page": {
                      "shop_id": 548380009,
                      "published_at": null,
                      "title": "Terms of Services",
                      "handle": "tos",
                      "body_html": "<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>",
                      "id": 131092082,
                      "author": "Dennis",
                      "created_at": "2008-07-15T18:00:00-06:00",
                      "updated_at": "2022-04-05T11:25:32-06:00",
                      "template_suffix": null,
                      "admin_graphql_api_id": "gid://shopify/OnlineStorePage/131092082"
                    }
                  }
                },
                "Add a metafield to a page": {
                  "value": {
                    "page": {
                      "shop_id": 548380009,
                      "title": "Terms of Services",
                      "handle": "tos",
                      "body_html": "<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>",
                      "id": 131092082,
                      "author": "Dennis",
                      "created_at": "2008-07-15T18:00:00-06:00",
                      "updated_at": "2022-04-05T11:25:34-06:00",
                      "published_at": "2008-07-15T18:00:00-06:00",
                      "template_suffix": null,
                      "admin_graphql_api_id": "gid://shopify/OnlineStorePage/131092082"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages/131092082.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/2021-07/pages/131092082.json",
            "headers": {},
            "body": "{\"page\":{\"id\":131092082,\"body_html\":\"<p>Returns accepted if we receive the items 14 days after purchase.</p>\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"page\":{\"shop_id\":548380009,\"body_html\":\"<p>Returns accepted if we receive the items 14 days after purchase.</p>\",\"title\":\"Terms of Services\",\"handle\":\"tos\",\"id\":131092082,\"author\":\"Dennis\",\"created_at\":\"2008-07-15T20:00:00-04:00\",\"updated_at\":\"2022-04-05T13:25:29-04:00\",\"published_at\":\"2008-07-15T20:00:00-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/131092082\"}}"
          },
          "name": "Update the body HTML of an existing page",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"page\":{\"id\":131092082,\"body_html\":\"<p>Returns accepted if we receive the items 14 days after purchase.</p>\"}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2022-07/pages/131092082.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\npage = ShopifyAPI::Page.new(session: test_session)\npage.id = 131092082\npage.body_html = \"<p>Returns accepted if we receive the items 14 days after purchase.</p>\"\npage.save!"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst page = new Page({session: test_session});\npage.id = 131092082;\npage.body_html = \"<p>Returns accepted if we receive the items 14 days after purchase.</p>\";\nawait page.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$page = new Page($this->test_session);\n$page->id = 131092082;\n$page->body_html = \"<p>Returns accepted if we receive the items 14 days after purchase.</p>\";\n$page->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages/131092082.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/2021-07/pages/131092082.json",
            "headers": {},
            "body": "{\"page\":{\"id\":131092082,\"body_html\":\"<p>Returns accepted if we receive the items <strong>14 days</strong> after purchase.</p>\",\"author\":\"Christopher Gorski\",\"title\":\"New warranty\",\"handle\":\"new-warranty\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"page\":{\"shop_id\":548380009,\"author\":\"Christopher Gorski\",\"body_html\":\"<p>Returns accepted if we receive the items <strong>14 days</strong> after purchase.</p>\",\"handle\":\"new-warranty\",\"title\":\"New warranty\",\"id\":131092082,\"created_at\":\"2008-07-15T20:00:00-04:00\",\"updated_at\":\"2022-04-05T13:25:30-04:00\",\"published_at\":\"2008-07-15T20:00:00-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/131092082\"}}"
          },
          "name": "Update an existing page completely",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"page\":{\"id\":131092082,\"body_html\":\"<p>Returns accepted if we receive the items <strong>14 days</strong> after purchase.</p>\",\"author\":\"Christopher Gorski\",\"title\":\"New warranty\",\"handle\":\"new-warranty\"}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2022-07/pages/131092082.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\npage = ShopifyAPI::Page.new(session: test_session)\npage.id = 131092082\npage.body_html = \"<p>Returns accepted if we receive the items <strong>14 days</strong> after purchase.</p>\"\npage.author = \"Christopher Gorski\"\npage.title = \"New warranty\"\npage.handle = \"new-warranty\"\npage.save!"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst page = new Page({session: test_session});\npage.id = 131092082;\npage.body_html = \"<p>Returns accepted if we receive the items <strong>14 days</strong> after purchase.</p>\";\npage.author = \"Christopher Gorski\";\npage.title = \"New warranty\";\npage.handle = \"new-warranty\";\nawait page.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$page = new Page($this->test_session);\n$page->id = 131092082;\n$page->body_html = \"<p>Returns accepted if we receive the items <strong>14 days</strong> after purchase.</p>\";\n$page->author = \"Christopher Gorski\";\n$page->title = \"New warranty\";\n$page->handle = \"new-warranty\";\n$page->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages/131092082.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/2021-07/pages/131092082.json",
            "headers": {},
            "body": "{\"page\":{\"id\":131092082,\"published\":true}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"page\":{\"shop_id\":548380009,\"published_at\":\"2022-04-05T13:25:31-04:00\",\"title\":\"Terms of Services\",\"handle\":\"tos\",\"body_html\":\"<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>\",\"id\":131092082,\"author\":\"Dennis\",\"created_at\":\"2008-07-15T20:00:00-04:00\",\"updated_at\":\"2022-04-05T13:25:31-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/131092082\"}}"
          },
          "name": "Show a hidden page",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"page\":{\"id\":131092082,\"published\":true}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2022-07/pages/131092082.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\npage = ShopifyAPI::Page.new(session: test_session)\npage.id = 131092082\npage.published = true\npage.save!"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst page = new Page({session: test_session});\npage.id = 131092082;\npage.published = true;\nawait page.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$page = new Page($this->test_session);\n$page->id = 131092082;\n$page->published = true;\n$page->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages/131092082.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/2021-07/pages/131092082.json",
            "headers": {},
            "body": "{\"page\":{\"id\":131092082,\"published\":false}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"page\":{\"shop_id\":548380009,\"published_at\":null,\"title\":\"Terms of Services\",\"handle\":\"tos\",\"body_html\":\"<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>\",\"id\":131092082,\"author\":\"Dennis\",\"created_at\":\"2008-07-15T20:00:00-04:00\",\"updated_at\":\"2022-04-05T13:25:32-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/131092082\"}}"
          },
          "name": "Hide a published page",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"page\":{\"id\":131092082,\"published\":false}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2022-07/pages/131092082.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\npage = ShopifyAPI::Page.new(session: test_session)\npage.id = 131092082\npage.published = false\npage.save!"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst page = new Page({session: test_session});\npage.id = 131092082;\npage.published = false;\nawait page.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$page = new Page($this->test_session);\n$page->id = 131092082;\n$page->published = false;\n$page->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages/131092082.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/2021-07/pages/131092082.json",
            "headers": {},
            "body": "{\"page\":{\"id\":131092082,\"metafields\":[{\"key\":\"new\",\"value\":\"new value\",\"type\":\"single_line_text_field\",\"namespace\":\"global\"}]}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"page\":{\"shop_id\":548380009,\"title\":\"Terms of Services\",\"handle\":\"tos\",\"body_html\":\"<p>We make <strong>perfect</strong> stuff, we don't need a warranty.</p>\",\"id\":131092082,\"author\":\"Dennis\",\"created_at\":\"2008-07-15T20:00:00-04:00\",\"updated_at\":\"2022-04-05T13:25:34-04:00\",\"published_at\":\"2008-07-15T20:00:00-04:00\",\"template_suffix\":null,\"admin_graphql_api_id\":\"gid://shopify/OnlineStorePage/131092082\"}}"
          },
          "name": "Add a metafield to a page",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"page\":{\"id\":131092082,\"metafields\":[{\"key\":\"new\",\"value\":\"new value\",\"type\":\"single_line_text_field\",\"namespace\":\"global\"}]}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2022-07/pages/131092082.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\npage = ShopifyAPI::Page.new(session: test_session)\npage.id = 131092082\npage.metafields = [\n  {\n    \"key\" => \"new\",\n    \"value\" => \"new value\",\n    \"type\" => \"single_line_text_field\",\n    \"namespace\" => \"global\"\n  }\n]\npage.save!"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst page = new Page({session: test_session});\npage.id = 131092082;\npage.metafields = [\n  {\n    \"key\": \"new\",\n    \"value\": \"new value\",\n    \"type\": \"single_line_text_field\",\n    \"namespace\": \"global\"\n  }\n];\nawait page.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$page = new Page($this->test_session);\n$page->id = 131092082;\n$page->metafields = [\n    [\n        \"key\" => \"new\",\n        \"value\" => \"new value\",\n        \"type\" => \"single_line_text_field\",\n        \"namespace\" => \"global\"\n    ]\n];\n$page->save(\n    true, // Update Object\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/{api_version}/pages/{page_id}.json",
      "action": "put"
    },
    {
      "description": "Deletes a page.",
      "summary": "Deletes a page",
      "operationId": "Deletesapage",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "page_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Deletes a page",
          "content": {
            "application/json": {
              "examples": {
                "Delete a page": {
                  "value": {}
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/pages/131092082.json",
          "request_method": "DELETE",
          "request": {
            "action": "DELETE /admin/api/unstable/pages/131092082.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{}"
          },
          "name": "Delete a page",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X DELETE \"https://your-development-store.myshopify.com/admin/api/2022-07/pages/131092082.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Page.delete(\n  session: test_session,\n  id: 131092082,\n)"
            },
            {
              "language": "node",
              "example_code": "import {Page} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Page.delete({\n  session: test_session,\n  id: 131092082,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\Page;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nPage::delete(\n    $this->test_session, // Session\n    131092082, // Id\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/{api_version}/pages/{page_id}.json",
      "action": "delete"
    }
  ],
  "components": [
    {
      "name": "Page",
      "title": "Page",
      "type": "object",
      "properties": [
        {
          "description": "The name of the person who created the page.",
          "type": "string",
          "example": "Lydia",
          "name": "author"
        },
        {
          "description": "The text content of the page, complete with HTML markup.",
          "type": "string",
          "example": "Contact us at <a href='mailto:contact@johns-apparel.com'>contact@johns-apparel.com</a>.",
          "name": "body_html"
        },
        {
          "description": "The date and time (<a href='https://en.wikipedia.org/wiki/ISO_8601' target=\"_blank\">ISO 8601</a> format) when the page was created.",
          "type": "string",
          "readOnly": true,
          "example": "2008-07-15T18:00:00-06:00",
          "name": "created_at"
        },
        {
          "description": "A unique, human-friendly string for the page, generated automatically from its title. In themes, the Liquid templating language refers to a page by its handle.",
          "type": "string",
          "example": "contact-us",
          "name": "handle"
        },
        {
          "description": "The unique numeric identifier for the page.",
          "type": "string",
          "readOnly": true,
          "example": 131092082,
          "name": "id"
        },
        {
          "description": "          Additional information attached to the Page object. It has the following properties:\n          <ul>\n            <li><strong>key</strong>: An identifier for the metafield. (maximum: 30 characters)</li>\n            <li><strong>namespace</strong>: A container for a set of metadata. Namespaces help distinguish between metadata created by different apps. (maximum: 20 characters)</li>\n            <li><strong>value</strong>: The information to be stored as metadata.</li>\n            <li><strong>type</strong>: The metafield's information type. Refer to the <a href=\"/apps/metafields/types\">full list of types</a>.</li>\n            <li><strong>description (optional)</strong>: Additional information about the metafield.</li>\n          </ul>\n          <p>For more information on attaching metadata to Shopify resources, see the <a href=\"/docs/admin-api/rest/reference/metafield\">Metafield</a> resource.</p>\n",
          "type": "string",
          "example": {
            "key": "new",
            "value": "new value",
            "type": "single_line_text_field",
            "namespace": "global"
          },
          "name": "metafield"
        },
        {
          "description": "The date and time (<a href='https://en.wikipedia.org/wiki/ISO_8601' target='_blank'>ISO 8601</a> format) when the page was published. Returns <code>null</code> when the page is hidden.",
          "type": "string",
          "example": "2014-07-16T18:00:00-06:00",
          "name": "published_at"
        },
        {
          "description": "The ID of the shop to which the page belongs.",
          "type": "string",
          "readOnly": true,
          "example": 548380009,
          "name": "shop_id"
        },
        {
          "description": "The suffix of the <a href='/api/liquid/objects/template'>template</a> that is used to render the page. If the value is an empty string or <code>null</code>, then the default page template is used.",
          "type": "string",
          "example": "contact",
          "name": "template_suffix"
        },
        {
          "description": "The title of the page.",
          "type": "string",
          "example": "Contact us",
          "name": "title"
        },
        {
          "description": "The date and time (<a href='https://en.wikipedia.org/wiki/ISO_8601' target=\"_blank\">ISO 8601</a> format) when the page was last updated.",
          "type": "string",
          "readOnly": true,
          "example": "2008-07-16T18:00:00-06:00",
          "name": "updated_at"
        },
        {
          "description": "The GraphQL GID of the page.",
          "type": "string",
          "readOnly": true,
          "example": "gid://shopify/OnlineStorePage/131092082",
          "name": "admin_graphql_api_id"
        }
      ],
      "required": null
    }
  ],
  "x-shopify-meta": {
    "channels": false,
    "file_name": "online-store/page",
    "gid": "892e67cf-fc80-4566-9cd0-7e95ae49bc76",
    "glossary": false,
    "hidden": false,
    "legacy-urls": [
      "/api/reference/page",
      "/api/reference/online_store/page"
    ],
    "meta_description": "Create and update static pages for an online store.",
    "postman_group": "Online store",
    "keywords": [
      "api"
    ],
    "api_versioning": true,
    "shopify_plus": false,
    "weight": null,
    "usage-notes": null
  },
  "personal_data_fields": []
}
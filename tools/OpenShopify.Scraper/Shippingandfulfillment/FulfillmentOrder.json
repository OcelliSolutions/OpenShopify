{
  "openapi": "3.0.0",
  "info": {
    "title": "FulfillmentOrder",
    "description": "        <p>\n          The FulfillmentOrder resource represents either an item or a group of items in an\n          <a href=\"/docs/admin-api/rest/reference/orders/order\">order</a> that are to be fulfilled from the same location.\n          There can be more than one fulfillment order for an <a href=\"/docs/admin-api/rest/reference/orders/order\">order</a> at a given location.\n        </p>\n        {{ '/api/reference/fulfillment_order_relationships.png' | image }}\n        <p>\n          Fulfillment orders represent the work which is intended to be done in relation to an order.\n          When the fulfillment of some or all line items has started, a\n          <a href=\"https://shopify.dev/api/admin-rest/latest/resources/fulfillment\">Fulfillment</a>\n          is created by a merchant or third party to represent the ongoing or completed work of fulfillment.\n          <a href=\"#fulfillment-order-creation\">See below for more details on creating fulfillments</a>.\n        </p>\n\n        <div class=\"note\">\n          <h4>Note</h4>\n          <p>\n            Shopify creates fulfillment orders automatically when an order is created.\n            It is not possible to manually create fulfillment orders.\n          </p>\n          <p>\n            <a href=\"#fulfillment-order-lifecycle\">See below for more details on the lifecycle of a fulfillment order</a>.\n          </p>\n        </div>\n\n        <h2>Retrieving fulfillment orders<h2>\n        <p>\n          All fulfillment orders related to a given order can be retrieved with the\n          <a href=\"https://shopify.dev/api/admin-rest/latest/resources/fulfillmentorder#get-orders-order-id-fulfillment-orders\">Get fulfillment orders by order ID</a>\n          endpoint.\n          <a href=\"#api-access-scopes\">API access scopes</a> govern which fulfillments orders are returned to clients.\n          An API client will only receive a subset of the fulfillment orders which belong to an order\n          if they don't have the necessary access scopes to view all of the fulfillment orders.\n        </p>\n        <p>\n          Fulfillment service apps can retrieve the fulfillment orders which have been assigned to their locations with the\n          <a href=\"/docs/api/admin-rest/latest/resources/assignedfulfillmentorder\">AssignedFulfillmentOrder</a> resource.\n          The <code>assignment_status</code> parameter in the\n          <a href=\"https://shopify.dev/api/admin-rest/2023-01/resources/assignedfulfillmentorder#get-assigned-fulfillment-orders?assignment-status=cancellation-requested&location-ids[]=24826418\">Retrieve a list of assigned fulfillment orders</a>\n          query controls whether all assigned fulfillment orders\n          should be returned or only those where a merchant has sent a <a href=\"/docs/api/admin-rest/latest/resources/fulfillmentrequest\">fulfilment request</a>\n          and it has yet to be responded to.\n          The API client must be granted the <code>read_assigned_fulfillment_orders</code> access scope to access\n          the assigned fulfillment orders.\n        </p>\n        <p>\n          A specific fulfillment order can be retrieved with the\n          <a href=\"https://shopify.dev/api/admin-rest/latest/resources/fulfillmentorder#get-orders-order-id-fulfillment-orders\">Get fulfillment order</a>\n          endpoint.\n        </p>\n\n        <h2 id=\"fulfillment-order-lifecycle\">The lifecycle of a fulfillment order</h2>\n\n        <h3 id=\"fulfillment-order-creation\">Fulfillment Order Creation</h2>\n        <p>\n          After an order is created, a background worker performs the order routing process which determines\n          which locations will be responsible for fulfilling the purchased items.\n          Once the order routing process is complete, one or more fulfillment orders will be created\n          and assigned to these locations. It is not possible to manually create fulfillment orders.\n        </p>\n\n        <p>\n          Once a fulfillment order has been created, it will have one of two different lifecycles depending on\n          the type of location which the fulfillment order is assigned to.\n        </p>\n\n        <h3 id=\"fulfillment-order-lifecycle-at-merchant-location\">The lifecycle of a fulfillment order at a merchant managed location</h3>\n        <p>\n          Fulfillment orders are completed by creating\n          <a href=\"https://shopify.dev/api/admin-rest/latest/resources/fulfillment\">fulfillments</a>.\n          Fulfillments represents the work done.\n        </p>\n        <p>\n          For digital products a merchant or an order management app would create a fulfilment once the digital asset\n          has been provisioned.\n          For example, in the case of a digital gift card, a merchant would to do this once\n          the gift card has been activated - before the email being shipped.\n        </p>\n        <p>\n          On the other hand, for a traditional shipped order,\n          a merchant or an order management app would create a fulfillment after picking and packing the items relating\n          to a fulfillment order, but before the courier has collected the goods.\n        </p>\n        <p>\n          <a href=\"https://shopify.dev/apps/fulfillment/order-management-apps/manage-fulfillments\">Learn about managing fulfillment orders as an order management app</a>.\n        </p>\n\n        <h3 id=\"fulfillment-order-lifecycle-at-merchant-location\">The lifecycle of a fulfillment order at a location which is managed by a fulfillment service</h3>\n\n        <p>\n          For fulfillment orders which are assigned to a location that is managed by a fulfillment service,\n          a merchant or an Order Management App can\n          <a href=\"https://shopify.dev/api/admin-rest/latest/resources/fulfillmentrequest#post-fulfillment-orders-fulfillment-order-id-fulfillment-request\">send a fulfillment request</a>\n          to the fulfillment service which operates the location to request that they fulfill the associated items.\n          A fulfillment service has the option to\n          <a href=\"https://shopify.dev/api/admin-rest/latest/resources/fulfillmentrequest#post-fulfillment-orders-fulfillment-order-id-fulfillment-request-accept\">accept</a>\n          or <a href=\"https://shopify.dev/api/admin-rest/latest/resources/fulfillmentrequest#post-fulfillment-orders-fulfillment-order-id-fulfillment-request-accept\">reject</a>\n          this fulfillment request.\n        </p>\n        <p>\n          Once the fulfillment service has accepted the request, the request can no longer be cancelled by the merchant\n          or order management app and instead a\n          <a href=\"https://shopify.dev/api/admin-rest/latest/resources/cancellationrequest\">cancellation request</a>\n          must be submitted to the fulfillment service.\n        </p>\n        <p>\n          Once a fulfillment service accepts a fulfillment request,\n          then after they are ready to pack items and send them for delivery, they create fulfillments with the\n          <a href=\"https://shopify.dev/api/admin-rest/latest/resources/fulfillment#post-fulfillments\">Create a fulfillment for one or many fulfillment orders</a>\n          endpoint.\n          They can provide tracking information right away or create fulfillments without it and then\n          <a href=\"https://shopify.dev/api/admin-rest/latest/resources/fulfillment#post-fulfillments-fulfillment-id-update-tracking\">update tracking information for fulfillments</a>.\n        </p>\n        <p>\n          <a href=\"https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments\">Learn about managing fulfillment orders as a fulfillment service</a>.\n        </p>\n\n        <h2 id=\"api-access-scopes\">API access scopes</h2>\n        <p>\n          Fulfillment orders are governed by the following API access scopes:\n          <ul>\n            <li>\n              The <code>read_merchant_managed_fulfillment_orders</code> and\n              <code>write_merchant_managed_fulfillment_orders</code> access scopes\n              grant access to fulfillment orders assigned to merchant-managed locations.\n            </li>\n            <li>\n              The <code>read_assigned_fulfillment_orders</code> and <code>write_assigned_fulfillment_orders</code>\n              access scopes are intended for fulfillment services.\n              These scopes grant access to fulfillment orders assigned to locations that are being managed\n              by fulfillment services.\n            </li>\n            <li>\n              The <code>read_third_party_fulfillment_orders</code> and <code>write_third_party_fulfillment_orders</code>\n              access scopes grant access to fulfillment orders\n              assigned to locations managed by other fulfillment services.\n            </li>\n          </ul>\n        </p>\n        <h3>Fulfillment service app access scopes</h3>\n        <p>\n          Usually, <b>fulfillment services</b> have the <code>write_assigned_fulfillment_orders</code> access scope\n          and don't have the <code>*_third_party_fulfillment_orders</code>\n          or <code>*_merchant_managed_fulfillment_orders</code> access scopes.\n          The app will only have access to the fulfillment orders assigned to their location\n          (or multiple locations if the app registers multiple fulfillment services on the shop).\n          The app will not have access to fulfillment orders assigned to merchant-managed locations\n          or locations owned by other fulfillment service apps.\n        </p>\n        <h3>Order management app access scopes</h3>\n        <p>\n          <b>Order management apps</b> will usually request <code>write_merchant_managed_fulfillment_orders</code> and\n          <code>write_third_party_fulfillment_orders</code> access scopes. This will allow them to manage all fulfillment orders\n          on behalf of a merchant.\n        </p>\n        <p>\n          If an app combines the functions of an order management app and a fulfillment service,\n          then the app should request all\n          access scopes to manage all assigned and all unassigned fulfillment orders.\n        </p>\n\n        <h2>Notifications about fulfillment orders</h2>\n        <p>\n          Fulfillment services are required to\n          <a href=\"/docs/api/admin-rest/latest/resources/fulfillmentservice\">register</a>\n          a self-hosted callback URL which has a number of uses. One of these uses is that this callback URL will be notified\n          whenever a merchant submits a fulfillment or cancellation request.\n        </p>\n        <p>\n          Both merchants and apps can\n          <a href=\"/docs/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#webhooks\">subscribe</a>\n          to\n          <a href=\"/docs/api/admin-rest/latest/resources/webhook#event-topics-fulfillment-orders-cancellation-request-accepted\">fulfillment order webhooks</a>\n          to\n          be notified whenever fulfillment order related domain events occur.\n        </p>\n\n        <p>\n          <a href=\"https://shopify.dev/apps/fulfillment\">Learn about fulfillment workflows</a>.\n        </p>\n",
    "x-owner": "https://vault.shopify.io/teams/2678",
    "x-description-list": null,
    "version": "2023-04",
    "show-privacy-legend": true
  },
  "paths": [
    {
      "description": "<p>\n            Retrieves a list of fulfillment orders for a specific order.\n          </p>\n          <p>\n            <a href=\"#api-access-scopes\">API access scopes</a> govern which fulfillments orders are returned.\n            An API client will only receive a subset of the fulfillment orders which belong to an order\n            if they don't have the necessary access scopes to view all of the fulfillment orders.\n            In the case that an API client does not have the access scopes necessary to view\n            any of the fulfillment orders belongs to an order, an empty array will be returned.\n          </p>",
      "summary": "Retrieves a list of fulfillment orders for a specific order",
      "operationId": "Retrievesalistoffulfillmentordersforaspecificorder",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "order_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "order_id",
          "description": "The ID of the order that is associated with the fulfillment orders.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieves a list of fulfillment orders for a specific order",
          "content": {
            "application/json": {
              "examples": {
                "Retrieve a list of all fulfillment orders for an order": {
                  "value": {
                    "fulfillment_orders": [
                      {
                        "id": 1046000813,
                        "shop_id": 548380009,
                        "order_id": 450789469,
                        "assigned_location_id": 24826418,
                        "request_status": "submitted",
                        "status": "open",
                        "supported_actions": [
                          "cancel_fulfillment_order"
                        ],
                        "destination": {
                          "id": 1046000808,
                          "address1": "Chestnut Street 92",
                          "address2": "",
                          "city": "Louisville",
                          "company": null,
                          "country": "United States",
                          "email": "bob.norman@mail.example.com",
                          "first_name": "Bob",
                          "last_name": "Norman",
                          "phone": "+1(502)-459-2181",
                          "province": "Kentucky",
                          "zip": "40202"
                        },
                        "line_items": [
                          {
                            "id": 1058737553,
                            "shop_id": 548380009,
                            "fulfillment_order_id": 1046000813,
                            "quantity": 1,
                            "line_item_id": 518995019,
                            "inventory_item_id": 49148385,
                            "fulfillable_quantity": 1,
                            "variant_id": 49148385
                          }
                        ],
                        "fulfillment_service_handle": "mars-fulfillment",
                        "assigned_location": {
                          "address1": null,
                          "address2": null,
                          "city": null,
                          "country_code": "DE",
                          "location_id": 24826418,
                          "name": "Apple Api Shipwire",
                          "phone": null,
                          "province": null,
                          "zip": null
                        },
                        "merchant_requests": []
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/orders/450789469/fulfillment_orders.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2020-01/orders/450789469/fulfillment_orders.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_orders\":[{\"id\":1046000813,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":24826418,\"request_status\":\"submitted\",\"status\":\"open\",\"supported_actions\":[\"cancel_fulfillment_order\"],\"destination\":{\"id\":1046000808,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737553,\"shop_id\":548380009,\"fulfillment_order_id\":1046000813,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfillment_service_handle\":\"mars-fulfillment\",\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]}]}"
          },
          "name": "Retrieve a list of all fulfillment orders for an order",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/orders/450789469/fulfillment_orders.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::FulfillmentOrder.all(\n  session: test_session,\n  order_id: 450789469,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.FulfillmentOrder.all({\n  session: session,\n  order_id: 450789469,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nFulfillmentOrder::all(\n    $this->test_session, // Session\n    [\"order_id\" => \"450789469\"], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": null
          }
        ]
      },
      "x-privacy": {
        "annotations": [
          "assigned_location",
          "destination"
        ],
        "annotations_nested": {
          "fulfillment_orders": {
            "assigned_location": {},
            "destination": {
              "address1": "address",
              "address2": "address",
              "city": "address",
              "email": "email",
              "phone": "phone",
              "zip": "address"
            }
          }
        }
      },
      "url": "/admin/api/{api_version}/orders/{order_id}/fulfillment_orders.json",
      "action": "get"
    },
    {
      "description": "Retrieves a specific fulfillment order.",
      "summary": "Retrieves a specific fulfillment order",
      "operationId": "Retrievesaspecificfulfillmentorder",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_order_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieves a specific fulfillment order",
          "content": {
            "application/json": {
              "examples": {
                "Get a single fulfillment order by its ID": {
                  "value": {
                    "fulfillment_order": {
                      "id": 1046000820,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 24826418,
                      "request_status": "submitted",
                      "status": "open",
                      "supported_actions": [
                        "cancel_fulfillment_order"
                      ],
                      "destination": {
                        "id": 1046000815,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [
                        {
                          "id": 1058737559,
                          "shop_id": 548380009,
                          "fulfillment_order_id": 1046000820,
                          "quantity": 1,
                          "line_item_id": 518995019,
                          "inventory_item_id": 49148385,
                          "fulfillable_quantity": 1,
                          "variant_id": 49148385
                        }
                      ],
                      "fulfillment_service_handle": "mars-fulfillment",
                      "assigned_location": {
                        "address1": null,
                        "address2": null,
                        "city": null,
                        "country_code": "DE",
                        "location_id": 24826418,
                        "name": "Apple Api Shipwire",
                        "phone": null,
                        "province": null,
                        "zip": null
                      },
                      "merchant_requests": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_orders/1046000820.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2020-01/fulfillment_orders/1046000820.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"id\":1046000820,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":24826418,\"request_status\":\"submitted\",\"status\":\"open\",\"supported_actions\":[\"cancel_fulfillment_order\"],\"destination\":{\"id\":1046000815,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737559,\"shop_id\":548380009,\"fulfillment_order_id\":1046000820,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfillment_service_handle\":\"mars-fulfillment\",\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]}}"
          },
          "name": "Get a single fulfillment order by its ID",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_orders/1046000820.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::FulfillmentOrder.find(\n  session: test_session,\n  id: 1046000820,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.FulfillmentOrder.find({\n  session: session,\n  id: 1046000820,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nFulfillmentOrder::find(\n    $this->test_session, // Session\n    1046000820, // Id\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": null
          }
        ]
      },
      "x-privacy": {
        "annotations": [
          "assigned_location",
          "destination"
        ],
        "annotations_nested": {
          "fulfillment_order": {
            "assigned_location": {},
            "destination": {
              "address1": "address",
              "address2": "address",
              "city": "address",
              "email": "email",
              "phone": "phone",
              "zip": "address"
            }
          }
        }
      },
      "url": "/admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}.json",
      "action": "get"
    },
    {
      "description": "Marks a fulfillment order as cancelled.",
      "summary": "Cancel a fulfillment order",
      "operationId": "Cancelafulfillmentorder",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_order_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Cancel a fulfillment order",
          "content": {
            "application/json": {
              "examples": {
                "Cancel a fulfillment order": {
                  "value": {
                    "fulfillment_order": {
                      "id": 1046000814,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 24826418,
                      "request_status": "submitted",
                      "status": "closed",
                      "supported_actions": [],
                      "destination": {
                        "id": 1046000809,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [],
                      "fulfillment_service_handle": "mars-fulfillment",
                      "assigned_location": {
                        "address1": null,
                        "address2": null,
                        "city": null,
                        "country_code": "DE",
                        "location_id": 24826418,
                        "name": "Apple Api Shipwire",
                        "phone": null,
                        "province": null,
                        "zip": null
                      },
                      "merchant_requests": []
                    },
                    "replacement_fulfillment_order": {
                      "id": 1046000815,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 24826418,
                      "request_status": "unsubmitted",
                      "status": "open",
                      "supported_actions": [
                        "request_fulfillment",
                        "create_fulfillment"
                      ],
                      "destination": {
                        "id": 1046000810,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [
                        {
                          "id": 1058737554,
                          "shop_id": 548380009,
                          "fulfillment_order_id": 1046000815,
                          "quantity": 1,
                          "line_item_id": 518995019,
                          "inventory_item_id": 49148385,
                          "fulfillable_quantity": 1,
                          "variant_id": 49148385
                        }
                      ],
                      "fulfillment_service_handle": "mars-fulfillment",
                      "assigned_location": {
                        "address1": null,
                        "address2": null,
                        "city": null,
                        "country_code": "DE",
                        "location_id": 24826418,
                        "name": "Apple Api Shipwire",
                        "phone": null,
                        "province": null,
                        "zip": null
                      },
                      "merchant_requests": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_orders/1046000814/cancel.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2020-01/fulfillment_orders/1046000814/cancel.json",
            "headers": {},
            "body": "{}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"id\":1046000814,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":24826418,\"request_status\":\"submitted\",\"status\":\"closed\",\"supported_actions\":[],\"destination\":{\"id\":1046000809,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[],\"fulfillment_service_handle\":\"mars-fulfillment\",\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]},\"replacement_fulfillment_order\":{\"id\":1046000815,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":24826418,\"request_status\":\"unsubmitted\",\"status\":\"open\",\"supported_actions\":[\"request_fulfillment\",\"create_fulfillment\"],\"destination\":{\"id\":1046000810,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737554,\"shop_id\":548380009,\"fulfillment_order_id\":1046000815,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfillment_service_handle\":\"mars-fulfillment\",\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]}}"
          },
          "name": "Cancel a fulfillment order",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_orders/1046000814/cancel.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_order = ShopifyAPI::FulfillmentOrder.new(session: test_session)\nfulfillment_order.id = 1046000814\nfulfillment_order.cancel(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_order = new shopify.rest.FulfillmentOrder({session: session});\nfulfillment_order.id = 1046000814;\nawait fulfillment_order.cancel({});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_order = new FulfillmentOrder($this->test_session);\n$fulfillment_order->id = 1046000814;\n$fulfillment_order->cancel(\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": null
          }
        ]
      },
      "x-privacy": {
        "annotations": [
          "assigned_location",
          "destination"
        ],
        "annotations_nested": {
          "fulfillment_order": {
            "assigned_location": {},
            "destination": {
              "address1": "address",
              "address2": "address",
              "city": "address",
              "email": "email",
              "phone": "phone",
              "zip": "address"
            }
          }
        }
      },
      "url": "/admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/cancel.json",
      "action": "post"
    },
    {
      "description": "Marks an in progress fulfillment order as incomplete, indicating the fulfillment service\n        is unable to ship any remaining items and intends to close the fulfillment order.",
      "summary": "Marks a fulfillment order as incomplete",
      "operationId": "Marksafulfillmentorderasincomplete",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_order_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "message",
          "description": "An optional reason for marking the fulfillment order as incomplete.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Marks a fulfillment order as incomplete",
          "content": {
            "application/json": {
              "examples": {
                "Transition a fulfillment order from in progress to incomplete": {
                  "value": {
                    "fulfillment_order": {
                      "id": 1046000810,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 24826418,
                      "request_status": "closed",
                      "status": "incomplete",
                      "supported_actions": [
                        "request_fulfillment",
                        "create_fulfillment"
                      ],
                      "destination": {
                        "id": 1046000805,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [
                        {
                          "id": 1058737550,
                          "shop_id": 548380009,
                          "fulfillment_order_id": 1046000810,
                          "quantity": 1,
                          "line_item_id": 518995019,
                          "inventory_item_id": 49148385,
                          "fulfillable_quantity": 1,
                          "variant_id": 49148385
                        }
                      ],
                      "fulfillment_service_handle": "mars-fulfillment",
                      "assigned_location": {
                        "address1": null,
                        "address2": null,
                        "city": null,
                        "country_code": "DE",
                        "location_id": 24826418,
                        "name": "Apple Api Shipwire",
                        "phone": null,
                        "province": null,
                        "zip": null
                      },
                      "merchant_requests": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_orders/1046000810/close.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2020-01/fulfillment_orders/1046000810/close.json",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"message\":\"Not enough inventory to complete this work.\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"id\":1046000810,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":24826418,\"request_status\":\"closed\",\"status\":\"incomplete\",\"supported_actions\":[\"request_fulfillment\",\"create_fulfillment\"],\"destination\":{\"id\":1046000805,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737550,\"shop_id\":548380009,\"fulfillment_order_id\":1046000810,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfillment_service_handle\":\"mars-fulfillment\",\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]}}"
          },
          "name": "Transition a fulfillment order from in progress to incomplete",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"fulfillment_order\":{\"message\":\"Not enough inventory to complete this work.\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_orders/1046000810/close.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_order = ShopifyAPI::FulfillmentOrder.new(session: test_session)\nfulfillment_order.id = 1046000810\nfulfillment_order.close(\n  session: test_session,\n  body: {\"fulfillment_order\" => {\"message\" => \"Not enough inventory to complete this work.\"}},\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_order = new shopify.rest.FulfillmentOrder({session: session});\nfulfillment_order.id = 1046000810;\nawait fulfillment_order.close({\n  body: {\"fulfillment_order\": {\"message\": \"Not enough inventory to complete this work.\"}},\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_order = new FulfillmentOrder($this->test_session);\n$fulfillment_order->id = 1046000810;\n$fulfillment_order->close(\n    [], // Params\n    [\"fulfillment_order\" => [\"message\" => \"Not enough inventory to complete this work.\"]], // Body\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "assigned_fulfillment_orders"
          }
        ]
      },
      "x-privacy": {
        "annotations": [
          "assigned_location",
          "destination"
        ],
        "annotations_nested": {
          "fulfillment_order": {
            "assigned_location": {},
            "destination": {
              "address1": "address",
              "address2": "address",
              "city": "address",
              "email": "email",
              "phone": "phone",
              "zip": "address"
            }
          }
        }
      },
      "url": "/admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/close.json",
      "action": "post"
    },
    {
      "description": "Changes the location which is assigned to fulfill a number of unfulfilled fulfillment order line items.\n<br>\nMoving a fulfillment order will fail in the following events:\n<ul>\n  <li>The fulfillment order is closed.</li>\n  <li>The new location doesn't have the necessary inventory available.</li>\n  <li>The API client doesn't have the correct permissions.</li>\n</ul>\n<p>\n  Line items which have already been fulfilled can't be re-assigned\n  and will always remain assigned to the original location.\n</p>\n<p>\n  You can't change the assigned location while a fulfillment order has a\n  <code>request_status</code> of <code>submitted</code>, <code>accepted</code>,\n  <code>cancellation_requested</code>, or <code>cancellation_rejected</code>.\n  These request statuses mean that a fulfillment order is awaiting action by a fulfillment service\n  and can't be re-assigned without first having the fulfillment service accept a cancellation request.\n  This behavior is intended to prevent items from being fulfilled by multiple locations or fulfillment services.\n</p>\n\n<h4>How re-assigning line items affects fulfillment orders</h4>\n<p>\n  <b>First scenario:</b> Re-assign all line items belonging to a fulfillment order to a new location.\n</p>\n<p>\n  In this case, the <code>assigned_location_id</code>\n  of the original fulfillment order will be updated to the new location.\n</p>\n<p>\n  <b>Second scenario:</b> Re-assign a subset of the line items belonging to a fulfillment order\n  to a new location.\n  You can specify a subset of line items using the<code>fulfillment_order_line_items</code> field under\n  the <code>fulfillment_order</code> parameter (available as of the <code>2023-04</code> API version),\n  or specify that the original fulfillment order contains line items which have already been fulfilled.\n</p>\n<p>\n  If the new location is already assigned to another active fulfillment order, on the same order,\n  then the line items are moved to the existing fulfillment order.\n  Otherwise, a new fulfillment order is created for the new location, and the line items are moved to the new location.\n</p>\n\n<h4>Response</h4>\n<ul>\n  <li>\n    <code>original_fulfillment_order</code> - The final state of the original fulfillment order.\n    <br>\n    As a result of the move operation, the original fulfillment order might be moved to the new location\n    or remain in the original location. The original fulfillment order might have the same status or be closed.\n  </li>\n  <li>\n    <code>moved_fulfillment_order</code> - The fulfillment order which now contains the moved line items and\n    is assigned to the destination location.\n    <br>\n    <b>First scenario:</b> All line items belonging to the original fulfillment order are re-assigned.\n    <br>\n    In this case, this will be the original fulfillment order.\n    <br>\n    <b>Second scenario:</b> A subset of the line items belonging to the original fulfillment order are re-assigned.\n    <br>\n    If the new location is already assigned to fulfill line items on the order, then\n    this will be an existing active fulfillment order.\n    Otherwise, this will be a new fulfillment order with the moved line items assigned.\n  </li>\n  <li>\n    <code>remaining_fulfillment_order</code> - this field is deprecated.\n  </li>\n</ul>",
      "summary": "Moves a fulfillment order to a new location",
      "operationId": "Movesafulfillmentordertoanewlocation",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_order",
          "description": "An object containing\n<ul>\n  <li>\n    <code>new_location_id</code>: (integer) The ID of the location where the fulfillment order will be moved.\n  </li>\n  <li>\n    <code>fulfillment_order_line_items</code>: (Array) An <strong>optional</strong> array\n    of fulfillment order line item ids and the quantity of each to move.\n    If left blank, all unfulfilled line items belonging to the fulfillment order are moved.\n    <strong>Added as of version 2023-04</strong>.\n  </li>\n</ul>\n",
          "in": "query",
          "schema": {
            "type": "object"
          },
          "required": true
        },
        {
          "name": "fulfillment_order_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Moves a fulfillment order to a new location",
          "content": {
            "application/json": {
              "examples": {
                "Move a fulfillment order to a new location": {
                  "value": {
                    "original_fulfillment_order": {
                      "id": 1046000818,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 487838322,
                      "request_status": "submitted",
                      "status": "closed",
                      "supported_actions": [],
                      "destination": {
                        "id": 1046000813,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [
                        {
                          "id": 1058737557,
                          "shop_id": 548380009,
                          "fulfillment_order_id": 1046000818,
                          "quantity": 1,
                          "line_item_id": 518995019,
                          "inventory_item_id": 49148385,
                          "fulfillable_quantity": 1,
                          "variant_id": 49148385
                        }
                      ],
                      "fulfillment_service_handle": "manual",
                      "assigned_location": {
                        "address1": null,
                        "address2": null,
                        "city": null,
                        "country_code": "DE",
                        "location_id": 24826418,
                        "name": "Apple Api Shipwire",
                        "phone": null,
                        "province": null,
                        "zip": null
                      },
                      "merchant_requests": []
                    },
                    "moved_fulfillment_order": {
                      "id": 1046000819,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 655441491,
                      "request_status": "unsubmitted",
                      "status": "open",
                      "supported_actions": [
                        "create_fulfillment",
                        "move"
                      ],
                      "destination": {
                        "id": 1046000814,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [
                        {
                          "id": 1058737558,
                          "shop_id": 548380009,
                          "fulfillment_order_id": 1046000819,
                          "quantity": 1,
                          "line_item_id": 518995019,
                          "inventory_item_id": 49148385,
                          "fulfillable_quantity": 1,
                          "variant_id": 49148385
                        }
                      ],
                      "fulfillment_service_handle": "manual",
                      "assigned_location": {
                        "address1": "50 Rideau Street",
                        "address2": null,
                        "city": "Ottawa",
                        "country_code": "CA",
                        "location_id": 655441491,
                        "name": "50 Rideau Street",
                        "phone": null,
                        "province": "Ontario",
                        "zip": "K1N 9J7"
                      },
                      "merchant_requests": []
                    },
                    "remaining_fulfillment_order": null
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_orders/1046000818/move.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2020-01/fulfillment_orders/1046000818/move.json",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"new_location_id\":655441491,\"fulfillment_order_line_items\":[{\"id\":1058738351,\"quantity\":1}]}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"original_fulfillment_order\":{\"id\":1046000818,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":487838322,\"request_status\":\"submitted\",\"status\":\"closed\",\"supported_actions\":[],\"destination\":{\"id\":1046000813,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737557,\"shop_id\":548380009,\"fulfillment_order_id\":1046000818,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfillment_service_handle\":\"manual\",\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]},\"moved_fulfillment_order\":{\"id\":1046000819,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":655441491,\"request_status\":\"unsubmitted\",\"status\":\"open\",\"supported_actions\":[\"create_fulfillment\",\"move\"],\"destination\":{\"id\":1046000814,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737558,\"shop_id\":548380009,\"fulfillment_order_id\":1046000819,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfillment_service_handle\":\"manual\",\"assigned_location\":{\"address1\":\"50 Rideau Street\",\"address2\":null,\"city\":\"Ottawa\",\"country_code\":\"CA\",\"location_id\":655441491,\"name\":\"50 Rideau Street\",\"phone\":null,\"province\":\"Ontario\",\"zip\":\"K1N 9J7\"},\"merchant_requests\":[]},\"remaining_fulfillment_order\":null}"
          },
          "name": "Move a fulfillment order to a new location",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"fulfillment_order\":{\"new_location_id\":655441491,\"fulfillment_order_line_items\":[{\"id\":1058738351,\"quantity\":1}]}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_orders/1046000818/move.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_order = ShopifyAPI::FulfillmentOrder.new(session: test_session)\nfulfillment_order.id = 1046000818\nfulfillment_order.move(\n  session: test_session,\n  body: {\"fulfillment_order\" => {\"new_location_id\" => 655441491, \"fulfillment_order_line_items\" => [{\"id\" => 1058738351, \"quantity\" => 1}]}},\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_order = new shopify.rest.FulfillmentOrder({session: session});\nfulfillment_order.id = 1046000818;\nawait fulfillment_order.move({\n  body: {\"fulfillment_order\": {\"new_location_id\": 655441491, \"fulfillment_order_line_items\": [{\"id\": 1058738351, \"quantity\": 1}]}},\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_order = new FulfillmentOrder($this->test_session);\n$fulfillment_order->id = 1046000818;\n$fulfillment_order->move(\n    [], // Params\n    [\"fulfillment_order\" => [\"new_location_id\" => 655441491, \"fulfillment_order_line_items\" => [[\"id\" => 1058738351, \"quantity\" => 1]]]], // Body\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "merchant_managed_fulfillment_orders"
          }
        ]
      },
      "x-privacy": {
        "annotations": [
          "assigned_location",
          "destination",
          "assigned_location",
          "destination",
          "assigned_location",
          "destination"
        ],
        "annotations_nested": {
          "original_fulfillment_order": {
            "assigned_location": {},
            "destination": {
              "address1": "address",
              "address2": "address",
              "city": "address",
              "email": "email",
              "phone": "phone",
              "zip": "address"
            }
          },
          "moved_fulfillment_order": {
            "assigned_location": {},
            "destination": {
              "address1": "address",
              "address2": "address",
              "city": "address",
              "email": "email",
              "phone": "phone",
              "zip": "address"
            }
          },
          "remaining_fulfillment_order": {
            "assigned_location": {},
            "destination": {
              "address1": "address",
              "address2": "address",
              "city": "address",
              "email": "email",
              "phone": "phone",
              "zip": "address"
            }
          }
        }
      },
      "url": "/admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/move.json",
      "action": "post"
    },
    {
      "description": "Marks a scheduled fulfillment order as ready for fulfillment.\n          This endpoint allows merchants to work on a scheduled fulfillment order before its expected <code>fulfill_at</code> datetime.",
      "summary": "Marks the fulfillment order as open",
      "operationId": "Marksthefulfillmentorderasopen",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_order_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Marks the fulfillment order as open",
          "content": {
            "application/json": {
              "examples": {
                "Transition a fulfillment order from scheduled to open": {
                  "value": {
                    "fulfillment_order": {
                      "id": 1046000809,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 24826418,
                      "request_status": "unsubmitted",
                      "status": "open",
                      "supported_actions": [
                        "request_fulfillment",
                        "create_fulfillment"
                      ],
                      "destination": {
                        "id": 1046000804,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [
                        {
                          "id": 1058737549,
                          "shop_id": 548380009,
                          "fulfillment_order_id": 1046000809,
                          "quantity": 1,
                          "line_item_id": 518995019,
                          "inventory_item_id": 49148385,
                          "fulfillable_quantity": 1,
                          "variant_id": 49148385
                        }
                      ],
                      "fulfillment_service_handle": "mars-fulfillment",
                      "fulfill_at": null,
                      "assigned_location": {
                        "address1": null,
                        "address2": null,
                        "city": null,
                        "country_code": "DE",
                        "location_id": 24826418,
                        "name": "Apple Api Shipwire",
                        "phone": null,
                        "province": null,
                        "zip": null
                      },
                      "merchant_requests": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_orders/1046000809/open.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-01/fulfillment_orders/1046000809/open.json",
            "headers": {},
            "body": "{}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"id\":1046000809,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":24826418,\"request_status\":\"unsubmitted\",\"status\":\"open\",\"supported_actions\":[\"request_fulfillment\",\"create_fulfillment\"],\"destination\":{\"id\":1046000804,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737549,\"shop_id\":548380009,\"fulfillment_order_id\":1046000809,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfillment_service_handle\":\"mars-fulfillment\",\"fulfill_at\":null,\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]}}"
          },
          "name": "Transition a fulfillment order from scheduled to open",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_orders/1046000809/open.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_order = ShopifyAPI::FulfillmentOrder.new(session: test_session)\nfulfillment_order.id = 1046000809\nfulfillment_order.open(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_order = new shopify.rest.FulfillmentOrder({session: session});\nfulfillment_order.id = 1046000809;\nawait fulfillment_order.open({});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_order = new FulfillmentOrder($this->test_session);\n$fulfillment_order->id = 1046000809;\n$fulfillment_order->open(\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": null
          }
        ]
      },
      "url": "/admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/open.json",
      "action": "post"
    },
    {
      "description": "Updates the <code>fulfill_at</code> time of a scheduled fulfillment order.\n          This endpoint is used to manage the time a scheduled fulfillment order will be marked as ready for fulfillment.",
      "summary": "Reschedules the fulfill_at time of a scheduled fulfillment order",
      "operationId": "Reschedulesthefulfill_attimeofascheduledfulfillmentorder",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_order_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Reschedules the fulfill_at time of a scheduled fulfillment order",
          "content": {
            "application/json": {
              "examples": {
                "Update the fulfill_at time of a scheduled fulfillment order": {
                  "value": {
                    "fulfillment_order": {
                      "id": 1046000816,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 24826418,
                      "request_status": "unsubmitted",
                      "status": "scheduled",
                      "supported_actions": [
                        "mark_as_open"
                      ],
                      "destination": {
                        "id": 1046000811,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [
                        {
                          "id": 1058737555,
                          "shop_id": 548380009,
                          "fulfillment_order_id": 1046000816,
                          "quantity": 1,
                          "line_item_id": 518995019,
                          "inventory_item_id": 49148385,
                          "fulfillable_quantity": 1,
                          "variant_id": 49148385
                        }
                      ],
                      "fulfillment_service_handle": "mars-fulfillment",
                      "fulfill_at": "2024-03-02T07:24:00-07:00",
                      "assigned_location": {
                        "address1": null,
                        "address2": null,
                        "city": null,
                        "country_code": "DE",
                        "location_id": 24826418,
                        "name": "Apple Api Shipwire",
                        "phone": null,
                        "province": null,
                        "zip": null
                      },
                      "merchant_requests": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_orders/1046000816/reschedule.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-01/fulfillment_orders/1046000816/reschedule.json",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"new_fulfill_at\":\"2024-03-02 14:24 UTC\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"id\":1046000816,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":24826418,\"request_status\":\"unsubmitted\",\"status\":\"scheduled\",\"supported_actions\":[\"mark_as_open\"],\"destination\":{\"id\":1046000811,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737555,\"shop_id\":548380009,\"fulfillment_order_id\":1046000816,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfillment_service_handle\":\"mars-fulfillment\",\"fulfill_at\":\"2024-03-02T09:24:00-05:00\",\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]}}"
          },
          "name": "Update the fulfill_at time of a scheduled fulfillment order",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"fulfillment_order\":{\"new_fulfill_at\":\"2024-03-02 14:24 UTC\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_orders/1046000816/reschedule.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_order = ShopifyAPI::FulfillmentOrder.new(session: test_session)\nfulfillment_order.id = 1046000816\nfulfillment_order.reschedule(\n  session: test_session,\n  body: {\"fulfillment_order\" => {\"new_fulfill_at\" => \"2024-03-02 14:24 UTC\"}},\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_order = new shopify.rest.FulfillmentOrder({session: session});\nfulfillment_order.id = 1046000816;\nawait fulfillment_order.reschedule({\n  body: {\"fulfillment_order\": {\"new_fulfill_at\": \"2024-03-02 14:24 UTC\"}},\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_order = new FulfillmentOrder($this->test_session);\n$fulfillment_order->id = 1046000816;\n$fulfillment_order->reschedule(\n    [], // Params\n    [\"fulfillment_order\" => [\"new_fulfill_at\" => \"2024-03-02 14:24 UTC\"]], // Body\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": null
          }
        ]
      },
      "url": "/admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/reschedule.json",
      "action": "post"
    },
    {
      "description": "Halts all fulfillment work on a fulfillment order with status <code>OPEN</code>\n          and changes the status of the fulfillment order to <code>ON_HOLD</code>.",
      "summary": "Applies a fulfillment hold on an open fulfillment order",
      "operationId": "Appliesafulfillmentholdonanopenfulfillmentorder",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_hold",
          "description": "An object containing\n<ul>\n  <li><code>reason</code>: (String) <strong>required</strong> A reason for the fulfillment hold.\n  <ul>\n  <li><code>awaiting_payment</code> The fulfillment hold is applied because payment is pending.</li>\n  <li><code>high_risk_of_fraud</code> The fulfillment hold is applied because of a high risk of fraud.</li>\n  <li><code>incorrect_address</code> The fulfillment hold is applied because of an incorrect address.</li>\n  <li><code>inventory_out_of_stock</code> The fulfillment hold is applied because inventory is out of stock.</li>\n  <li><code>other</code> The fulfillment hold is applied for any other reason.</li>\n  </ul>\n  </li>\n  <li><code>reason_notes</code>: (String) <strong>optional</strong> Additional information about the fulfillment hold reason.</li>\n  <li><code>notify_merchant</code>: (Boolean) <strong>optional</strong> Whether the merchant should receive a notification about the fulfillment hold. \"  \"If set to true, then the merchant will be notified on the Shopify mobile app \"  \"(if they use it to manage their store). The default value is false.</li>\n  <li><code>fulfillment_order_line_items</code>: (Array) An <strong>optional</strong> array of fulfillment order line item ids and the quantity of each to move. <strong>Added as of version 2023-04</strong></li>\n</ul>\n",
          "in": "query",
          "schema": {
            "type": "object"
          },
          "required": true
        },
        {
          "name": "fulfillment_order_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Applies a fulfillment hold on an open fulfillment order",
          "content": {
            "application/json": {
              "examples": {
                "Apply a fulfillment hold on a fulfillment order because some inventory is out of stock": {
                  "value": {
                    "fulfillment_order": {
                      "id": 1046000821,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 24826418,
                      "request_status": "unsubmitted",
                      "status": "on_hold",
                      "supported_actions": [
                        "release_hold"
                      ],
                      "destination": {
                        "id": 1046000816,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [
                        {
                          "id": 1058737560,
                          "shop_id": 548380009,
                          "fulfillment_order_id": 1046000821,
                          "quantity": 1,
                          "line_item_id": 518995019,
                          "inventory_item_id": 49148385,
                          "fulfillable_quantity": 1,
                          "variant_id": 49148385
                        }
                      ],
                      "fulfill_at": null,
                      "international_duties": {
                        "incoterm": "DAP"
                      },
                      "fulfillment_holds": [
                        {
                          "reason": "inventory_out_of_stock",
                          "reason_notes": "Not enough inventory to complete this work."
                        }
                      ],
                      "delivery_method": null,
                      "assigned_location": {
                        "address1": null,
                        "address2": null,
                        "city": null,
                        "country_code": "DE",
                        "location_id": 24826418,
                        "name": "Apple Api Shipwire",
                        "phone": null,
                        "province": null,
                        "zip": null
                      },
                      "merchant_requests": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_orders/1046000821/hold.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-10/fulfillment_orders/1046000821/hold.json",
            "headers": {},
            "body": "{\"fulfillment_hold\":{\"reason\":\"inventory_out_of_stock\",\"reason_notes\":\"Not enough inventory to complete this work.\",\"fulfillment_order_line_items\":[{\"id\":1058737538,\"quantity\":1}]}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"id\":1046000821,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":24826418,\"request_status\":\"unsubmitted\",\"status\":\"on_hold\",\"supported_actions\":[\"release_hold\"],\"destination\":{\"id\":1046000816,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737560,\"shop_id\":548380009,\"fulfillment_order_id\":1046000821,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfill_at\":null,\"international_duties\":{\"incoterm\":\"DAP\"},\"fulfillment_holds\":[{\"reason\":\"inventory_out_of_stock\",\"reason_notes\":\"Not enough inventory to complete this work.\"}],\"delivery_method\":null,\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]}}"
          },
          "name": "Apply a fulfillment hold on a fulfillment order because some inventory is out of stock",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"fulfillment_hold\":{\"reason\":\"inventory_out_of_stock\",\"reason_notes\":\"Not enough inventory to complete this work.\",\"fulfillment_order_line_items\":[{\"id\":1058737538,\"quantity\":1}]}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_orders/1046000821/hold.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_order = ShopifyAPI::FulfillmentOrder.new(session: test_session)\nfulfillment_order.id = 1046000821\nfulfillment_order.hold(\n  session: test_session,\n  body: {\"fulfillment_hold\" => {\"reason\" => \"inventory_out_of_stock\", \"reason_notes\" => \"Not enough inventory to complete this work.\", \"fulfillment_order_line_items\" => [{\"id\" => 1058737538, \"quantity\" => 1}]}},\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_order = new shopify.rest.FulfillmentOrder({session: session});\nfulfillment_order.id = 1046000821;\nawait fulfillment_order.hold({\n  body: {\"fulfillment_hold\": {\"reason\": \"inventory_out_of_stock\", \"reason_notes\": \"Not enough inventory to complete this work.\", \"fulfillment_order_line_items\": [{\"id\": 1058737538, \"quantity\": 1}]}},\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_order = new FulfillmentOrder($this->test_session);\n$fulfillment_order->id = 1046000821;\n$fulfillment_order->hold(\n    [], // Params\n    [\"fulfillment_hold\" => [\"reason\" => \"inventory_out_of_stock\", \"reason_notes\" => \"Not enough inventory to complete this work.\", \"fulfillment_order_line_items\" => [[\"id\" => 1058737538, \"quantity\" => 1]]]], // Body\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": null
          }
        ]
      },
      "x-privacy": {
        "annotations": [
          "assigned_location",
          "destination"
        ],
        "annotations_nested": {
          "fulfillment_order": {
            "assigned_location": {},
            "destination": {
              "address1": "address",
              "address2": "address",
              "city": "address",
              "email": "email",
              "phone": "phone",
              "zip": "address"
            }
          }
        }
      },
      "url": "/admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/hold.json",
      "action": "post"
    },
    {
      "description": "Sets the latest date and time by which the fulfillment orders need to be fulfilled.",
      "summary": "Sets deadline for fulfillment orders",
      "operationId": "Setsdeadlineforfulfillmentorders",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_deadline",
          "description": "The new fulfillment deadline of the fulfillment orders.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fulfillment_order_ids",
          "description": "The IDs of the fulfillment orders for which the deadline is being set",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Sets deadline for fulfillment orders",
          "content": {
            "application/json": {
              "examples": {
                "Set a fulfillment deadline for a fulfillment order": {
                  "value": {}
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_orders/set_fulfillment_orders_deadline.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2022-07/fulfillment_orders/set_fulfillment_orders_deadline.json",
            "headers": {},
            "body": "{\"fulfillment_order_ids\":[1046000811],\"fulfillment_deadline\":\"2021-05-26T10:00:00-04:00\"}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{}"
          },
          "name": "Set a fulfillment deadline for a fulfillment order",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"fulfillment_order_ids\":[1046000811],\"fulfillment_deadline\":\"2021-05-26T10:00:00-04:00\"}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_orders/set_fulfillment_orders_deadline.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_order = ShopifyAPI::FulfillmentOrder.new(session: test_session)\n\nfulfillment_order.set_fulfillment_orders_deadline(\n  session: test_session,\n  body: {\"fulfillment_order_ids\" => [1046000811], \"fulfillment_deadline\" => \"2021-05-26T10:00:00-04:00\"},\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_order = new shopify.rest.FulfillmentOrder({session: session});\n\nawait fulfillment_order.set_fulfillment_orders_deadline({\n  body: {\"fulfillment_order_ids\": [1046000811], \"fulfillment_deadline\": \"2021-05-26T10:00:00-04:00\"},\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_order = new FulfillmentOrder($this->test_session);\n\n$fulfillment_order->set_fulfillment_orders_deadline(\n    [], // Params\n    [\"fulfillment_order_ids\" => [1046000811], \"fulfillment_deadline\" => \"2021-05-26T10:00:00-04:00\"], // Body\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": null
          }
        ]
      },
      "url": "/admin/api/{api_version}/fulfillment_orders/set_fulfillment_orders_deadline.json",
      "action": "post"
    },
    {
      "description": "Release the fulfillment hold on a fulfillment order and changes the status\n          of the fulfillment order to <code>OPEN</code> or <code>SCHEDULED</code>",
      "summary": "Releases the fulfillment hold on a fulfillment order",
      "operationId": "Releasesthefulfillmentholdonafulfillmentorder",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_order_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Releases the fulfillment hold on a fulfillment order",
          "content": {
            "application/json": {
              "examples": {
                "Transition a fulfillment order from on_hold to open": {
                  "value": {
                    "fulfillment_order": {
                      "id": 1046000812,
                      "shop_id": 548380009,
                      "order_id": 450789469,
                      "assigned_location_id": 24826418,
                      "request_status": "submitted",
                      "status": "open",
                      "supported_actions": [
                        "cancel_fulfillment_order"
                      ],
                      "destination": {
                        "id": 1046000807,
                        "address1": "Chestnut Street 92",
                        "address2": "",
                        "city": "Louisville",
                        "company": null,
                        "country": "United States",
                        "email": "bob.norman@mail.example.com",
                        "first_name": "Bob",
                        "last_name": "Norman",
                        "phone": "+1(502)-459-2181",
                        "province": "Kentucky",
                        "zip": "40202"
                      },
                      "line_items": [
                        {
                          "id": 1058737552,
                          "shop_id": 548380009,
                          "fulfillment_order_id": 1046000812,
                          "quantity": 1,
                          "line_item_id": 518995019,
                          "inventory_item_id": 49148385,
                          "fulfillable_quantity": 1,
                          "variant_id": 49148385
                        }
                      ],
                      "fulfill_at": null,
                      "international_duties": {
                        "incoterm": "DAP"
                      },
                      "fulfillment_holds": [],
                      "delivery_method": null,
                      "assigned_location": {
                        "address1": null,
                        "address2": null,
                        "city": null,
                        "country_code": "DE",
                        "location_id": 24826418,
                        "name": "Apple Api Shipwire",
                        "phone": null,
                        "province": null,
                        "zip": null
                      },
                      "merchant_requests": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_orders/1046000812/release_hold.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-10/fulfillment_orders/1046000812/release_hold.json",
            "headers": {},
            "body": "{}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_order\":{\"id\":1046000812,\"shop_id\":548380009,\"order_id\":450789469,\"assigned_location_id\":24826418,\"request_status\":\"submitted\",\"status\":\"open\",\"supported_actions\":[\"cancel_fulfillment_order\"],\"destination\":{\"id\":1046000807,\"address1\":\"Chestnut Street 92\",\"address2\":\"\",\"city\":\"Louisville\",\"company\":null,\"country\":\"United States\",\"email\":\"bob.norman@mail.example.com\",\"first_name\":\"Bob\",\"last_name\":\"Norman\",\"phone\":\"+1(502)-459-2181\",\"province\":\"Kentucky\",\"zip\":\"40202\"},\"line_items\":[{\"id\":1058737552,\"shop_id\":548380009,\"fulfillment_order_id\":1046000812,\"quantity\":1,\"line_item_id\":518995019,\"inventory_item_id\":49148385,\"fulfillable_quantity\":1,\"variant_id\":49148385}],\"fulfill_at\":null,\"international_duties\":{\"incoterm\":\"DAP\"},\"fulfillment_holds\":[],\"delivery_method\":null,\"assigned_location\":{\"address1\":null,\"address2\":null,\"city\":null,\"country_code\":\"DE\",\"location_id\":24826418,\"name\":\"Apple Api Shipwire\",\"phone\":null,\"province\":null,\"zip\":null},\"merchant_requests\":[]}}"
          },
          "name": "Transition a fulfillment order from on_hold to open",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_orders/1046000812/release_hold.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_order = ShopifyAPI::FulfillmentOrder.new(session: test_session)\nfulfillment_order.id = 1046000812\nfulfillment_order.release_hold(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_order = new shopify.rest.FulfillmentOrder({session: session});\nfulfillment_order.id = 1046000812;\nawait fulfillment_order.release_hold({});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentOrder;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_order = new FulfillmentOrder($this->test_session);\n$fulfillment_order->id = 1046000812;\n$fulfillment_order->release_hold(\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": null
          }
        ]
      },
      "url": "/admin/api/{api_version}/fulfillment_orders/{fulfillment_order_id}/release_hold.json",
      "action": "post"
    }
  ],
  "components": [
    {
      "name": "FulfillmentOrder",
      "title": "FulfillmentOrder",
      "type": "object",
      "properties": [
        {
          "description": "The ID of the location that has been assigned to do the work.",
          "type": "string",
          "example": 3183479,
          "name": "assigned_location_id"
        },
        {
          "description": "        <p>The destination where the items should be sent.</p>\n        <ul>\n          <li><strong>id</strong>: The ID of the fulfillment order destination.</li>\n          <li><strong>address1</strong>: The street address of the assigned location.</li>\n          <li><strong>address2</strong>: An optional additional field for the street address of the assigned location.</li>\n          <li><strong>city</strong>: The city of the destination.</li>\n          <li><strong>company</strong>: The company of the destination.</li>\n          <li><strong>country</strong>: The country of the destination.</li>\n          <li><strong>email</strong>: The email of the customer at the destination.</li>\n          <li><strong>first_name</strong>: The first name of the customer at the destination.</li>\n          <li><strong>last_name</strong>: The last name of the customer at the destination.</li>\n          <li><strong>phone</strong>: The phone number of the customer at the destination.</li>\n          <li><strong>province</strong>: The province of the destination.</li>\n          <li><strong>zip</strong>: The ZIP code of the destination.</li>\n        </ul>\n",
          "type": "string",
          "example": {
            "id": 54433189,
            "address1": "123 Amoebobacterieae St",
            "address2": "Unit 806",
            "city": "Ottawa",
            "company": "",
            "country": "Canada",
            "email": "bob@example.com",
            "first_name": "Bob",
            "last_name": "Bobsen",
            "phone": "(555)555-5555",
            "province": "Ontario",
            "zip": "K2P0V6"
          },
          "name": "destination"
        },
        {
          "description": "        <p>The type of method used to transfer a product or service to a customer.</p>\n        <ul>\n          <li><strong>id</strong>: The ID of the delivery method.</li>\n          <li><strong>method_type</strong>: The type of delivery method. Valid values:\n            <ul>\n              <li><strong>local</strong>: A delivery to a customer's doorstep.</li>\n              <li><strong>none</strong>: No delivery method.</li>\n              <li><strong>pick_up</strong>: A delivery that a customer picks up at your retail store, curbside, or any location that you choose.</li>\n              <li><strong>retail</strong>: Items delivered immediately in a retail store.</li>\n              <li><strong>shipping</strong>: A delivery to a customer using a shipping carrier.</li>\n            </ul>\n          </li>\n          <li><strong>min_delivery_date_time</strong>: The minimum date and time by which the delivery is expected to be completed.</li>\n          <li><strong>max_delivery_date_time</strong>: The maximum date and time by which the delivery is expected to be completed.</li>\n        </ul>\n",
          "type": "string",
          "example": {
            "id": 64434189,
            "method_type": "local",
            "min_delivery_date_time": "2022-04-20T21:59:59-06:00",
            "max_delivery_date_time": "2022-04-28T21:59:59-06:00"
          },
          "name": "delivery_method"
        },
        {
          "description": "          The date and time at which the fulfillment order will be fulfillable.\n          When this date and time is reached, a <code>scheduled</code> fulfillment order is automatically transitioned to <code>open</code>.\n          For example, the <code>fulfill_at</code> date for a subscription order might be the 1st of each month, a pre-order <code>fulfill_at</code> date would be <code>nil</code>, and a standard order <code>fulfill_at</code> date would be the order creation date.\n          For more information about fulfillment statuses, refer to the <strong>status</strong> property.\n",
          "type": "string",
          "example": "2021-01-01",
          "name": "fulfill_at"
        },
        {
          "description": "          The latest date and time by which all items in the fulfillment order need to be fulfilled.\n",
          "type": "string",
          "example": "2021-01-01",
          "name": "fulfill_by"
        },
        {
          "description": "<p>Represents the fulfillment holds applied on the fulfillment order.</p>\n<ul>\n  <li><strong>reason</strong>: The reason for the fulfillment hold.</li>\n  <li><strong>reason_notes</strong>: Additional information about the fulfillment hold reason.</li>\n</ul>\n",
          "type": "string",
          "example": [
            {
              "reason": "incorrect_address",
              "reason_notes": "the apartment number is missing."
            }
          ],
          "name": "fulfillment_holds"
        },
        {
          "description": "An ID for the fulfillment order.",
          "type": "string",
          "example": 255858046,
          "name": "id"
        },
        {
          "description": "<p>The international duties relevant to the fulfillment order.</p>\n<ul>\n  <li><strong>incoterm</strong>: The method of duties payment. Valid values:\n    <ul>\n          <li><strong>DAP</strong>: Delivered at place.</li>\n          <li><strong>DDP</strong>: Delivered duty paid.</li>\n      </ul>\n   </li>\n</ul>\n",
          "type": "string",
          "example": {
            "incoterm": "DAP"
          },
          "name": "international_duties"
        },
        {
          "description": "<p>Represents line items belonging to a fulfillment order:</p>\n<ul>\n  <li><strong>id</strong>: The ID of the fulfillment order line item.</li>\n  <li><strong>shop_id</strong>: The ID of the shop associated with the fulfillment order line item.</li>\n  <li><strong>fulfillment_order_id</strong>: The ID of the fulfillment order associated with this line item.</li>\n  <li><strong>line_item_id</strong>: The ID of the line item associated with this fulfillment order line item.</li>\n  <li><strong>inventory_item_id</strong>: The ID of the inventory item associated with this fulfillment order line item.</li>\n  <li><strong>quantity</strong>: The total number of units to be fulfilled.</li>\n  <li><strong>fulfillable_quantity</strong>: The number of units remaining to be fulfilled.</li>\n  <li><strong>variant_id</strong>: The ID of the variant associated with this fulfillment order line item.</li>\n</ul>\n",
          "type": "string",
          "example": [
            {
              "id": 466157049,
              "shop_id": 3998762,
              "fulfillment_order_id": 1568020,
              "line_item_id": 466157049,
              "inventory_item_id": 6588097,
              "quantity": 1,
              "fulfillable_quantity": 1,
              "variant_id": 2385087
            }
          ],
          "name": "line_items"
        },
        {
          "description": "The ID of the order that's associated with the fulfillment order.",
          "type": "string",
          "example": 3183479,
          "name": "order_id"
        },
        {
          "description": "          <p>The request status of the fulfillment order. Valid values:</p>\n          <ul>\n            <li>\n              <strong>unsubmitted</strong>:\n              The initial request status for newly-created fulfillment orders. This is the only valid request\n              status for fulfillment orders that aren't assigned to a fulfillment service.\n            </li>\n            <li>\n              <strong>submitted</strong>: The merchant requested fulfillment for this fulfillment order.\n            </li>\n            <li>\n              <strong>accepted</strong>: The fulfillment service accepted the merchant's fulfillment request.\n            </li>\n            <li>\n              <strong>rejected</strong>: The fulfillment service rejected the merchant's fulfillment request.\n            </li>\n            <li>\n              <strong>cancellation_requested</strong>: The merchant requested a cancellation of the fulfillment request for this fulfillment order.\n            </li>\n            <li>\n              <strong>cancellation_accepted</strong>: The fulfillment service accepted the merchant's fulfillment cancellation request.\n            </li>\n            <li>\n              <strong>cancellation_rejected</strong>: The fulfillment service rejected the merchant's fulfillment cancellation request.\n            </li>\n            <li>\n              <strong>closed</strong>: The fulfillment service closed the fulfillment order without completing it.\n            </li>\n          </ul>\n",
          "type": "string",
          "example": "unsubmitted",
          "name": "request_status"
        },
        {
          "description": "The ID of the shop that's associated with the fulfillment order.",
          "type": "string",
          "example": 255858046,
          "name": "shop_id"
        },
        {
          "description": "          <p>The status of the fulfillment order. Valid values:</p>\n          <ul>\n            <li>\n              <strong>open</strong>: The fulfillment order is ready for fulfillment.\n            </li>\n            <li>\n              <strong>in_progress</strong>: The fulfillment order is being processed.\n            </li>\n            <li>\n              <strong>scheduled</strong>: The fulfillment order is deferred and will be ready for fulfillment\n                after the datetime specified in <code>fulfill_at</code>.\n            </li>\n            <li>\n              <strong>cancelled</strong>: The fulfillment order has been cancelled by the merchant.\n            </li>\n            <li>\n              <strong>on_hold</strong>: The fulfillment order is on hold. The fulfillment process can't be initiated until the hold on the fulfillment order is released.\n            </li>\n            <li>\n              <strong>incomplete</strong>: The fulfillment order cannot be completed as requested.\n            </li>\n            <li>\n              <strong>closed</strong>: The fulfillment order has been completed and closed.\n            </li>\n          </ul>\n",
          "type": "string",
          "example": "open",
          "name": "status"
        },
        {
          "description": "        <p>The actions that can be performed on this fulfillment order.</p>\n",
          "type": "string",
          "example": [
            "create_fulfillment",
            "request_fulfillment",
            "cancel_fulfillment_order",
            "request_cancellation"
          ],
          "name": "supported_actions"
        },
        {
          "description": "        <p>A list of requests sent by the merchant to the fulfillment service for this fulfillment order.</p>\n        <ul>\n          <li><strong>message</strong>: The message returned by the merchant, if any.</li>\n          <li><strong>request_options</strong>: The request options returned by the merchant, if any.</li>\n          <li><strong>kind</strong>: The kind of request. Valid values: <em>fulfillment_request</em>, <em>cancellation_request</em>, or <em>legacy_fulfill_request</em>.</li>\n        </ul>\n",
          "type": "string",
          "example": [
            {
              "message": "Hello, World!",
              "request_options": {
                "shipping_method": "pidgeon carrier",
                "note": "handle with care",
                "date": "2019-08-13T14:09:58-06:00"
              },
              "kind": "fulfillment_request"
            }
          ],
          "name": "merchant_requests"
        },
        {
          "description": "        <p>The fulfillment order's assigned location. This is the location where the fulfillment is expected to happen.</p>\n        <p>The fulfillment order's assigned location might change in the following cases:</p>\n        <ol>\n          <li>The fulfillment order has been entirely moved to a new location. For example, the\n            <a href=\"/api/admin-rest/latest/resources/fulfillmentorder#post-fulfillment-orders-fulfillment-order-id-move\">\n            fulfillment order move</a> endpoint has been called,\n            and you see the original fulfillment order in the <code>moved_fulfillment_order</code>\n            field within the response.</li>\n          <li>Work on the fulfillment order has not yet begun, which means that the fulfillment order has the\n            <code>open</code>, <code>scheduled</code>, or <code>on_hold</code> status,\n            and the shop's location properties might be undergoing edits (for example, in the Shopify admin).</li>\n        </ol>\n        <p>If the <a href=\"/api/admin-rest/latest/resources/fulfillmentorder#post-fulfillment-orders-fulfillment-order-id-move\">\n        move</a> operation has moved the fulfillment order's line items to a new location,\n        but hasn't moved the fulfillment order instance itself, then the original fulfillment order's assigned location\n        doesn't change.\n        This happens if the fulfillment order is being split during the move, or if all line items can be moved\n        to an existing fitting fulfillment order at a new location.</p>\n\n        <p>Once the fulfillment order has been taken into work or canceled,\n        which means that the fulfillment order has the\n        <code>in_progress</code>, <code>closed</code>, <code>cancelled</code>, or <code>incomplete</code> status,\n        assigned location acts as a snapshot of the shop's location content.\n        Up-to-date shop's location data may be queried through\n        <a href=\"https://shopify.dev/api/admin-rest/latest/resources/location#get-locations-location-id\">\n        get location</a> endpoint with <code>assigned_location.location_id</code> supplied.</p>\n        <ul>\n          <li><strong>address1</strong>: The street address of the assigned location.</li>\n          <li><strong>address2</strong>: An optional additional field for the street address of the assigned location.</li>\n          <li><strong>city</strong>: The city of the assigned location.</li>\n          <li><strong>country_code</strong>: The two-letter code for the country of the assigned location.</li>\n          <li><strong>location_id</strong>: The ID of the shop's location where the fulfillment is expected to happen.\n            It's content might be different from the <code>assigned_location</code> content\n            if the location's attributes were updated after the fulfillment order was taken into work of canceled.</li>\n          <li><strong>name</strong>: The name of the assigned location.</li>\n          <li><strong>phone</strong>: The phone number of the assigned location.</li>\n          <li><strong>province</strong>: The province of the assigned location.</li>\n          <li><strong>zip</strong>: The ZIP code of the assigned location.</li>\n        </ul>\n",
          "type": "string",
          "example": {
            "address1": "123 Amoebobacterieae St",
            "address2": "Unit 806",
            "city": "Ottawa",
            "country_code": "CA",
            "location_id": 17232953366,
            "name": "Bob Bobsen",
            "phone": "(555)555-5555",
            "province": "Ontario",
            "zip": "K2P0V6"
          },
          "name": "assigned_location"
        },
        {
          "description": "          <p>The date and time\n          (<a href='https://en.wikipedia.org/wiki/ISO_8601' target=\"_blank\">ISO 8601</a> format)\n          when the fulfillment order was created.</p>\n",
          "type": "string",
          "format": "ISO_8601",
          "readOnly": true,
          "example": "2022-01-01T05:00:00-07:00",
          "name": "created_at"
        },
        {
          "description": "          <p>The date and time\n          (<a href='https://en.wikipedia.org/wiki/ISO_8601' target=\"_blank\">ISO 8601</a> format)\n          when the fulfillment order was last updated.</p>\n",
          "type": "string",
          "format": "ISO_8601",
          "readOnly": true,
          "example": {
            "created_at": "2022-01-01T05:00:00-07:00"
          },
          "name": "updated_at"
        }
      ],
      "required": null
    }
  ],
  "x-shopify-meta": {
    "channels": false,
    "file_name": "shipping-and-fulfillment/fulfillmentorder",
    "gid": "1a391d81-be3b-4b9f-990a-1b6b79353488",
    "glossary": false,
    "hidden": false,
    "legacy-urls": [
      "/api/reference/shipping-and-fulfillment/unstable/fulfillmentorder"
    ],
    "meta_description": "Manage an item or a group of items in an order that are to be fulfilled from the same location. Retrieve and cancel fulfillment orders, mark fulfillment orders as incomplete, or move fulfillment orders to a new location.",
    "postman_group": "Shipping and fulfillment",
    "keywords": [
      "api"
    ],
    "api_versioning": true,
    "shopify_plus": false,
    "weight": null,
    "usage-notes": null
  },
  "personal_data_fields": {
    "fulfillment_orders": {
      "assigned_location": {},
      "destination": {
        "address1": "address",
        "address2": "address",
        "city": "address",
        "email": "email",
        "phone": "phone",
        "zip": "address"
      }
    },
    "fulfillment_order": {
      "assigned_location": {},
      "destination": {
        "address1": "address",
        "address2": "address",
        "city": "address",
        "email": "email",
        "phone": "phone",
        "zip": "address"
      }
    },
    "original_fulfillment_order": {
      "assigned_location": {},
      "destination": {
        "address1": "address",
        "address2": "address",
        "city": "address",
        "email": "email",
        "phone": "phone",
        "zip": "address"
      }
    },
    "moved_fulfillment_order": {
      "assigned_location": {},
      "destination": {
        "address1": "address",
        "address2": "address",
        "city": "address",
        "email": "email",
        "phone": "phone",
        "zip": "address"
      }
    },
    "remaining_fulfillment_order": {
      "assigned_location": {},
      "destination": {
        "address1": "address",
        "address2": "address",
        "city": "address",
        "email": "email",
        "phone": "phone",
        "zip": "address"
      }
    }
  }
}
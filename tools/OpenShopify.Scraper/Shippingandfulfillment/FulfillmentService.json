{
  "openapi": "3.0.0",
  "info": {
    "title": "FulfillmentService",
    "description": "        <p>A <strong>Fulfillment Service</strong> is a third party warehouse that prepares and ships orders\n          on behalf of the store owner. Fulfillment services charge a fee to package and ship items\n          and update product inventory levels. Some well known fulfillment services with Shopify integrations\n          include: Amazon, Shipwire, and Rakuten. When an app registers a new <code>FulfillmentService</code> on a store,\n          Shopify automatically creates a <code>Location</code> that's associated to the fulfillment service.\n          To learn more about fulfillment services, refer to\n          <a href=\"/apps/fulfillment/fulfillment-service-apps\">Manage fulfillments as a fulfillment service app</a> guide.\n        </p>\n\n        <p>Using the <code>FulfillmentService</code> resource, you can register, edit, and delete a new fulfillment service.</p>\n\n        <h2>Hosted endpoints</h2>\n        <p>Fulfillment service providers integrate with Shopify by providing Shopify with a set of hosted endpoints that\n          Shopify can query on certain conditions.\n          These endpoints must have a common prefix, and this prefix should be supplied in the <code>callback_url</code> parameter\n          in the request that creates the fulfillment service.\n        </p>\n        <ul>\n          <li>Shopify sends POST requests to the <code>callback_url/fulfillment_order_notification</code> endpoint\n            to notify the fulfillment service about fulfillment requests and fulfillment cancellation requests,\n            if <code>fulfillment_orders_opt_in</code> is set to <code>true</code>.\n            <br><a href=\"/changelog/legacy-fulfillment-api-deprecation\">As of the 2022-07 API version</a>,\n            it's mandatory for a fulfillment service to follow a fulfillment order based workflow by\n            having <code>fulfillment_orders_opt_in</code> set to <code>true</code>,\n            hosting the <code>callback_url/fulfillment_order_notification</code> endpoint, and acting on fulfillment requests and cancellations.\n            <br>For more information, refer to\n            <a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations\">Receive fulfillment requests and cancellations</a>.\n          </li>\n          <li>Shopify sends GET requests to the <code>callback_url/fetch_tracking_numbers</code> endpoint to retrieve tracking numbers for orders,\n            if <code>tracking_support</code> is set to <code>true</code>.\n            <br>For more information, refer to\n            <a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-8-enable-tracking-support-optional\">Enable tracking support</a>.\n            <br>Fulfillment services can also update tracking information with a\n            <a href=\"/api/admin-rest/latest/resources/fulfillment#post-fulfillments-fulfillment-id-update-tracking\">corresponding API</a>,\n            rather than waiting for Shopify to ask for tracking numbers.\n          </li>\n          <li>Shopify sends GET requests to the <code>callback_url/fetch_stock</code> endpoint to retrieve inventory levels,\n            if <code>inventory_management</code> is set to <code>true</code>.\n            <br>For more information, refer to\n            <a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-9-share-inventory-levels-with-shopify-optional\">Sharing inventory levels with Shopify</a>.\n          </li>\n        </ul>\n        <p>To make sure you have everything set up correctly, you can test the <code>callback_url</code>-prefixed endpoints\n          in your development store.</p>\n\n        <h2>Resources and webhooks</h2>\n        <p>There are a variety of REST resources and webhooks that enable a fulfillment service to work.\n          To exchange fulfillment information with Shopify, fulfillment services use the\n          <a href=\"/api/admin-rest/latest/resources/fulfillmentorder\">FulfillmentOrder</a>,\n          <a href=\"/api/admin-rest/latest/resources/fulfillmentrequest\">FulfillmentRequest</a>, and\n          <a href=\"/api/admin-rest/latest/resources/cancellationrequest\">CancellationRequest</a>,\n          <a href=\"/api/admin-rest/latest/resources/fulfillment\">Fulfillment</a> and\n          <a href=\"/api/admin-rest/latest/resources/order\">Order</a> resources.\n          To act on fulfillment process events that happen on the Shopify side,\n          besides awaiting calls to <code>callback_url</code>-prefixed endpoints,\n          fulfillment services can subscribe to the\n          <a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#webhooks\">fulfillment order</a> and\n          <a href=\"/api/admin-rest/latest/resources/webhook\">order</a> webhooks.\n        </p>\n",
    "x-owner": "https://vault.shopify.io/teams/2678",
    "x-description-list": null,
    "version": "2023-04"
  },
  "paths": [
    {
      "description": null,
      "summary": "Receive a list of all FulfillmentServices",
      "operationId": "ReceivealistofallFulfillmentServices",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "scope",
          "description": "Specify which fulfillment services to retrieve.",
          "in": "query",
          "schema": {
            "type": "enum",
            "enum": [
              "all",
              "current_client"
            ]
          },
          "examples": {
            "current_client": {
              "summary": "Returns fulfillment providers that have been created by the app sending the request (default)",
              "value": "current_client"
            },
            "all": {
              "summary": "Returns all the fulfillment providers",
              "value": "all"
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Receive a list of all FulfillmentServices",
          "content": {
            "application/json": {
              "examples": {
                "List all of the shop's fulfillment services": {
                  "value": {
                    "fulfillment_services": [
                      {
                        "id": 611870435,
                        "name": "Venus Fulfillment",
                        "email": null,
                        "service_name": "Venus Fulfillment",
                        "handle": "venus-fulfillment",
                        "fulfillment_orders_opt_in": false,
                        "include_pending_stock": false,
                        "provider_id": null,
                        "location_id": 611870435,
                        "callback_url": null,
                        "tracking_support": true,
                        "inventory_management": true,
                        "admin_graphql_api_id": "gid://shopify/ApiFulfillmentService/611870435"
                      },
                      {
                        "id": 755357713,
                        "name": "Mars Fulfillment",
                        "email": null,
                        "service_name": "Mars Fulfillment",
                        "handle": "mars-fulfillment",
                        "fulfillment_orders_opt_in": true,
                        "include_pending_stock": false,
                        "provider_id": null,
                        "location_id": 24826418,
                        "callback_url": "http://google.com/",
                        "tracking_support": true,
                        "inventory_management": true,
                        "admin_graphql_api_id": "gid://shopify/ApiFulfillmentService/755357713"
                      }
                    ]
                  }
                },
                "List your app's fulfillment services": {
                  "value": {
                    "fulfillment_services": [
                      {
                        "id": 755357713,
                        "name": "Mars Fulfillment",
                        "email": null,
                        "service_name": "Mars Fulfillment",
                        "handle": "mars-fulfillment",
                        "fulfillment_orders_opt_in": true,
                        "include_pending_stock": false,
                        "provider_id": null,
                        "location_id": 24826418,
                        "callback_url": "http://google.com/",
                        "tracking_support": true,
                        "inventory_management": true,
                        "admin_graphql_api_id": "gid://shopify/ApiFulfillmentService/755357713"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "scope=all",
          "request_path": "/admin/api/2023-04/fulfillment_services.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2020-01/fulfillment_services.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_services\":[{\"id\":611870435,\"name\":\"Venus Fulfillment\",\"email\":null,\"service_name\":\"Venus Fulfillment\",\"handle\":\"venus-fulfillment\",\"fulfillment_orders_opt_in\":false,\"include_pending_stock\":false,\"provider_id\":null,\"location_id\":611870435,\"callback_url\":null,\"tracking_support\":true,\"inventory_management\":true,\"admin_graphql_api_id\":\"gid://shopify/ApiFulfillmentService/611870435\"},{\"id\":755357713,\"name\":\"Mars Fulfillment\",\"email\":null,\"service_name\":\"Mars Fulfillment\",\"handle\":\"mars-fulfillment\",\"fulfillment_orders_opt_in\":true,\"include_pending_stock\":false,\"provider_id\":null,\"location_id\":24826418,\"callback_url\":\"http://google.com/\",\"tracking_support\":true,\"inventory_management\":true,\"admin_graphql_api_id\":\"gid://shopify/ApiFulfillmentService/755357713\"}]}"
          },
          "name": "List all of the shop's fulfillment services",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_services.json?scope=all\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::FulfillmentService.all(\n  session: test_session,\n  scope: \"all\",\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.FulfillmentService.all({\n  session: session,\n  scope: \"all\",\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentService;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nFulfillmentService::all(\n    $this->test_session, // Session\n    [], // Url Ids\n    [\"scope\" => \"all\"], // Params\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_services.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2020-01/fulfillment_services.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_services\":[{\"id\":755357713,\"name\":\"Mars Fulfillment\",\"email\":null,\"service_name\":\"Mars Fulfillment\",\"handle\":\"mars-fulfillment\",\"fulfillment_orders_opt_in\":true,\"include_pending_stock\":false,\"provider_id\":null,\"location_id\":24826418,\"callback_url\":\"http://google.com/\",\"tracking_support\":true,\"inventory_management\":true,\"admin_graphql_api_id\":\"gid://shopify/ApiFulfillmentService/755357713\"}]}"
          },
          "name": "List your app's fulfillment services",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_services.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::FulfillmentService.all(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.FulfillmentService.all({\n  session: session,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentService;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nFulfillmentService::all(\n    $this->test_session, // Session\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "fulfillments"
          }
        ]
      },
      "url": "/admin/api/{api_version}/fulfillment_services.json?scope=all",
      "action": "get"
    },
    {
      "description": null,
      "summary": "Create a new FulfillmentService",
      "operationId": "CreateanewFulfillmentService",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "callback_url",
          "description": "    The callback URL that the fulfillment service has registered for requests. The following considerations apply:\n    <ul>\n      <li> Shopify queries the <code>callback_url/fetch_tracking_numbers</code> endpoint to retrieve tracking numbers for orders,\n          if <code>tracking_support</code> is set to <code>true</code>.</li>\n      <li> Shopify queries the <code>callback_url/fetch_stock</code> endpoint to retrieve inventory levels,\n          if <code>inventory_management</code> is set to <code>true</code>.</li>\n      <li> Shopify uses the <code>callback_url/fulfillment_order_notification</code> endpoint to send\n    <a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations\">\n    fulfillment and cancellation requests</a>\n    if the fulfillment service has opted in to the fulfillment order based workflow for managing fulfillments\n    (<code>fulfillment_orders_opt_in</code> is set to <code>true</code>).</li>\n    </ul>\n    The <code>callback_url</code> field is required if <code>inventory_management</code>,\n    <code>tracking_support</code>, or <code>fulfillment_orders_opt_in</code> is set to <code>true</code>.\n",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fulfillment_orders_opt_in",
          "description": "Whether the fulfillment service uses the <a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments\">fulfillment order based workflow</a> for managing fulfillments.",
          "in": "query",
          "schema": {
            "type": "boolean",
            "default": "false"
          }
        },
        {
          "name": "inventory_management",
          "description": "Whether the fulfillment service tracks product inventory and provides updates to Shopify. Valid values: <code>true</code> and <code>false</code>.",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "name",
          "description": "The name of the fulfillment service as seen by merchants.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "permits_sku_sharing",
          "description": "Whether the fulfillment service can stock inventory alongside other locations.",
          "in": "query",
          "schema": {
            "type": "boolean",
            "default": "false"
          }
        },
        {
          "name": "requires_shipping_method",
          "description": "Whether the fulfillment service requires products to be physically shipped. Valid values: <code>true</code> and <code>false</code>.",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "tracking_support",
          "description": "Whether the fulfillment service provides tracking numbers for packages. Valid values: <code>true</code> and <code>false</code>.",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Create a new FulfillmentService",
          "content": {
            "application/json": {
              "examples": {
                "Create a fulfillment service": {
                  "value": {
                    "fulfillment_service": {
                      "id": 1061774488,
                      "name": "Jupiter Fulfillment",
                      "email": null,
                      "service_name": "Jupiter Fulfillment",
                      "handle": "jupiter-fulfillment",
                      "fulfillment_orders_opt_in": true,
                      "include_pending_stock": false,
                      "provider_id": null,
                      "location_id": 1072404545,
                      "callback_url": "http://google.com/",
                      "tracking_support": true,
                      "inventory_management": true,
                      "admin_graphql_api_id": "gid://shopify/ApiFulfillmentService/1061774488",
                      "permits_sku_sharing": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "201",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_services.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2022-07/fulfillment_services.json",
            "headers": {},
            "body": "{\"fulfillment_service\":{\"name\":\"Jupiter Fulfillment\",\"callback_url\":\"http://google.com\",\"inventory_management\":true,\"tracking_support\":true,\"requires_shipping_method\":true,\"format\":\"json\",\"permits_sku_sharing\":true,\"fulfillment_orders_opt_in\":true}}"
          },
          "response": {
            "action": "HTTP/1.1 201 Created",
            "headers": {},
            "body": "{\"fulfillment_service\":{\"id\":1061774488,\"name\":\"Jupiter Fulfillment\",\"email\":null,\"service_name\":\"Jupiter Fulfillment\",\"handle\":\"jupiter-fulfillment\",\"fulfillment_orders_opt_in\":true,\"include_pending_stock\":false,\"provider_id\":null,\"location_id\":1072404545,\"callback_url\":\"http://google.com/\",\"tracking_support\":true,\"inventory_management\":true,\"admin_graphql_api_id\":\"gid://shopify/ApiFulfillmentService/1061774488\",\"permits_sku_sharing\":true}}"
          },
          "name": "Create a fulfillment service",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"fulfillment_service\":{\"name\":\"Jupiter Fulfillment\",\"callback_url\":\"http://google.com\",\"inventory_management\":true,\"tracking_support\":true,\"requires_shipping_method\":true,\"format\":\"json\",\"permits_sku_sharing\":true,\"fulfillment_orders_opt_in\":true}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_services.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_service = ShopifyAPI::FulfillmentService.new(session: test_session)\nfulfillment_service.name = \"Jupiter Fulfillment\"\nfulfillment_service.callback_url = \"http://google.com\"\nfulfillment_service.inventory_management = true\nfulfillment_service.tracking_support = true\nfulfillment_service.requires_shipping_method = true\nfulfillment_service.format = \"json\"\nfulfillment_service.permits_sku_sharing = true\nfulfillment_service.fulfillment_orders_opt_in = true\nfulfillment_service.save!"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_service = new shopify.rest.FulfillmentService({session: session});\nfulfillment_service.name = \"Jupiter Fulfillment\";\nfulfillment_service.callback_url = \"http://google.com\";\nfulfillment_service.inventory_management = true;\nfulfillment_service.tracking_support = true;\nfulfillment_service.requires_shipping_method = true;\nfulfillment_service.format = \"json\";\nfulfillment_service.permits_sku_sharing = true;\nfulfillment_service.fulfillment_orders_opt_in = true;\nawait fulfillment_service.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentService;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_service = new FulfillmentService($this->test_session);\n$fulfillment_service->name = \"Jupiter Fulfillment\";\n$fulfillment_service->callback_url = \"http://google.com\";\n$fulfillment_service->inventory_management = true;\n$fulfillment_service->tracking_support = true;\n$fulfillment_service->requires_shipping_method = true;\n$fulfillment_service->format = \"json\";\n$fulfillment_service->permits_sku_sharing = true;\n$fulfillment_service->fulfillment_orders_opt_in = true;\n$fulfillment_service->save(\n    true, // Update Object\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "fulfillments"
          }
        ]
      },
      "url": "/admin/api/{api_version}/fulfillment_services.json",
      "action": "post"
    },
    {
      "description": null,
      "summary": "Receive a single FulfillmentService",
      "operationId": "ReceiveasingleFulfillmentService",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_service_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Receive a single FulfillmentService",
          "content": {
            "application/json": {
              "examples": {
                "Get a single fulfillment service by its ID": {
                  "value": {
                    "fulfillment_service": {
                      "id": 755357713,
                      "name": "Mars Fulfillment",
                      "email": null,
                      "service_name": "Mars Fulfillment",
                      "handle": "mars-fulfillment",
                      "fulfillment_orders_opt_in": true,
                      "include_pending_stock": false,
                      "provider_id": null,
                      "location_id": 24826418,
                      "callback_url": "http://google.com/",
                      "tracking_support": true,
                      "inventory_management": true,
                      "admin_graphql_api_id": "gid://shopify/ApiFulfillmentService/755357713"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_services/755357713.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2020-01/fulfillment_services/755357713.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_service\":{\"id\":755357713,\"name\":\"Mars Fulfillment\",\"email\":null,\"service_name\":\"Mars Fulfillment\",\"handle\":\"mars-fulfillment\",\"fulfillment_orders_opt_in\":true,\"include_pending_stock\":false,\"provider_id\":null,\"location_id\":24826418,\"callback_url\":\"http://google.com/\",\"tracking_support\":true,\"inventory_management\":true,\"admin_graphql_api_id\":\"gid://shopify/ApiFulfillmentService/755357713\"}}"
          },
          "name": "Get a single fulfillment service by its ID",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_services/755357713.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::FulfillmentService.find(\n  session: test_session,\n  id: 755357713,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.FulfillmentService.find({\n  session: session,\n  id: 755357713,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentService;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nFulfillmentService::find(\n    $this->test_session, // Session\n    755357713, // Id\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "fulfillments"
          }
        ]
      },
      "url": "/admin/api/{api_version}/fulfillment_services/{fulfillment_service_id}.json",
      "action": "get"
    },
    {
      "description": null,
      "summary": "Modify an existing FulfillmentService",
      "operationId": "ModifyanexistingFulfillmentService",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_service_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "callback_url",
          "description": "    The callback URL that the fulfillment service has registered for requests. The following considerations apply:\n    <ul>\n      <li> Shopify queries the <code>callback_url/fetch_tracking_numbers</code> endpoint to retrieve tracking numbers for orders,\n          if <code>tracking_support</code> is set to <code>true</code>.</li>\n      <li> Shopify queries the <code>callback_url/fetch_stock</code> endpoint to retrieve inventory levels,\n          if <code>inventory_management</code> is set to <code>true</code>.</li>\n      <li> Shopify uses the <code>callback_url/fulfillment_order_notification</code> endpoint to send\n    <a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations\">\n    fulfillment and cancellation requests</a>\n    if the fulfillment service has opted in to the fulfillment order based workflow for managing fulfillments\n    (<code>fulfillment_orders_opt_in</code> is set to <code>true</code>).</li>\n    </ul>\n    The <code>callback_url</code> field is required if <code>inventory_management</code>,\n    <code>tracking_support</code>, or <code>fulfillment_orders_opt_in</code> is set to <code>true</code>.\n",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "fulfillment_orders_opt_in",
          "description": "Whether the fulfillment service uses the <a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments\">fulfillment order based workflow</a> for managing fulfillments.",
          "in": "query",
          "schema": {
            "type": "boolean",
            "default": "false"
          }
        },
        {
          "name": "inventory_management",
          "description": "Whether the fulfillment service tracks product inventory and provides updates to Shopify. Valid values: <code>true</code> and <code>false</code>.",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "name",
          "description": "The name of the fulfillment service as seen by merchants.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "permits_sku_sharing",
          "description": "Whether the fulfillment service can stock inventory alongside other locations.",
          "in": "query",
          "schema": {
            "type": "boolean",
            "default": "false"
          }
        },
        {
          "name": "requires_shipping_method",
          "description": "Whether the fulfillment service requires products to be physically shipped. Valid values: <code>true</code> and <code>false</code>.",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "tracking_support",
          "description": "Whether the fulfillment service provides tracking numbers for packages. Valid values: <code>true</code> and <code>false</code>.",
          "in": "query",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Modify an existing FulfillmentService",
          "content": {
            "application/json": {
              "examples": {
                "Update a fulfillment service": {
                  "value": {
                    "fulfillment_service": {
                      "id": 755357713,
                      "name": "New Fulfillment Service Name",
                      "email": null,
                      "service_name": "New Fulfillment Service Name",
                      "handle": "new-fulfillment-service-name",
                      "fulfillment_orders_opt_in": true,
                      "include_pending_stock": false,
                      "provider_id": null,
                      "location_id": 24826418,
                      "callback_url": "http://google.com/",
                      "tracking_support": true,
                      "inventory_management": true,
                      "admin_graphql_api_id": "gid://shopify/ApiFulfillmentService/755357713"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_services/755357713.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/2020-01/fulfillment_services/755357713.json",
            "headers": {},
            "body": "{\"fulfillment_service\":{\"id\":755357713,\"name\":\"New Fulfillment Service Name\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"fulfillment_service\":{\"id\":755357713,\"name\":\"New Fulfillment Service Name\",\"email\":null,\"service_name\":\"New Fulfillment Service Name\",\"handle\":\"new-fulfillment-service-name\",\"fulfillment_orders_opt_in\":true,\"include_pending_stock\":false,\"provider_id\":null,\"location_id\":24826418,\"callback_url\":\"http://google.com/\",\"tracking_support\":true,\"inventory_management\":true,\"admin_graphql_api_id\":\"gid://shopify/ApiFulfillmentService/755357713\"}}"
          },
          "name": "Update a fulfillment service",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"fulfillment_service\":{\"id\":755357713,\"name\":\"New Fulfillment Service Name\"}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_services/755357713.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nfulfillment_service = ShopifyAPI::FulfillmentService.new(session: test_session)\nfulfillment_service.id = 755357713\nfulfillment_service.name = \"New Fulfillment Service Name\"\nfulfillment_service.save!"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst fulfillment_service = new shopify.rest.FulfillmentService({session: session});\nfulfillment_service.id = 755357713;\nfulfillment_service.name = \"New Fulfillment Service Name\";\nawait fulfillment_service.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentService;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$fulfillment_service = new FulfillmentService($this->test_session);\n$fulfillment_service->id = 755357713;\n$fulfillment_service->name = \"New Fulfillment Service Name\";\n$fulfillment_service->save(\n    true, // Update Object\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "fulfillments"
          }
        ]
      },
      "url": "/admin/api/{api_version}/fulfillment_services/{fulfillment_service_id}.json",
      "action": "put"
    },
    {
      "description": null,
      "summary": "Remove an existing FulfillmentService",
      "operationId": "RemoveanexistingFulfillmentService",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fulfillment_service_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Remove an existing FulfillmentService",
          "content": {
            "application/json": {
              "examples": {
                "Destroy a fulfillment service": {
                  "value": {}
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/fulfillment_services/755357713.json",
          "request_method": "DELETE",
          "request": {
            "action": "DELETE /admin/api/unstable/fulfillment_services/755357713.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{}"
          },
          "name": "Destroy a fulfillment service",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X DELETE \"https://your-development-store.myshopify.com/admin/api/2023-04/fulfillment_services/755357713.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::FulfillmentService.delete(\n  session: test_session,\n  id: 755357713,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.FulfillmentService.delete({\n  session: session,\n  id: 755357713,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\FulfillmentService;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nFulfillmentService::delete(\n    $this->test_session, // Session\n    755357713, // Id\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "fulfillments"
          }
        ]
      },
      "url": "/admin/api/{api_version}/fulfillment_services/{fulfillment_service_id}.json",
      "action": "delete"
    }
  ],
  "components": [
    {
      "name": "FulfillmentService",
      "title": "FulfillmentService",
      "type": "object",
      "properties": [
        {
          "description": "The GraphQL GID for this fulfillment service.",
          "type": "string",
          "example": "gid://shopify/FulfillmentService/1",
          "name": "admin_graphql_api_id"
        },
        {
          "description": "    The callback URL that the fulfillment service has registered for requests. The following considerations apply:\n    <ul>\n      <li> Shopify queries the <code>callback_url/fetch_tracking_numbers</code> endpoint to retrieve tracking numbers for orders,\n          if <code>tracking_support</code> is set to <code>true</code>.</li>\n      <li> Shopify queries the <code>callback_url/fetch_stock</code> endpoint to retrieve inventory levels,\n          if <code>inventory_management</code> is set to <code>true</code>.</li>\n      <li> Shopify uses the <code>callback_url/fulfillment_order_notification</code> endpoint to send\n    <a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations\">\n    fulfillment and cancellation requests</a>\n    if the fulfillment service has opted in to the fulfillment order based workflow for managing fulfillments\n    (<code>fulfillment_orders_opt_in</code> is set to <code>true</code>).</li>\n    </ul>\n    The <code>callback_url</code> field is required if <code>inventory_management</code>,\n    <code>tracking_support</code>, or <code>fulfillment_orders_opt_in</code> is set to <code>true</code>.\n",
          "type": "string",
          "example": "http://myapp.com",
          "name": "callback_url"
        },
        {
          "description": "Whether the fulfillment service uses the<a href=\"/apps/fulfillment/fulfillment-service-apps/manage-fulfillments\">fulfillment order based workflow</a> for managing fulfillments.<br><a href=\"/changelog/legacy-fulfillment-api-deprecation\">As of 2022-07 API version</a>, the fulfillment order based workflow is the only way to manage fulfillments, and <code>fulfillment_orders_opt_in</code> must be set to <code>true</code>.<br>",
          "type": "string",
          "example": true,
          "name": "fulfillment_orders_opt_in"
        },
        {
          "description": "Whether the fulfillment service can stock inventory alongside other locations.",
          "type": "string",
          "example": true,
          "name": "permits_sku_sharing"
        },
        {
          "description": "Human-readable unique identifier for this fulfillment service.",
          "type": "string",
          "example": "my-fulfillment-service",
          "name": "handle"
        },
        {
          "description": "Whether the fulfillment service tracks product inventory and provides updates to Shopify. Valid values: <code>true</code> and <code>false</code>.",
          "type": "string",
          "example": true,
          "name": "inventory_management"
        },
        {
          "description": "The unique identifier of the location associated with the fulfillment service",
          "type": "string",
          "example": 19,
          "name": "location_id"
        },
        {
          "description": "The name of the fulfillment service as seen by merchants.",
          "type": "string",
          "example": "My Fulfillment Service",
          "name": "name"
        },
        {
          "description": "A unique identifier for the fulfillment service provider.",
          "type": "string",
          "example": null,
          "name": "provider_id"
        },
        {
          "description": "Whether the fulfillment service requires products to be physically shipped. Valid values: <code>true</code> and <code>false</code>.",
          "type": "string",
          "example": true,
          "name": "requires_shipping_method"
        },
        {
          "description": "Whether the fulfillment service provides tracking numbers for packages. Valid values: <code>true</code> and <code>false</code>.",
          "type": "string",
          "example": true,
          "name": "tracking_support"
        }
      ],
      "required": null
    }
  ],
  "x-shopify-meta": {
    "channels": false,
    "file_name": "shipping-and-fulfillment/fulfillmentservice",
    "gid": "2b42ce79-84ca-4b2e-9ce4-6d98a423d553",
    "glossary": false,
    "hidden": false,
    "legacy-urls": [
      "/api/reference/fulfillmentservice",
      "/api/reference/shipping_and_fulfillment/fulfillmentservice",
      "/api/reference/shipping-and-fulfillment/unstable/fulfillmentserviceunstable"
    ],
    "meta_description": "Register a fulfillment service with a store. The merchant can then set it as the fulfillment service for their products, and your service can manage the fulfillment of those products using the Fulfillment and FulfillmentEvent APIs.",
    "postman_group": "Shipping and fulfillment",
    "keywords": [
      "api"
    ],
    "api_versioning": true,
    "shopify_plus": false,
    "weight": null,
    "usage-notes": null
  },
  "personal_data_fields": {}
}
{
  "openapi": "3.0.0",
  "info": {
    "title": "Gift Card",
    "description": "        <div class=\"note note-plus\">\n        <h4>Shopify Plus</h4>\n          <p>The Gift Card resource is available for <a href=\"/concepts/apps#private-apps\">private apps</a> installed on <strong><a href=\"https://help.shopify.com/en/manual/intro-to-shopify/pricing-plans/shopify-plus\">Shopify Plus</a></strong> stores. As of API version 2021-04, the Gift Card resource is also available for <a href=\"/concepts/apps#custom-apps\">custom apps</a> installed on Shopify Plus stores.</p>\n          <p>Your app must request the <code>write_gift_cards</code> and <code>read_gift_cards</code> <a href=\"/docs/admin-api/access-scopes\">access scopes</a>. Merchants that want to sell or issue gift cards also need to <a href=\"https://help.shopify.com/en/manual/products/gift-card-products/add-update-gift-card-products#activate-the-gift-card-feature\">activate the gift card feature</a> in the Shopify admin.</p>\n        </div>\n        <p>A gift card is an alternative payment method. Each gift card has a unique code that is entered during checkout.\n        Its balance can be redeemed over multiple checkouts. Optionally, a gift card can assigned to a specific customer.\n        Gift card codes cannot be retrieved after they're created&mdash;only the last four characters can be retrieved.</p>\n        <p>You can use the GiftCard resource to create, retrieve, and update gift cards for a store. After a gift card is\n        created, only the expiry date, note, and template suffix can be updated.</p>\n\n        <div class=\"note\">\n          <h4>Note</h4>\n          <p>You can't delete gift cards, but you can disable them. You can't enable gift cards that were previously\n           disabled.</p>\n        </div>\n\n",
    "x-owner": "https://vault.shopify.io/teams/13724",
    "x-description-list": null,
    "version": "2023-04"
  },
  "paths": [
    {
      "description": "Retrieves a list of gift cards. This endpoint implements pagination by using links that are provided in the response header. To learn more, see <a href=\"/api/usage/pagination-rest\"><em>Make paginated requests to the REST Admin API</em></a>.",
      "summary": "Retrieves a list of gift cards",
      "operationId": "Retrievesalistofgiftcards",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fields",
          "description": "Show only certain fields, specified by a comma-separated list of field names.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "description": "The maximum number of results to show.",
          "in": "query",
          "schema": {
            "type": "string",
            "default": 50,
            "maximum": 250
          }
        },
        {
          "name": "since_id",
          "description": "Restrict results to after the specified ID.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "status",
          "description": "Retrieve gift cards with a given status. Valid values:",
          "in": "query",
          "schema": {
            "type": "string"
          },
          "examples": {
            "enabled": {
              "summary": "Restrict results to only enabled gift cards",
              "value": "enabled"
            },
            "disabled": {
              "summary": "Restrict results to only disabled gift cards",
              "value": "disabled"
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieves a list of gift cards",
          "content": {
            "application/json": {
              "examples": {
                "Retrieve a list of all enabled gift cards": {
                  "value": {
                    "gift_cards": [
                      {
                        "id": 766118925,
                        "balance": "25.00",
                        "created_at": "2023-05-09T18:23:53-06:00",
                        "updated_at": "2023-05-09T18:23:53-06:00",
                        "currency": "USD",
                        "initial_value": "50.00",
                        "disabled_at": null,
                        "line_item_id": null,
                        "api_client_id": null,
                        "user_id": null,
                        "customer_id": null,
                        "note": null,
                        "expires_on": "2022-05-09",
                        "template_suffix": null,
                        "last_characters": "0e0e",
                        "order_id": null
                      },
                      {
                        "id": 10274553,
                        "balance": "0.00",
                        "created_at": "2023-05-09T18:23:53-06:00",
                        "updated_at": "2023-05-09T18:23:53-06:00",
                        "currency": "USD",
                        "initial_value": "50.00",
                        "disabled_at": null,
                        "line_item_id": null,
                        "api_client_id": null,
                        "user_id": null,
                        "customer_id": null,
                        "note": null,
                        "expires_on": null,
                        "template_suffix": null,
                        "last_characters": "0y0y",
                        "order_id": null
                      }
                    ]
                  }
                },
                "Retrieve a list of all gift cards": {
                  "value": {
                    "gift_cards": [
                      {
                        "id": 1035197676,
                        "balance": "100.00",
                        "created_at": "2023-05-09T18:23:53-06:00",
                        "updated_at": "2023-05-09T18:23:53-06:00",
                        "currency": "USD",
                        "initial_value": "100.00",
                        "disabled_at": null,
                        "line_item_id": null,
                        "api_client_id": null,
                        "user_id": null,
                        "customer_id": null,
                        "note": null,
                        "expires_on": null,
                        "template_suffix": null,
                        "last_characters": "0d0d",
                        "order_id": null
                      },
                      {
                        "id": 766118925,
                        "balance": "25.00",
                        "created_at": "2023-05-09T18:23:53-06:00",
                        "updated_at": "2023-05-09T18:23:53-06:00",
                        "currency": "USD",
                        "initial_value": "50.00",
                        "disabled_at": null,
                        "line_item_id": null,
                        "api_client_id": null,
                        "user_id": null,
                        "customer_id": null,
                        "note": null,
                        "expires_on": "2022-05-09",
                        "template_suffix": null,
                        "last_characters": "0e0e",
                        "order_id": null
                      },
                      {
                        "id": 10274553,
                        "balance": "0.00",
                        "created_at": "2023-05-09T18:23:53-06:00",
                        "updated_at": "2023-05-09T18:23:53-06:00",
                        "currency": "USD",
                        "initial_value": "50.00",
                        "disabled_at": null,
                        "line_item_id": null,
                        "api_client_id": null,
                        "user_id": null,
                        "customer_id": null,
                        "note": null,
                        "expires_on": null,
                        "template_suffix": null,
                        "last_characters": "0y0y",
                        "order_id": null
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "status=enabled",
          "request_path": "/admin/api/2023-04/gift_cards.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2019-10/gift_cards.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"gift_cards\":[{\"id\":766118925,\"balance\":\"25.00\",\"created_at\":\"2023-05-09T20:23:53-04:00\",\"updated_at\":\"2023-05-09T20:23:53-04:00\",\"currency\":\"USD\",\"initial_value\":\"50.00\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"customer_id\":null,\"note\":null,\"expires_on\":\"2022-05-09\",\"template_suffix\":null,\"last_characters\":\"0e0e\",\"order_id\":null},{\"id\":10274553,\"balance\":\"0.00\",\"created_at\":\"2023-05-09T20:23:53-04:00\",\"updated_at\":\"2023-05-09T20:23:53-04:00\",\"currency\":\"USD\",\"initial_value\":\"50.00\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"customer_id\":null,\"note\":null,\"expires_on\":null,\"template_suffix\":null,\"last_characters\":\"0y0y\",\"order_id\":null}]}"
          },
          "name": "Retrieve a list of all enabled gift cards",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards.json?status=enabled\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::GiftCard.all(\n  session: test_session,\n  status: \"enabled\",\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.GiftCard.all({\n  session: session,\n  status: \"enabled\",\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nGiftCard::all(\n    $this->test_session, // Session\n    [], // Url Ids\n    [\"status\" => \"enabled\"], // Params\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/gift_cards.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2019-10/gift_cards.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"gift_cards\":[{\"id\":1035197676,\"balance\":\"100.00\",\"created_at\":\"2023-05-09T20:23:53-04:00\",\"updated_at\":\"2023-05-09T20:23:53-04:00\",\"currency\":\"USD\",\"initial_value\":\"100.00\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"customer_id\":null,\"note\":null,\"expires_on\":null,\"template_suffix\":null,\"last_characters\":\"0d0d\",\"order_id\":null},{\"id\":766118925,\"balance\":\"25.00\",\"created_at\":\"2023-05-09T20:23:53-04:00\",\"updated_at\":\"2023-05-09T20:23:53-04:00\",\"currency\":\"USD\",\"initial_value\":\"50.00\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"customer_id\":null,\"note\":null,\"expires_on\":\"2022-05-09\",\"template_suffix\":null,\"last_characters\":\"0e0e\",\"order_id\":null},{\"id\":10274553,\"balance\":\"0.00\",\"created_at\":\"2023-05-09T20:23:53-04:00\",\"updated_at\":\"2023-05-09T20:23:53-04:00\",\"currency\":\"USD\",\"initial_value\":\"50.00\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"customer_id\":null,\"note\":null,\"expires_on\":null,\"template_suffix\":null,\"last_characters\":\"0y0y\",\"order_id\":null}]}"
          },
          "name": "Retrieve a list of all gift cards",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::GiftCard.all(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.GiftCard.all({\n  session: session,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nGiftCard::all(\n    $this->test_session, // Session\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "gift_cards"
          }
        ]
      },
      "url": "/admin/api/{api_version}/gift_cards.json?status=enabled",
      "action": "get"
    },
    {
      "description": "Retrieves a single gift card by its ID",
      "summary": "Retrieves a single gift card",
      "operationId": "Retrievesasinglegiftcard",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "gift_card_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieves a single gift card",
          "content": {
            "application/json": {
              "examples": {
                "Retrieve a single gift card": {
                  "value": {
                    "gift_card": {
                      "id": 1035197676,
                      "balance": "100.00",
                      "created_at": "2023-05-09T18:23:53-06:00",
                      "updated_at": "2023-05-09T18:23:53-06:00",
                      "currency": "USD",
                      "initial_value": "100.00",
                      "disabled_at": null,
                      "line_item_id": null,
                      "api_client_id": null,
                      "user_id": null,
                      "customer_id": null,
                      "note": null,
                      "expires_on": null,
                      "template_suffix": null,
                      "last_characters": "0d0d",
                      "order_id": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/gift_cards/1035197676.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/unstable/gift_cards/1035197676.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"gift_card\":{\"id\":1035197676,\"balance\":\"100.00\",\"created_at\":\"2023-05-09T20:23:53-04:00\",\"updated_at\":\"2023-05-09T20:23:53-04:00\",\"currency\":\"USD\",\"initial_value\":\"100.00\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"customer_id\":null,\"note\":null,\"expires_on\":null,\"template_suffix\":null,\"last_characters\":\"0d0d\",\"order_id\":null}}"
          },
          "name": "Retrieve a single gift card",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards/1035197676.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::GiftCard.find(\n  session: test_session,\n  id: 1035197676,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.GiftCard.find({\n  session: session,\n  id: 1035197676,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nGiftCard::find(\n    $this->test_session, // Session\n    1035197676, // Id\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "gift_cards"
          }
        ]
      },
      "url": "/admin/api/{api_version}/gift_cards/{gift_card_id}.json",
      "action": "get"
    },
    {
      "description": "<p>Updates an existing gift card.</p>\n          <p>Only the expiry date, note, and template suffix properties of a gift card can be changed via the API.</p>",
      "summary": "Updates an existing gift card",
      "operationId": "Updatesanexistinggiftcard",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "gift_card_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Updates an existing gift card",
          "content": {
            "application/json": {
              "examples": {
                "Update the expiry date of a gift card": {
                  "value": {
                    "gift_card": {
                      "expires_on": "2020-01-01",
                      "template_suffix": null,
                      "initial_value": "100.00",
                      "balance": "100.00",
                      "customer_id": null,
                      "id": 1035197676,
                      "created_at": "2023-05-09T18:23:53-06:00",
                      "updated_at": "2023-05-09T18:26:29-06:00",
                      "currency": "USD",
                      "disabled_at": null,
                      "line_item_id": null,
                      "api_client_id": null,
                      "user_id": null,
                      "note": null,
                      "last_characters": "0d0d",
                      "order_id": null
                    }
                  }
                },
                "Update the note of a gift card": {
                  "value": {
                    "gift_card": {
                      "note": "Updating with a new note",
                      "template_suffix": null,
                      "initial_value": "100.00",
                      "balance": "100.00",
                      "customer_id": null,
                      "id": 1035197676,
                      "created_at": "2023-05-09T18:23:53-06:00",
                      "updated_at": "2023-05-09T18:26:49-06:00",
                      "currency": "USD",
                      "disabled_at": null,
                      "line_item_id": null,
                      "api_client_id": null,
                      "user_id": null,
                      "expires_on": null,
                      "last_characters": "0d0d",
                      "order_id": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/gift_cards/1035197676.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/unstable/gift_cards/1035197676.json",
            "headers": {},
            "body": "{\"gift_card\":{\"id\":1035197676,\"expires_on\":\"2020-01-01\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"gift_card\":{\"expires_on\":\"2020-01-01\",\"template_suffix\":null,\"initial_value\":\"100.00\",\"balance\":\"100.00\",\"customer_id\":null,\"id\":1035197676,\"created_at\":\"2023-05-09T20:23:53-04:00\",\"updated_at\":\"2023-05-09T20:26:29-04:00\",\"currency\":\"USD\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"note\":null,\"last_characters\":\"0d0d\",\"order_id\":null}}"
          },
          "name": "Update the expiry date of a gift card",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"gift_card\":{\"id\":1035197676,\"expires_on\":\"2020-01-01\"}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards/1035197676.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\ngift_card = ShopifyAPI::GiftCard.new(session: test_session)\ngift_card.id = 1035197676\ngift_card.expires_on = \"2020-01-01\"\ngift_card.save!"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst gift_card = new shopify.rest.GiftCard({session: session});\ngift_card.id = 1035197676;\ngift_card.expires_on = \"2020-01-01\";\nawait gift_card.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$gift_card = new GiftCard($this->test_session);\n$gift_card->id = 1035197676;\n$gift_card->expires_on = \"2020-01-01\";\n$gift_card->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/gift_cards/1035197676.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/unstable/gift_cards/1035197676.json",
            "headers": {},
            "body": "{\"gift_card\":{\"id\":1035197676,\"note\":\"Updating with a new note\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"gift_card\":{\"note\":\"Updating with a new note\",\"template_suffix\":null,\"initial_value\":\"100.00\",\"balance\":\"100.00\",\"customer_id\":null,\"id\":1035197676,\"created_at\":\"2023-05-09T20:23:53-04:00\",\"updated_at\":\"2023-05-09T20:26:49-04:00\",\"currency\":\"USD\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"expires_on\":null,\"last_characters\":\"0d0d\",\"order_id\":null}}"
          },
          "name": "Update the note of a gift card",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"gift_card\":{\"id\":1035197676,\"note\":\"Updating with a new note\"}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards/1035197676.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\ngift_card = ShopifyAPI::GiftCard.new(session: test_session)\ngift_card.id = 1035197676\ngift_card.note = \"Updating with a new note\"\ngift_card.save!"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst gift_card = new shopify.rest.GiftCard({session: session});\ngift_card.id = 1035197676;\ngift_card.note = \"Updating with a new note\";\nawait gift_card.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$gift_card = new GiftCard($this->test_session);\n$gift_card->id = 1035197676;\n$gift_card->note = \"Updating with a new note\";\n$gift_card->save(\n    true, // Update Object\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "gift_cards"
          }
        ]
      },
      "url": "/admin/api/{api_version}/gift_cards/{gift_card_id}.json",
      "action": "put"
    },
    {
      "description": "Retrieves a count of gift cards with a given status.",
      "summary": "Retrieves a count of gift cards",
      "operationId": "Retrievesacountofgiftcards",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "status",
          "description": "Count gift cards with a given status. Valid values:",
          "in": "query",
          "schema": {
            "type": "string"
          },
          "examples": {
            "enabled": {
              "summary": "Count only enabled gift cards",
              "value": "enabled"
            },
            "disabled": {
              "summary": "Count only disabled gift cards",
              "value": "disabled"
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieves a count of gift cards",
          "content": {
            "application/json": {
              "examples": {
                "Retrieve a count of all gift cards": {
                  "value": {
                    "count": 3
                  }
                },
                "Retrieve a count of enabled gift cards": {
                  "value": {
                    "count": 3
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2023-04/gift_cards/count.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/unstable/gift_cards/count.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"count\":3}"
          },
          "name": "Retrieve a count of all gift cards",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards/count.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::GiftCard.count(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.GiftCard.count({\n  session: session,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nGiftCard::count(\n    $this->test_session, // Session\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "status=enabled",
          "request_path": "/admin/api/2023-04/gift_cards/count.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/unstable/gift_cards/count.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"count\":3}"
          },
          "name": "Retrieve a count of enabled gift cards",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards/count.json?status=enabled\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::GiftCard.count(\n  session: test_session,\n  status: \"enabled\",\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.GiftCard.count({\n  session: session,\n  status: \"enabled\",\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nGiftCard::count(\n    $this->test_session, // Session\n    [], // Url Ids\n    [\"status\" => \"enabled\"], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "gift_cards"
          }
        ]
      },
      "url": "/admin/api/{api_version}/gift_cards/count.json",
      "action": "get"
    },
    {
      "description": "Creates a gift card",
      "summary": "Creates a gift card",
      "operationId": "Createsagiftcard",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "201": {
          "description": "Creates a gift card",
          "content": {
            "application/json": {
              "examples": {
                "Create a gift card with a custom code": {
                  "value": {
                    "gift_card": {
                      "id": 1063936318,
                      "balance": "100.00",
                      "created_at": "2023-05-09T18:26:39-06:00",
                      "updated_at": "2023-05-09T18:26:39-06:00",
                      "currency": "USD",
                      "initial_value": "100.00",
                      "disabled_at": null,
                      "line_item_id": null,
                      "api_client_id": 755357713,
                      "user_id": null,
                      "customer_id": null,
                      "note": "This is a note",
                      "expires_on": null,
                      "template_suffix": "gift_cards.birthday.liquid",
                      "last_characters": "mnop",
                      "order_id": null,
                      "code": "abcdefghijklmnop"
                    }
                  }
                },
                "Create a gift card with an automatically generated code": {
                  "value": {
                    "gift_card": {
                      "id": 1063936316,
                      "balance": "25.00",
                      "created_at": "2023-05-09T18:26:31-06:00",
                      "updated_at": "2023-05-09T18:26:31-06:00",
                      "currency": "USD",
                      "initial_value": "25.00",
                      "disabled_at": null,
                      "line_item_id": null,
                      "api_client_id": 755357713,
                      "user_id": null,
                      "customer_id": null,
                      "note": null,
                      "expires_on": null,
                      "template_suffix": null,
                      "last_characters": "32ed",
                      "order_id": null,
                      "code": "he9bdc83784g32ed"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "201",
          "request_query": "",
          "request_path": "/admin/api/2023-04/gift_cards.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/unstable/gift_cards.json",
            "headers": {},
            "body": "{\"gift_card\":{\"note\":\"This is a note\",\"initial_value\":\"100.00\",\"code\":\"ABCD EFGH IJKL MNOP\",\"template_suffix\":\"gift_cards.birthday.liquid\"}}"
          },
          "response": {
            "action": "HTTP/1.1 201 Created",
            "headers": {},
            "body": "{\"gift_card\":{\"id\":1063936318,\"balance\":\"100.00\",\"created_at\":\"2023-05-09T20:26:39-04:00\",\"updated_at\":\"2023-05-09T20:26:39-04:00\",\"currency\":\"USD\",\"initial_value\":\"100.00\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":755357713,\"user_id\":null,\"customer_id\":null,\"note\":\"This is a note\",\"expires_on\":null,\"template_suffix\":\"gift_cards.birthday.liquid\",\"last_characters\":\"mnop\",\"order_id\":null,\"code\":\"abcdefghijklmnop\"}}"
          },
          "name": "Create a gift card with a custom code",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"gift_card\":{\"note\":\"This is a note\",\"initial_value\":\"100.00\",\"code\":\"ABCD EFGH IJKL MNOP\",\"template_suffix\":\"gift_cards.birthday.liquid\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\ngift_card = ShopifyAPI::GiftCard.new(session: test_session)\ngift_card.note = \"This is a note\"\ngift_card.initial_value = \"100.00\"\ngift_card.code = \"ABCD EFGH IJKL MNOP\"\ngift_card.template_suffix = \"gift_cards.birthday.liquid\"\ngift_card.save!"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst gift_card = new shopify.rest.GiftCard({session: session});\ngift_card.note = \"This is a note\";\ngift_card.initial_value = \"100.00\";\ngift_card.code = \"ABCD EFGH IJKL MNOP\";\ngift_card.template_suffix = \"gift_cards.birthday.liquid\";\nawait gift_card.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$gift_card = new GiftCard($this->test_session);\n$gift_card->note = \"This is a note\";\n$gift_card->initial_value = \"100.00\";\n$gift_card->code = \"ABCD EFGH IJKL MNOP\";\n$gift_card->template_suffix = \"gift_cards.birthday.liquid\";\n$gift_card->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "201",
          "request_query": "",
          "request_path": "/admin/api/2023-04/gift_cards.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/unstable/gift_cards.json",
            "headers": {},
            "body": "{\"gift_card\":{\"initial_value\":\"25.00\"}}"
          },
          "response": {
            "action": "HTTP/1.1 201 Created",
            "headers": {},
            "body": "{\"gift_card\":{\"id\":1063936316,\"balance\":\"25.00\",\"created_at\":\"2023-05-09T20:26:31-04:00\",\"updated_at\":\"2023-05-09T20:26:31-04:00\",\"currency\":\"USD\",\"initial_value\":\"25.00\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":755357713,\"user_id\":null,\"customer_id\":null,\"note\":null,\"expires_on\":null,\"template_suffix\":null,\"last_characters\":\"32ed\",\"order_id\":null,\"code\":\"he9bdc83784g32ed\"}}"
          },
          "name": "Create a gift card with an automatically generated code",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"gift_card\":{\"initial_value\":\"25.00\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\ngift_card = ShopifyAPI::GiftCard.new(session: test_session)\ngift_card.initial_value = \"25.00\"\ngift_card.save!"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst gift_card = new shopify.rest.GiftCard({session: session});\ngift_card.initial_value = \"25.00\";\nawait gift_card.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$gift_card = new GiftCard($this->test_session);\n$gift_card->initial_value = \"25.00\";\n$gift_card->save(\n    true, // Update Object\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "gift_cards"
          }
        ]
      },
      "url": "/admin/api/{api_version}/gift_cards.json",
      "action": "post"
    },
    {
      "description": "Disables a gift card. This action can't be undone.",
      "summary": "Disables a gift card",
      "operationId": "Disablesagiftcard",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "gift_card_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "201": {
          "description": "Disables a gift card",
          "content": {
            "application/json": {
              "examples": {
                "Disable a gift card": {
                  "value": {
                    "gift_card": {
                      "disabled_at": "2023-05-09T18:26:52-06:00",
                      "template_suffix": null,
                      "initial_value": "100.00",
                      "balance": "100.00",
                      "customer_id": null,
                      "id": 1035197676,
                      "created_at": "2023-05-09T18:23:53-06:00",
                      "updated_at": "2023-05-09T18:26:52-06:00",
                      "currency": "USD",
                      "line_item_id": null,
                      "api_client_id": null,
                      "user_id": null,
                      "note": null,
                      "expires_on": null,
                      "last_characters": "0d0d",
                      "order_id": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "201",
          "request_query": "",
          "request_path": "/admin/api/2023-04/gift_cards/1035197676/disable.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/unstable/gift_cards/1035197676/disable.json",
            "headers": {},
            "body": "{\"gift_card\":{\"id\":1035197676}}"
          },
          "response": {
            "action": "HTTP/1.1 201 Created",
            "headers": {},
            "body": "{\"gift_card\":{\"disabled_at\":\"2023-05-09T20:26:52-04:00\",\"template_suffix\":null,\"initial_value\":\"100.00\",\"balance\":\"100.00\",\"customer_id\":null,\"id\":1035197676,\"created_at\":\"2023-05-09T20:23:53-04:00\",\"updated_at\":\"2023-05-09T20:26:52-04:00\",\"currency\":\"USD\",\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"note\":null,\"expires_on\":null,\"last_characters\":\"0d0d\",\"order_id\":null}}"
          },
          "name": "Disable a gift card",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"gift_card\":{\"id\":1035197676}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards/1035197676/disable.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\ngift_card = ShopifyAPI::GiftCard.new(session: test_session)\ngift_card.id = 1035197676\ngift_card.disable(\n  session: test_session,\n  body: {\"gift_card\" => {\"id\" => 1035197676}},\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nconst gift_card = new shopify.rest.GiftCard({session: session});\ngift_card.id = 1035197676;\nawait gift_card.disable({\n  body: {\"gift_card\": {\"id\": 1035197676}},\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$gift_card = new GiftCard($this->test_session);\n$gift_card->id = 1035197676;\n$gift_card->disable(\n    [], // Params\n    [\"gift_card\" => [\"id\" => 1035197676]], // Body\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "gift_cards"
          }
        ]
      },
      "url": "/admin/api/{api_version}/gift_cards/{gift_card_id}/disable.json",
      "action": "post"
    },
    {
      "description": "<p>Searches for gift cards that match a supplied query. The following fields are indexed by search:</p>\n          <ul>\n            <li><code>created_at</code></li>\n            <li><code>updated_at</code></li>\n            <li><code>disabled_at</code></li>\n            <li><code>balance</code></li>\n            <li><code>initial_value</code></li>\n            <li><code>amount_spent</code></li>\n            <li><code>email</code></li>\n            <li><code>last_characters</code></li>\n          </ul>\n          <p>This endpoint implements pagination by using links that are provided in the response header. To learn more, see <a href=\"/api/usage/pagination-rest\"><em>Make paginated requests to the REST Admin API</em></a>.</p>",
      "summary": "Searches for gift cards",
      "operationId": "Searchesforgiftcards",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "created_at_max",
          "description": "Show gift cards created at or before date.",
          "in": "query",
          "schema": {
            "type": "date",
            "format": "ISO_8601"
          }
        },
        {
          "name": "created_at_min",
          "description": "Show gift cards created at or after date.",
          "in": "query",
          "schema": {
            "type": "date",
            "format": "ISO_8601"
          }
        },
        {
          "name": "fields",
          "description": "Show only certain fields, specified by a comma-separated list of field names.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "limit",
          "description": "The maximum number of results to retrieve.",
          "in": "query",
          "schema": {
            "type": "string",
            "default": 50,
            "maximum": 250
          }
        },
        {
          "name": "order",
          "description": "The field and direction to order results by.",
          "in": "query",
          "schema": {
            "type": "string",
            "default": "disabled_at DESC"
          }
        },
        {
          "name": "query",
          "description": "The text to search for.",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "updated_at_max",
          "description": "Show gift cards last updated at or before date.",
          "in": "query",
          "schema": {
            "type": "date",
            "format": "ISO_8601"
          }
        },
        {
          "name": "updated_at_min",
          "description": "Show gift cards last updated at or after date.",
          "in": "query",
          "schema": {
            "type": "date",
            "format": "ISO_8601"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Searches for gift cards",
          "content": {
            "application/json": {
              "examples": {
                "Retrieve all gift cards with the last characters \"mnop\"": {
                  "value": {
                    "gift_cards": [
                      {
                        "id": 1063936317,
                        "balance": "10.00",
                        "created_at": "2023-05-09T18:26:33-06:00",
                        "updated_at": "2023-05-09T18:26:33-06:00",
                        "currency": "USD",
                        "initial_value": "10.00",
                        "disabled_at": null,
                        "line_item_id": null,
                        "api_client_id": null,
                        "user_id": null,
                        "customer_id": null,
                        "note": null,
                        "expires_on": null,
                        "template_suffix": null,
                        "last_characters": "mnop",
                        "order_id": null
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "query=last_characters%3Amnop",
          "request_path": "/admin/api/2023-04/gift_cards/search.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2019-10/gift_cards/search.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"gift_cards\":[{\"id\":1063936317,\"balance\":\"10.00\",\"created_at\":\"2023-05-09T20:26:33-04:00\",\"updated_at\":\"2023-05-09T20:26:33-04:00\",\"currency\":\"USD\",\"initial_value\":\"10.00\",\"disabled_at\":null,\"line_item_id\":null,\"api_client_id\":null,\"user_id\":null,\"customer_id\":null,\"note\":null,\"expires_on\":null,\"template_suffix\":null,\"last_characters\":\"mnop\",\"order_id\":null}]}"
          },
          "name": "Retrieve all gift cards with the last characters \"mnop\"",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2023-04/gift_cards/search.json?query=last_characters%3Amnop\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n)\n\nShopifyAPI::GiftCard.search(\n  session: test_session,\n  query: \"last_characters:mnop\",\n)"
            },
            {
              "language": "node",
              "example_code": "// Session is built by the OAuth process\n\nawait shopify.rest.GiftCard.search({\n  session: session,\n  query: \"last_characters:mnop\",\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2023_04\\GiftCard;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nGiftCard::search(\n    $this->test_session, // Session\n    [], // Url Ids\n    [\"query\" => \"last_characters:mnop\"], // Params\n);"
            }
          ]
        }
      ],
      "x-api-accessibilities": {
        "initial": [
          {
            "scope": "gift_cards"
          }
        ]
      },
      "url": "/admin/api/{api_version}/gift_cards/search.json?query=last_characters:mnop",
      "action": "get"
    }
  ],
  "components": [
    {
      "name": "GiftCard",
      "title": "Gift Card",
      "type": "object",
      "properties": [
        {
          "description": "The ID of the client that issued the gift card.",
          "type": "string",
          "example": 431223487,
          "name": "api_client_id"
        },
        {
          "description": "The balance of the gift card.",
          "type": "string",
          "example": "80.17",
          "name": "balance"
        },
        {
          "description": "The gift card code, which is a string of alphanumeric characters. For security reasons, this is available only upon creation of the gift card. (minimum: 8 characters, maximum: 20 characters)",
          "type": "string",
          "example": "1234 4567 8901 2ABC",
          "name": "code"
        },
        {
          "description": "The date and time (<a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> format) when the gift card was created.",
          "type": "string",
          "example": "2008-12-31T17:00:00-07:00",
          "name": "created_at"
        },
        {
          "description": "The currency of the gift card.",
          "type": "string",
          "example": "CAD",
          "name": "currency"
        },
        {
          "description": "The ID of the customer associated with this gift card.",
          "type": "string",
          "example": {
            "customer_id": 368407052327
          },
          "name": "customer_id"
        },
        {
          "description": "The date and time (<a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> format) when the gift card was disabled.",
          "type": "string",
          "example": "2009-01-31T17:00:00-07:00",
          "name": "disabled_at"
        },
        {
          "description": "The date (<code>YYYY-MM-DD</code> format) when the gift card expires. Returns <code>null</code> if the gift card doesn't have an expiration date.",
          "type": "string",
          "example": "2020-01-31",
          "name": "expires_on"
        },
        {
          "description": "The ID of the gift card.",
          "type": "string",
          "example": 989034056,
          "name": "id"
        },
        {
          "description": "The initial value of the gift card when it was created.",
          "type": "string",
          "example": "100.00",
          "name": "initial_value"
        },
        {
          "description": "The last four characters of the gift card code. Because gift cards are alternative payment methods, the full code cannot be retrieved.",
          "type": "string",
          "example": "2ABC",
          "name": "last_characters"
        },
        {
          "description": "The ID of the line item that initiated the creation of this gift card, if it was created by an order.",
          "type": "string",
          "example": 241253183,
          "name": "line_item_id"
        },
        {
          "description": "An optional note that a merchant can attach to the gift card that isn't visible to customers.",
          "type": "string",
          "example": "A note",
          "name": "note"
        },
        {
          "description": "The ID of the order that initiated the creation of this gift card, if it was created by an order.",
          "type": "string",
          "example": 241253183,
          "name": "order_id"
        },
        {
          "description": "          The suffix of the Liquid template that's used to render the gift card online. For example, if the value is <code>birthday</code>,\n          then the gift card is rendered using the template <code>gift_card.birthday.liquid</code>. When the value is <code>null</code>,\n          the default <code>gift_card.liquid</code> template is used.\n",
          "type": "string",
          "example": "birthday",
          "name": "template_suffix"
        },
        {
          "description": "The ID of the user that issued the gift card, if it was issued by a user.",
          "type": "string",
          "example": 241253183,
          "name": "user_id"
        },
        {
          "description": "The date and time (<a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> format) when the gift card was last modified.",
          "type": "string",
          "example": "2009-01-31T17:00:00-07:00",
          "name": "updated_at"
        }
      ],
      "required": null
    }
  ],
  "x-shopify-meta": {
    "channels": false,
    "file_name": "plus/giftcard",
    "gid": "726e3aa0-22e9-4a26-b5d2-d7de45f0dc80",
    "glossary": false,
    "hidden": false,
    "legacy-urls": [
      "/api/reference/gift_card"
    ],
    "meta_description": "Create and manage gift card codes, which can be entered at checkout to pay using a gift card.",
    "postman_group": "Plus",
    "keywords": [
      "api"
    ],
    "api_versioning": true,
    "shopify_plus": true,
    "weight": null,
    "usage-notes": null
  },
  "personal_data_fields": {}
}
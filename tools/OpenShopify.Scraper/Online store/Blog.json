{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog",
    "description": "        <p>In addition to an online storefront, Shopify shops come with a built-in blogging engine, allowing a shop to have one or more blogs.</p>\n\n        {{ '/api/reference/blog.png' | image }}\n\n        <p>Shop owners are encouraged to use blogs to:</p>\n        <ul>\n          <li>Make announcements</li>\n          <li>Talk about their products in more detail</li>\n          <li>Show off their expertise</li>\n          <li>Connect with their customers and</li>\n          <li>Boost their shop's search engine rankings</li>\n        </ul>\n\n        <p>Shopify [blogs](/apps/auth/oauth) are like most other blogs: a content management system for articles posted in reverse chronological order. Articles can be posted under one or more user-defined categories and tagged with one or more user-defined tags, with an option to allow readers to post comments to articles. An Atom feed is automatically generated for each blog, allowing for syndication. The search functionality built into every shop also searches the text in blog articles.</p>\n\n        <p>Blogs are meant to be used as a type of magazine or newsletter for the shop, with content that changes over time. If your shop needs a static page (such as an \"About Us\" page), we recommend that you use a Page instead.</p>\n\n        <p>Also see the <a href=\"/docs/admin-api/rest/reference/online-store/article\">Article resource</a> for managing blog articles.</p>\n",
    "x-owner": "https://vault.shopify.io/teams/469",
    "x-description-list": null,
    "version": "2022-04"
  },
  "paths": [
    {
      "description": "Retrieve a list of all blogs. <strong>Note:</strong> As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the <code>page</code> parameter will return an error. To learn more, see <a href=\"/tutorials/make-paginated-requests-to-rest-admin-api\"><em>Making requests to paginated REST Admin API endpoints</em></a>.",
      "summary": "Retrieve a list of all blogs",
      "operationId": "Retrievealistofallblogs",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fields",
          "description": "comma-separated list of fields to include in the response",
          "in": "query",
          "schema": {
            "type": "x-string"
          }
        },
        {
          "name": "handle",
          "description": "Filter by blog handle",
          "in": "query",
          "schema": {
            "type": "x-string"
          }
        },
        {
          "name": "limit",
          "description": "The maximum number of results to retrieve.",
          "in": "query",
          "schema": {
            "type": "x-string",
            "default": 50,
            "maximum": 250
          }
        },
        {
          "name": "since_id",
          "description": "Restrict results to after the specified ID",
          "in": "query",
          "schema": {
            "type": "x-string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieve a list of all blogs",
          "content": {
            "application/json": {
              "examples": {
                "Get all blogs for a shop": {
                  "value": {
                    "blogs": [
                      {
                        "id": 382285388,
                        "handle": "banana-blog",
                        "title": "A Gnu Blog",
                        "updated_at": "2006-02-02T17:00:00-07:00",
                        "commentable": "no",
                        "feedburner": null,
                        "feedburner_location": null,
                        "created_at": "2022-04-05T10:51:55-06:00",
                        "template_suffix": null,
                        "tags": "",
                        "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/382285388"
                      },
                      {
                        "id": 241253187,
                        "handle": "apple-blog",
                        "title": "Mah Blog",
                        "updated_at": "2006-02-01T17:00:00-07:00",
                        "commentable": "no",
                        "feedburner": null,
                        "feedburner_location": null,
                        "created_at": "2022-04-05T10:51:55-06:00",
                        "template_suffix": null,
                        "tags": "Announcing, Mystery",
                        "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/241253187"
                      }
                    ]
                  }
                },
                "Get all blogs for a shop after a specified ID": {
                  "value": {
                    "blogs": [
                      {
                        "id": 382285388,
                        "handle": "banana-blog",
                        "title": "A Gnu Blog",
                        "updated_at": "2006-02-02T17:00:00-07:00",
                        "commentable": "no",
                        "feedburner": null,
                        "feedburner_location": null,
                        "created_at": "2022-04-05T10:51:55-06:00",
                        "template_suffix": null,
                        "tags": "",
                        "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/382285388"
                      },
                      {
                        "id": 1008414249,
                        "handle": "apple-main-blog",
                        "title": "Apple main blog",
                        "updated_at": "2022-04-05T10:53:55-06:00",
                        "commentable": "no",
                        "feedburner": null,
                        "feedburner_location": null,
                        "created_at": "2022-04-05T10:53:55-06:00",
                        "template_suffix": null,
                        "tags": "",
                        "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/1008414249"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2019-10/blogs.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"blogs\":[{\"id\":382285388,\"handle\":\"banana-blog\",\"title\":\"A Gnu Blog\",\"updated_at\":\"2006-02-02T19:00:00-05:00\",\"commentable\":\"no\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:51:55-04:00\",\"template_suffix\":null,\"tags\":\"\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/382285388\"},{\"id\":241253187,\"handle\":\"apple-blog\",\"title\":\"Mah Blog\",\"updated_at\":\"2006-02-01T19:00:00-05:00\",\"commentable\":\"no\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:51:55-04:00\",\"template_suffix\":null,\"tags\":\"Announcing, Mystery\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/241253187\"}]}"
          },
          "name": "Get all blogs for a shop",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Blog.all(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Blog.all({\n  session: test_session,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nBlog::all(\n    $this->test_session, // Session\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "since_id=241253187",
          "request_path": "/admin/api/2022-04/blogs.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/2019-10/blogs.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"blogs\":[{\"id\":382285388,\"handle\":\"banana-blog\",\"title\":\"A Gnu Blog\",\"updated_at\":\"2006-02-02T19:00:00-05:00\",\"commentable\":\"no\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:51:55-04:00\",\"template_suffix\":null,\"tags\":\"\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/382285388\"},{\"id\":1008414249,\"handle\":\"apple-main-blog\",\"title\":\"Apple main blog\",\"updated_at\":\"2022-04-05T12:53:55-04:00\",\"commentable\":\"no\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:53:55-04:00\",\"template_suffix\":null,\"tags\":\"\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/1008414249\"}]}"
          },
          "name": "Get all blogs for a shop after a specified ID",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs.json?since_id=241253187\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Blog.all(\n  session: test_session,\n  since_id: \"241253187\",\n)"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Blog.all({\n  session: test_session,\n  since_id: \"241253187\",\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nBlog::all(\n    $this->test_session, // Session\n    [], // Url Ids\n    [\"since_id\" => \"241253187\"], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/#{api_version}/blogs.json",
      "action": "get"
    },
    {
      "description": "Create a new blog",
      "summary": "Create a new Blog",
      "operationId": "CreateanewBlog",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "title",
          "description": "The title of the blog. Maximum length: 255 characters.",
          "in": "query",
          "schema": {
            "type": "x-string"
          },
          "required": true
        }
      ],
      "responses": {
        "201": {
          "description": "Create a new Blog",
          "content": {
            "application/json": {
              "examples": {
                "Create a new empty blog": {
                  "value": {
                    "blog": {
                      "id": 1008414252,
                      "handle": "apple-main-blog",
                      "title": "Apple main blog",
                      "updated_at": "2022-04-05T10:54:03-06:00",
                      "commentable": "no",
                      "feedburner": null,
                      "feedburner_location": null,
                      "created_at": "2022-04-05T10:54:03-06:00",
                      "template_suffix": null,
                      "tags": "",
                      "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/1008414252"
                    }
                  }
                },
                "Create a new empty blog with a metafield": {
                  "value": {
                    "blog": {
                      "id": 1008414253,
                      "handle": "apple-main-blog",
                      "title": "Apple main blog",
                      "updated_at": "2022-04-05T10:54:05-06:00",
                      "commentable": "no",
                      "feedburner": null,
                      "feedburner_location": null,
                      "created_at": "2022-04-05T10:54:05-06:00",
                      "template_suffix": null,
                      "tags": "",
                      "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/1008414253"
                    }
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Create a new Blog",
          "content": {
            "application/json": {
              "examples": {
                "Trying to create a blog without a title will return an error": {
                  "value": {
                    "errors": {
                      "title": [
                        "can't be blank"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "201",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-07/blogs.json",
            "headers": {},
            "body": "{\"blog\":{\"title\":\"Apple main blog\"}}"
          },
          "response": {
            "action": "HTTP/1.1 201 Created",
            "headers": {},
            "body": "{\"blog\":{\"id\":1008414252,\"handle\":\"apple-main-blog\",\"title\":\"Apple main blog\",\"updated_at\":\"2022-04-05T12:54:03-04:00\",\"commentable\":\"no\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:54:03-04:00\",\"template_suffix\":null,\"tags\":\"\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/1008414252\"}}"
          },
          "name": "Create a new empty blog",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"blog\":{\"title\":\"Apple main blog\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nblog = ShopifyAPI::Blog.new(session: test_session)\nblog.title = \"Apple main blog\"\nblog.save()"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst blog = new Blog({session: test_session});\nblog.title = \"Apple main blog\";\nawait blog.save({});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$blog = new Blog($this->test_session);\n$blog->title = \"Apple main blog\";\n$blog->save();"
            }
          ]
        },
        {
          "status": "422",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-07/blogs.json",
            "headers": {},
            "body": "{\"blog\":{\"body\":\"foobar\"}}"
          },
          "response": {
            "action": "HTTP/1.1 422 Unprocessable Entity",
            "headers": {},
            "body": "{\"errors\":{\"title\":[\"can't be blank\"]}}"
          },
          "name": "Trying to create a blog without a title will return an error",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"blog\":{\"body\":\"foobar\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nblog = ShopifyAPI::Blog.new(session: test_session)\nblog.body = \"foobar\"\nblog.save()"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst blog = new Blog({session: test_session});\nblog.body = \"foobar\";\nawait blog.save({});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$blog = new Blog($this->test_session);\n$blog->body = \"foobar\";\n$blog->save();"
            }
          ]
        },
        {
          "status": "201",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/2021-07/blogs.json",
            "headers": {},
            "body": "{\"blog\":{\"title\":\"Apple main blog\",\"metafields\":[{\"key\":\"sponsor\",\"value\":\"Shopify\",\"type\":\"single_line_text_field\",\"namespace\":\"global\"}]}}"
          },
          "response": {
            "action": "HTTP/1.1 201 Created",
            "headers": {},
            "body": "{\"blog\":{\"id\":1008414253,\"handle\":\"apple-main-blog\",\"title\":\"Apple main blog\",\"updated_at\":\"2022-04-05T12:54:05-04:00\",\"commentable\":\"no\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:54:05-04:00\",\"template_suffix\":null,\"tags\":\"\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/1008414253\"}}"
          },
          "name": "Create a new empty blog with a metafield",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"blog\":{\"title\":\"Apple main blog\",\"metafields\":[{\"key\":\"sponsor\",\"value\":\"Shopify\",\"type\":\"single_line_text_field\",\"namespace\":\"global\"}]}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nblog = ShopifyAPI::Blog.new(session: test_session)\nblog.title = \"Apple main blog\"\nblog.metafields = [\n  {\n    \"key\" => \"sponsor\",\n    \"value\" => \"Shopify\",\n    \"type\" => \"single_line_text_field\",\n    \"namespace\" => \"global\"\n  }\n]\nblog.save()"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst blog = new Blog({session: test_session});\nblog.title = \"Apple main blog\";\nblog.metafields = [\n  {\n    \"key\": \"sponsor\",\n    \"value\": \"Shopify\",\n    \"type\": \"single_line_text_field\",\n    \"namespace\": \"global\"\n  }\n];\nawait blog.save({});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$blog = new Blog($this->test_session);\n$blog->title = \"Apple main blog\";\n$blog->metafields = [\n    [\n        \"key\" => \"sponsor\",\n        \"value\" => \"Shopify\",\n        \"type\" => \"single_line_text_field\",\n        \"namespace\" => \"global\"\n    ]\n];\n$blog->save();"
            }
          ]
        }
      ],
      "url": "/admin/api/#{api_version}/blogs.json",
      "action": "post"
    },
    {
      "description": "Get a count of all blogs",
      "summary": "Receive a count of all Blogs",
      "operationId": "ReceiveacountofallBlogs",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Receive a count of all Blogs",
          "content": {
            "application/json": {
              "examples": {
                "Get the blogs count for a shop": {
                  "value": {
                    "count": 2
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs/count.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/unstable/blogs/count.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"count\":2}"
          },
          "name": "Get the blogs count for a shop",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs/count.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Blog.count(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Blog.count({\n  session: test_session,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nBlog::count(\n    $this->test_session, // Session\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/#{api_version}/blogs/count.json",
      "action": "get"
    },
    {
      "description": "Get a single blog by its ID",
      "summary": "Receive a single Blog",
      "operationId": "ReceiveasingleBlog",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "blog_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "fields",
          "description": "comma-separated list of fields to include in the response",
          "in": "query",
          "schema": {
            "type": "x-string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Receive a single Blog",
          "content": {
            "application/json": {
              "examples": {
                "Get a single blog": {
                  "value": {
                    "blog": {
                      "id": 241253187,
                      "handle": "apple-blog",
                      "title": "Mah Blog",
                      "updated_at": "2006-02-01T17:00:00-07:00",
                      "commentable": "no",
                      "feedburner": null,
                      "feedburner_location": null,
                      "created_at": "2022-04-05T10:51:55-06:00",
                      "template_suffix": null,
                      "tags": "Announcing, Mystery",
                      "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/241253187"
                    }
                  }
                },
                "Get the id and title of a single blog": {
                  "value": {
                    "blog": {
                      "id": 241253187,
                      "title": "Mah Blog"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs/241253187.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/unstable/blogs/241253187.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"blog\":{\"id\":241253187,\"handle\":\"apple-blog\",\"title\":\"Mah Blog\",\"updated_at\":\"2006-02-01T19:00:00-05:00\",\"commentable\":\"no\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:51:55-04:00\",\"template_suffix\":null,\"tags\":\"Announcing, Mystery\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/241253187\"}}"
          },
          "name": "Get a single blog",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs/241253187.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Blog.find(\n  session: test_session,\n  id: 241253187,\n)"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Blog.find({\n  session: test_session,\n  id: 241253187,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nBlog::find(\n    $this->test_session, // Session\n    241253187, // Id\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "fields=id%2Ctitle",
          "request_path": "/admin/api/2022-04/blogs/241253187.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/unstable/blogs/241253187.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"blog\":{\"id\":241253187,\"title\":\"Mah Blog\"}}"
          },
          "name": "Get the id and title of a single blog",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs/241253187.json?fields=id%2Ctitle\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Blog.find(\n  session: test_session,\n  id: 241253187,\n  fields: \"id,title\",\n)"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Blog.find({\n  session: test_session,\n  id: 241253187,\n  fields: \"id,title\",\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nBlog::find(\n    $this->test_session, // Session\n    241253187, // Id\n    [], // Url Ids\n    [\"fields\" => \"id,title\"], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/#{api_version}/blogs/{blog_id}.json",
      "action": "get"
    },
    {
      "description": "Update a blog",
      "summary": "Modify an existing Blog",
      "operationId": "ModifyanexistingBlog",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "blog_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Modify an existing Blog",
          "content": {
            "application/json": {
              "examples": {
                "Update an existing blog title": {
                  "value": {
                    "blog": {
                      "title": "IPod Updates",
                      "handle": "apple-blog",
                      "id": 241253187,
                      "updated_at": "2022-04-05T10:54:10-06:00",
                      "commentable": "no",
                      "feedburner": null,
                      "feedburner_location": null,
                      "created_at": "2022-04-05T10:51:55-06:00",
                      "template_suffix": null,
                      "tags": "Announcing, Mystery",
                      "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/241253187"
                    }
                  }
                },
                "Update an existing blog title and handle and also activate comments": {
                  "value": {
                    "blog": {
                      "title": "IPod Updates",
                      "handle": "ipod-updates",
                      "commentable": "moderate",
                      "id": 241253187,
                      "updated_at": "2022-04-05T10:54:11-06:00",
                      "feedburner": null,
                      "feedburner_location": null,
                      "created_at": "2022-04-05T10:51:55-06:00",
                      "template_suffix": null,
                      "tags": "Announcing, Mystery",
                      "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/241253187"
                    }
                  }
                },
                "Add a metafield to an existing blog": {
                  "value": {
                    "blog": {
                      "title": "Mah Blog",
                      "handle": "apple-blog",
                      "id": 241253187,
                      "updated_at": "2022-04-05T10:54:12-06:00",
                      "commentable": "no",
                      "feedburner": null,
                      "feedburner_location": null,
                      "created_at": "2022-04-05T10:51:55-06:00",
                      "template_suffix": null,
                      "tags": "Announcing, Mystery",
                      "admin_graphql_api_id": "gid://shopify/OnlineStoreBlog/241253187"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs/241253187.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/2021-07/blogs/241253187.json",
            "headers": {},
            "body": "{\"blog\":{\"id\":241253187,\"title\":\"IPod Updates\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"blog\":{\"title\":\"IPod Updates\",\"handle\":\"apple-blog\",\"id\":241253187,\"updated_at\":\"2022-04-05T12:54:10-04:00\",\"commentable\":\"no\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:51:55-04:00\",\"template_suffix\":null,\"tags\":\"Announcing, Mystery\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/241253187\"}}"
          },
          "name": "Update an existing blog title",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"blog\":{\"id\":241253187,\"title\":\"IPod Updates\"}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs/241253187.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nblog = ShopifyAPI::Blog.new(session: test_session)\nblog.id = 241253187\nblog.title = \"IPod Updates\"\nblog.save()"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst blog = new Blog({session: test_session});\nblog.id = 241253187;\nblog.title = \"IPod Updates\";\nawait blog.save({});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$blog = new Blog($this->test_session);\n$blog->id = 241253187;\n$blog->title = \"IPod Updates\";\n$blog->save();"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs/241253187.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/2021-07/blogs/241253187.json",
            "headers": {},
            "body": "{\"blog\":{\"id\":241253187,\"title\":\"IPod Updates\",\"handle\":\"ipod-updates\",\"commentable\":\"moderate\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"blog\":{\"title\":\"IPod Updates\",\"handle\":\"ipod-updates\",\"commentable\":\"moderate\",\"id\":241253187,\"updated_at\":\"2022-04-05T12:54:11-04:00\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:51:55-04:00\",\"template_suffix\":null,\"tags\":\"Announcing, Mystery\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/241253187\"}}"
          },
          "name": "Update an existing blog title and handle and also activate comments",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"blog\":{\"id\":241253187,\"title\":\"IPod Updates\",\"handle\":\"ipod-updates\",\"commentable\":\"moderate\"}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs/241253187.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nblog = ShopifyAPI::Blog.new(session: test_session)\nblog.id = 241253187\nblog.title = \"IPod Updates\"\nblog.handle = \"ipod-updates\"\nblog.commentable = \"moderate\"\nblog.save()"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst blog = new Blog({session: test_session});\nblog.id = 241253187;\nblog.title = \"IPod Updates\";\nblog.handle = \"ipod-updates\";\nblog.commentable = \"moderate\";\nawait blog.save({});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$blog = new Blog($this->test_session);\n$blog->id = 241253187;\n$blog->title = \"IPod Updates\";\n$blog->handle = \"ipod-updates\";\n$blog->commentable = \"moderate\";\n$blog->save();"
            }
          ]
        },
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs/241253187.json",
          "request_method": "PUT",
          "request": {
            "action": "PUT /admin/api/2021-07/blogs/241253187.json",
            "headers": {},
            "body": "{\"blog\":{\"id\":241253187,\"metafields\":[{\"key\":\"sponsor\",\"value\":\"Shopify\",\"type\":\"single_line_text_field\",\"namespace\":\"global\"}]}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"blog\":{\"title\":\"Mah Blog\",\"handle\":\"apple-blog\",\"id\":241253187,\"updated_at\":\"2022-04-05T12:54:12-04:00\",\"commentable\":\"no\",\"feedburner\":null,\"feedburner_location\":null,\"created_at\":\"2022-04-05T12:51:55-04:00\",\"template_suffix\":null,\"tags\":\"Announcing, Mystery\",\"admin_graphql_api_id\":\"gid://shopify/OnlineStoreBlog/241253187\"}}"
          },
          "name": "Add a metafield to an existing blog",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"blog\":{\"id\":241253187,\"metafields\":[{\"key\":\"sponsor\",\"value\":\"Shopify\",\"type\":\"single_line_text_field\",\"namespace\":\"global\"}]}}' \\\n-X PUT \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs/241253187.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nblog = ShopifyAPI::Blog.new(session: test_session)\nblog.id = 241253187\nblog.metafields = [\n  {\n    \"key\" => \"sponsor\",\n    \"value\" => \"Shopify\",\n    \"type\" => \"single_line_text_field\",\n    \"namespace\" => \"global\"\n  }\n]\nblog.save()"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst blog = new Blog({session: test_session});\nblog.id = 241253187;\nblog.metafields = [\n  {\n    \"key\": \"sponsor\",\n    \"value\": \"Shopify\",\n    \"type\": \"single_line_text_field\",\n    \"namespace\": \"global\"\n  }\n];\nawait blog.save({});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$blog = new Blog($this->test_session);\n$blog->id = 241253187;\n$blog->metafields = [\n    [\n        \"key\" => \"sponsor\",\n        \"value\" => \"Shopify\",\n        \"type\" => \"single_line_text_field\",\n        \"namespace\" => \"global\"\n    ]\n];\n$blog->save();"
            }
          ]
        }
      ],
      "url": "/admin/api/#{api_version}/blogs/{blog_id}.json",
      "action": "put"
    },
    {
      "description": "Delete a blog",
      "summary": "Remove an existing Blog",
      "operationId": "RemoveanexistingBlog",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "blog_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Remove an existing Blog",
          "content": {
            "application/json": {
              "examples": {
                "Remove an existing blog from a shop": {
                  "value": {}
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-04/blogs/241253187.json",
          "request_method": "DELETE",
          "request": {
            "action": "DELETE /admin/api/unstable/blogs/241253187.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{}"
          },
          "name": "Remove an existing blog from a shop",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X DELETE \"https://your-development-store.myshopify.com/admin/api/2022-04/blogs/241253187.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::Blog.delete(\n  session: test_session,\n  id: 241253187,\n)"
            },
            {
              "language": "node",
              "example_code": "import {Blog} from '@shopify/shopify-api/dist/rest-resources/2022-04/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait Blog.delete({\n  session: test_session,\n  id: 241253187,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_04\\Blog;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nBlog::delete(\n    $this->test_session, // Session\n    241253187, // Id\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/#{api_version}/blogs/{blog_id}.json",
      "action": "delete"
    }
  ],
  "components": [
    {
      "name": "Blog",
      "title": "Blog",
      "type": "object",
      "properties": [
        {
          "description": "        <p>Indicates whether readers can post comments to the blog and if comments are moderated or not. Possible values are:</p>\n        <ul>\n          <li><strong>no (default)</strong>: Readers cannot post comments to blog articles.</li>\n          <li><strong>moderate</strong>: Readers can post comments to blog articles, but comments must be moderated before they appear.</li>\n          <li><strong>yes</strong>: Readers can post comments to blog articles without moderation.</li>\n        </ul>\n",
          "type": "x-string",
          "example": "no",
          "name": "commentable"
        },
        {
          "description": "The date and time when the blog was created. The API returns this value in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).",
          "type": "x-string",
          "readOnly": true,
          "example": "2012-03-13T14:09:54-06:00",
          "name": "created_at"
        },
        {
          "description": "FeedBurner is a web feed management provider and can be enabled to provide custom RSS feeds for Shopify bloggers. Google has stopped supporting FeedBurner, and new or existing blogs that are not already integrated with FeedBurner can't use the service. This property will default to blank unless FeedBurner is enabled.",
          "type": "x-string",
          "example": null,
          "name": "feedburner"
        },
        {
          "description": "The URL that points to the FeedBurner location for blogs that have FeedBurner enabled. Google has stopped supporting FeedBurner, and new or existing blogs that are not already integrated with FeedBurner can't use the service. This property will default to blank unless FeedBurner is enabled",
          "type": "x-string",
          "example": null,
          "name": "feedburner_location"
        },
        {
          "description": "A human-friendly unique string that is automatically generated from the title if no handle is sent during the creation of a blog. Duplicate handles are appended with an incremental number, for example, `blog-2`. The handle is customizable and is used by the Liquid templating language to refer to the blog. If you change the handle of a blog, then it can negatively affect the SEO of the shop. We recommend that you create a URL redirect to avoid any SEO issues.",
          "type": "x-string",
          "example": "apple-blog",
          "name": "handle"
        },
        {
          "description": "A unique numeric identifier for the blog.",
          "type": "x-string",
          "readOnly": true,
          "example": 241253187,
          "name": "id"
        },
        {
          "description": "          <p>Attaches additional metadata to a store's resources:</p>\n          <ul>\n            <li><strong>key (required)</strong>: Identifier for the metafield (maximum of 30 characters).</li>\n            <li><strong>namespace (required)</strong>: Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters).</li>\n            <li><strong>value (required)</strong>: Information to be stored as metadata.</li>\n            <li><strong>type (required)</strong>: The metafield's information type. Refer to the <a href=\"/apps/metafields/types\">full list of types</a>.</li>\n            <li><strong>description (optional)</strong>: Additional information about the metafield.</li>\n          </ul>\n          <p>For more information on attaching metadata to Shopify resources, see the <a href=\"/api/admin-rest/latest/resources/metafield\">Metafield</a> resource.</p>\n",
          "type": "array",
          "items": {
            "type": "object"
          },
          "writeOnly": true,
          "example": [
            {
              "key": "sponsor",
              "value": "Shopify",
              "value_type": "string",
              "namespace": "global",
              "description": "The blog sponsor"
            }
          ],
          "name": "metafields"
        },
        {
          "description": "A list of tags associated with the 200 most recent blog articles. Tags are additional short descriptors formatted as a string of comma-separated values. For example, if an article has three tags: tag1, tag2, tag3. Tags are limited to 255 characters.",
          "type": "x-string",
          "readOnly": true,
          "example": "tagged",
          "name": "tags"
        },
        {
          "description": "States the name of the template a blog is using if it is using an alternate template. If a blog is using the default blog.liquid template, the value returned is \"null\".",
          "type": "x-string",
          "example": null,
          "name": "template_suffix"
        },
        {
          "description": "The title of the blog.",
          "type": "x-string",
          "example": "My Blog",
          "name": "title"
        },
        {
          "description": "The date and time when changes were last made to the blog's properties. Note that this is not updated when creating, modifying or deleting articles in the blog. The API returns this value in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 format</a>.",
          "type": "x-string",
          "readOnly": true,
          "example": "2021-12-01T11:52:12-07:00",
          "name": "updated_at"
        },
        {
          "description": "The GraphQL GID of the blog.",
          "type": "x-string",
          "readOnly": true,
          "example": "gid://shopify/OnlineStoreBlog/241253187",
          "name": "admin_graphql_api_id"
        }
      ],
      "required": null
    }
  ],
  "x-shopify-meta": {
    "channels": false,
    "file_name": "online-store/blog",
    "gid": "c30d6145-cad5-46b2-8e10-f44767a7e28b",
    "glossary": false,
    "hidden": false,
    "legacy-urls": [
      "/api/reference/blog",
      "/api/reference/online_store/blog"
    ],
    "meta_description": "Create, edit, and delete a store's blogs. Each store can have multiple blogs, and each blog can have many articles (blog posts). Use the Article API to manage each blog's articles.",
    "postman_group": "Online store",
    "keywords": [
      "api"
    ],
    "api_versioning": true,
    "shopify_plus": false,
    "weight": null,
    "usage-notes": null
  }
}
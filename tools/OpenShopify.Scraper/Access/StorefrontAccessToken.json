{
  "openapi": "3.0.0",
  "info": {
    "title": "StorefrontAccessToken",
    "description": "    <p>You can use the StorefrontAccessToken resource to generate storefront access tokens. Storefront access tokens are\n    used to delegate unauthenticated access scopes to clients that need to access the unautheticated Storefront API. A sales channel\n    can generate a storefront access token and then pass it to a consuming client, such as JavaScript or a mobile application.</p>\n\n    <div class=\"note\">\n      <h4>Note</h4>\n      <p>Storefront access tokens are allocated on a per shop basis, and an application can have a maximum of 100 active Storefront access tokens per shop.</p>\n    </div>\n\n    <p>A storefront access token inherits all of the <a\n    href=\"/docs/storefront-api/access-scopes\">unauthenticated access\n    scopes</a> from the app that creates it. If the app has not been granted any unauthenticated access scopes, then\n    creating the storefront access token will fail.</p>\n\n",
    "x-owner": "https://vault.shopify.io/teams/2628",
    "x-description-list": null,
    "version": "2022-07"
  },
  "paths": [
    {
      "description": "Creates a new storefront access token",
      "summary": "Creates a new StorefrontAccessToken",
      "operationId": "CreatesanewStorefrontAccessToken",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Creates a new StorefrontAccessToken",
          "content": {
            "application/json": {
              "examples": {
                "Create a new storefront access token": {
                  "value": {
                    "storefront_access_token": {
                      "access_token": "acb63aef87d74a49eb3f4b994a5e342b",
                      "access_scope": "unauthenticated_read_product_listings",
                      "created_at": "2022-04-05T10:56:06-06:00",
                      "id": 1003303990,
                      "admin_graphql_api_id": "gid://shopify/StorefrontAccessToken/1003303990",
                      "title": "Test"
                    }
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Creates a new StorefrontAccessToken",
          "content": {
            "application/json": {
              "examples": {
                "Generating a token for an app that lacks required unauthenticated scopes fails": {
                  "value": {
                    "errors": "App must be extendable to create a storefront access token."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Creates a new StorefrontAccessToken",
          "content": {
            "application/json": {
              "examples": {
                "Creating a token after exceeding the limit fails": {
                  "value": {
                    "errors": [
                      "Api permission exceeds public access token limit of: 100"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/storefront_access_tokens.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/unstable/storefront_access_tokens.json",
            "headers": {},
            "body": "{\"storefront_access_token\":{\"title\":\"Test\"}}"
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"storefront_access_token\":{\"access_token\":\"acb63aef87d74a49eb3f4b994a5e342b\",\"access_scope\":\"unauthenticated_read_product_listings\",\"created_at\":\"2022-04-05T12:56:06-04:00\",\"id\":1003303990,\"admin_graphql_api_id\":\"gid://shopify/StorefrontAccessToken/1003303990\",\"title\":\"Test\"}}"
          },
          "name": "Create a new storefront access token",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"storefront_access_token\":{\"title\":\"Test\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-07/storefront_access_tokens.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nstorefront_access_token = ShopifyAPI::StorefrontAccessToken.new(session: test_session)\nstorefront_access_token.title = \"Test\"\nstorefront_access_token.save!"
            },
            {
              "language": "node",
              "example_code": "import {StorefrontAccessToken} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst storefront_access_token = new StorefrontAccessToken({session: test_session});\nstorefront_access_token.title = \"Test\";\nawait storefront_access_token.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\StorefrontAccessToken;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$storefront_access_token = new StorefrontAccessToken($this->test_session);\n$storefront_access_token->title = \"Test\";\n$storefront_access_token->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "403",
          "request_query": "",
          "request_path": "/admin/api/2022-07/storefront_access_tokens.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/unstable/storefront_access_tokens.json",
            "headers": {},
            "body": "{\"storefront_access_token\":{\"title\":\"Test\"}}"
          },
          "response": {
            "action": "HTTP/1.1 403 Forbidden",
            "headers": {},
            "body": "{\"errors\":\"App must be extendable to create a storefront access token.\"}"
          },
          "name": "Generating a token for an app that lacks required unauthenticated scopes fails",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"storefront_access_token\":{\"title\":\"Test\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-07/storefront_access_tokens.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nstorefront_access_token = ShopifyAPI::StorefrontAccessToken.new(session: test_session)\nstorefront_access_token.title = \"Test\"\nstorefront_access_token.save!"
            },
            {
              "language": "node",
              "example_code": "import {StorefrontAccessToken} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst storefront_access_token = new StorefrontAccessToken({session: test_session});\nstorefront_access_token.title = \"Test\";\nawait storefront_access_token.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\StorefrontAccessToken;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$storefront_access_token = new StorefrontAccessToken($this->test_session);\n$storefront_access_token->title = \"Test\";\n$storefront_access_token->save(\n    true, // Update Object\n);"
            }
          ]
        },
        {
          "status": "400",
          "request_query": "",
          "request_path": "/admin/api/2022-07/storefront_access_tokens.json",
          "request_method": "POST",
          "request": {
            "action": "POST /admin/api/unstable/storefront_access_tokens.json",
            "headers": {},
            "body": "{\"storefront_access_token\":{\"title\":\"Token\"}}"
          },
          "response": {
            "action": "HTTP/1.1 400 Bad Request",
            "headers": {},
            "body": "{\"errors\":[\"Api permission exceeds public access token limit of: 100\"]}"
          },
          "name": "Creating a token after exceeding the limit fails",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -d '{\"storefront_access_token\":{\"title\":\"Token\"}}' \\\n-X POST \"https://your-development-store.myshopify.com/admin/api/2022-07/storefront_access_tokens.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\" \\\n-H \"Content-Type: application/json\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nstorefront_access_token = ShopifyAPI::StorefrontAccessToken.new(session: test_session)\nstorefront_access_token.title = \"Token\"\nstorefront_access_token.save!"
            },
            {
              "language": "node",
              "example_code": "import {StorefrontAccessToken} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nconst storefront_access_token = new StorefrontAccessToken({session: test_session});\nstorefront_access_token.title = \"Token\";\nawait storefront_access_token.save({\n  update: true,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\StorefrontAccessToken;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\n$storefront_access_token = new StorefrontAccessToken($this->test_session);\n$storefront_access_token->title = \"Token\";\n$storefront_access_token->save(\n    true, // Update Object\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/{api_version}/storefront_access_tokens.json",
      "action": "post"
    },
    {
      "description": "Retrieves a list of storefront access tokens that have been issued",
      "summary": "Retrieves a list of storefront access tokens that have been issued",
      "operationId": "Retrievesalistofstorefrontaccesstokensthathavebeenissued",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Retrieves a list of storefront access tokens that have been issued",
          "content": {
            "application/json": {
              "examples": {
                "Retrieve a list of storefront access tokens that have been issued": {
                  "value": {
                    "storefront_access_tokens": [
                      {
                        "access_token": "378d95641257a4ab3feff967ee234f4d",
                        "access_scope": "unauthenticated_read_product_listings",
                        "created_at": "2022-04-05T10:51:55-06:00",
                        "id": 755357713,
                        "admin_graphql_api_id": "gid://shopify/StorefrontAccessToken/755357713",
                        "title": "API Client Extension"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/storefront_access_tokens.json",
          "request_method": "GET",
          "request": {
            "action": "GET /admin/api/unstable/storefront_access_tokens.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": "{\"storefront_access_tokens\":[{\"access_token\":\"378d95641257a4ab3feff967ee234f4d\",\"access_scope\":\"unauthenticated_read_product_listings\",\"created_at\":\"2022-04-05T12:51:55-04:00\",\"id\":755357713,\"admin_graphql_api_id\":\"gid://shopify/StorefrontAccessToken/755357713\",\"title\":\"API Client Extension\"}]}"
          },
          "name": "Retrieve a list of storefront access tokens that have been issued",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X GET \"https://your-development-store.myshopify.com/admin/api/2022-07/storefront_access_tokens.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::StorefrontAccessToken.all(\n  session: test_session,\n)"
            },
            {
              "language": "node",
              "example_code": "import {StorefrontAccessToken} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait StorefrontAccessToken.all({\n  session: test_session,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\StorefrontAccessToken;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nStorefrontAccessToken::all(\n    $this->test_session, // Session\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/{api_version}/storefront_access_tokens.json",
      "action": "get"
    },
    {
      "description": "Deletes an existing storefront access token",
      "summary": "Deletes an existing storefront access token",
      "operationId": "Deletesanexistingstorefrontaccesstoken",
      "parameters": [
        {
          "name": "api_version",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "storefront_access_token_id",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Deletes an existing storefront access token",
          "content": {
            "application/json": {
              "examples": {
                "Delete an existing storefront access token": {
                  "value": ""
                }
              }
            }
          }
        }
      },
      "x-examples": [
        {
          "status": "200",
          "request_query": "",
          "request_path": "/admin/api/2022-07/storefront_access_tokens/755357713.json",
          "request_method": "DELETE",
          "request": {
            "action": "DELETE /admin/api/unstable/storefront_access_tokens/755357713.json",
            "headers": {},
            "body": ""
          },
          "response": {
            "action": "HTTP/1.1 200 OK",
            "headers": {},
            "body": ""
          },
          "name": "Delete an existing storefront access token",
          "codeSamples": [
            {
              "language": "curl",
              "example_code": "curl -X DELETE \"https://your-development-store.myshopify.com/admin/api/2022-07/storefront_access_tokens/755357713.json\" \\\n-H \"X-Shopify-Access-Token: {access_token}\"\n"
            },
            {
              "language": "ruby",
              "example_code": "test_session = ShopifyAPI::Utils::SessionUtils.load_current_session(\n  auth_header: request.auth_header,\n  cookies: request.cookies,\n  is_online: true\n)\n\nShopifyAPI::StorefrontAccessToken.delete(\n  session: test_session,\n  id: 755357713,\n)"
            },
            {
              "language": "node",
              "example_code": "import {StorefrontAccessToken} from '@shopify/shopify-api/dist/rest-resources/2022-07/index.js';\n\nconst test_session = await Shopify.Utils.loadCurrentSession(request, response);\n\nawait StorefrontAccessToken.delete({\n  session: test_session,\n  id: 755357713,\n});"
            },
            {
              "language": "php",
              "example_code": "use Shopify\\Rest\\Admin2022_07\\StorefrontAccessToken;\nuse Shopify\\Utils;\n\n$this->test_session = Utils::loadCurrentSession(\n    $requestHeaders,\n    $requestCookies,\n    $isOnline\n);\n\nStorefrontAccessToken::delete(\n    $this->test_session, // Session\n    755357713, // Id\n    [], // Url Ids\n    [], // Params\n);"
            }
          ]
        }
      ],
      "url": "/admin/api/{api_version}/storefront_access_tokens/{storefront_access_token_id}.json",
      "action": "delete"
    }
  ],
  "components": [
    {
      "name": "StorefrontAccessToken",
      "title": "StorefrontAccessToken",
      "type": "object",
      "properties": [
        {
          "description": "Unique <code>id</code> that identifies a token and is used to perform operations on it.",
          "type": "string",
          "readOnly": true,
          "example": {
            "id": 1053727709
          },
          "name": "id"
        },
        {
          "description": "The issued public access token.",
          "type": "string",
          "readOnly": true,
          "example": {
            "access_token": "4f12cc6de73079c2c92ef4bef9e3c68a"
          },
          "name": "access_token"
        },
        {
          "description": "An application-dependant, comma separated list of permissions associated with the token.",
          "type": "string",
          "readOnly": true,
          "example": {
            "access_scope": "unauthenticated_read_product_listings"
          },
          "name": "access_scope"
        },
        {
          "description": "The date and time when the public access token was created. The API returns this value in <a href='//en.wikipedia.org/wiki/ISO_8601' target=\"_blank\">ISO 8601 format</a>.",
          "type": "string",
          "readOnly": true,
          "example": {
            "created_at": "2016-11-10T13:15:47-07:00"
          },
          "name": "created_at"
        },
        {
          "description": "        An arbitrary title for each token determined by the developer/application, used for reference purposes.\n        <div class=\"note\">\n          <h4>Note</h4>\n          <p>No constraint on uniqueness.</p>\n        </div>\n",
          "type": "string",
          "example": {
            "title": "Test"
          },
          "name": "title"
        }
      ],
      "required": [
        "title"
      ]
    }
  ],
  "x-shopify-meta": {
    "channels": false,
    "file_name": "access/storefrontaccesstoken",
    "gid": "d797a956-c3a7-4d2e-abd9-2119350dcb4a",
    "glossary": false,
    "hidden": false,
    "legacy-urls": [
      "/api/reference/storefrontaccesstoken",
      "/api/reference/storefront_access_token"
    ],
    "meta_description": "Generate a storefront access token to access the Storefront API.",
    "postman_group": "Access",
    "keywords": [
      "api"
    ],
    "api_versioning": true,
    "shopify_plus": false,
    "weight": null,
    "usage-notes": null
  },
  "personal_data_fields": []
}